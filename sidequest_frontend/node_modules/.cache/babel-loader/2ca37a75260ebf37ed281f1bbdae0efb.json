{"ast":null,"code":"var _jsxFileName = \"/Users/dan/Desktop/SideQuest/sidequest_frontend/src/AllCharacters.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport NavBar from './NavBar';\n\nclass AllCaracters extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      characters: []\n    };\n\n    this.handleLogout = () => {\n      localStorage.clear();\n      this.props.history.push('/login');\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/users/\".concat(this.props.currentUser.id)).then(r => r.json()).then(user => this.setState({\n      characters: user.characters\n    }));\n  }\n\n  render() {\n    console.log(this.state);\n    const characters = this.state.characters.map(character => character.class[0].name && character.race[0].name ? React.createElement(\"div\", {\n      className: \"box\",\n      key: character.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Name: \", character.name), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Race: \", character.race[0].name), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Class: \", character.class[0].name), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Level: \", character.level), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Alignment: \", character.alignment)) : fetch(\"http://localhost:3000/characters\".concat(character.id), {\n      method: 'DELETE'\n    }).then(r => r.json).then(console.log));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Logout\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"All Characters:\"), characters);\n  }\n\n}\n\nconst mapStateToProps = store => {\n  return {\n    currentUser: store.currentUser,\n    newCharClass: store.newCharClass,\n    newCharRace: store.newCharRace,\n    stats: store.stats,\n    mods: store.mods,\n    skills: store.skills\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    LogIn: loggedInUser => {\n      dispatch({\n        type: 'LOGIN_CURRENT_USER',\n        user: loggedInUser\n      });\n    },\n    AddClass: charClass => {\n      dispatch({\n        type: 'ADD_CLASS',\n        attribute: charClass\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AllCaracters);","map":{"version":3,"sources":["/Users/dan/Desktop/SideQuest/sidequest_frontend/src/AllCharacters.js"],"names":["React","connect","NavBar","AllCaracters","Component","state","characters","handleLogout","localStorage","clear","props","history","push","componentDidMount","fetch","currentUser","id","then","r","json","user","setState","render","console","log","map","character","class","name","race","level","alignment","method","mapStateToProps","store","newCharClass","newCharRace","stats","mods","skills","mapDispatchToProps","dispatch","LogIn","loggedInUser","type","AddClass","charClass","attribute"],"mappings":"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","sourcesContent":["import React from  'react'\nimport { connect } from 'react-redux'\nimport NavBar from './NavBar'\n\n\n\nclass AllCaracters extends React.Component{\n\n    state = {\n        characters: []\n    }\n    \n    componentDidMount(){\n        fetch(`http://localhost:3000/users/${this.props.currentUser.id}`)\n        .then(r => r.json()).then(user => this.setState({\n            characters: user.characters\n        }))\n    }\n\n    handleLogout = () => {\n        localStorage.clear()\n        this.props.history.push('/login')\n    }\n\n\n\n    render(){\n        console.log(this.state)\n        const characters = this.state.characters.map(character => character.class[0].name && character.race[0].name ? \n        <div className=\"box\" key={character.id}>\n            <h2>Name: {character.name}</h2>\n            <h3>Race: {character.race[0].name}</h3>\n            <h3>Class: {character.class[0].name}</h3>\n            <h4>Level: {character.level}</h4>\n            <h4>Alignment: {character.alignment}</h4>\n        </div>\n        :\n        fetch(`http://localhost:3000/characters${character.id}`,{\n            method: 'DELETE'\n        }).then(r => r.json).then(console.log))\n        return(\n            <div>\n                <NavBar />\n                <button onClick={this.handleLogout}>Logout</button>\n                <h1>All Characters:</h1>\n                {characters}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (store) => {\n    return {\n        currentUser: store.currentUser,\n        newCharClass: store.newCharClass,\n        newCharRace: store.newCharRace,\n        stats: store.stats,\n        mods: store.mods,\n        skills: store.skills\n    }\n}\n  \nconst mapDispatchToProps = (dispatch) => {\n    return {\n      LogIn: (loggedInUser) => {\n        dispatch({ type: 'LOGIN_CURRENT_USER', user: loggedInUser })\n      },\n      AddClass: (charClass) => {\n          dispatch({ type: 'ADD_CLASS', attribute: charClass })\n      }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AllCaracters);"]},"metadata":{},"sourceType":"module"}