{"ast":null,"code":"var _jsxFileName = \"/Users/dan/Desktop/SideQuest/sidequest_frontend/src/NewClass.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport ClassInfo from './ClassInfo';\n\nclass NewClass extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allClasses: [],\n      currentClass: 'barbarian'\n    };\n\n    this.handleChange = e => {\n      const newClass = e.target.value;\n      this.setState({\n        currentClass: newClass\n      });\n    };\n\n    this.saveClass = charClass => {\n      this.props.AddClass(charClass);\n      console.log(this.props);\n    };\n\n    this.handleNext = () => {\n      fetch('http://localhost:3000/characters', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          name: this.state.characterName,\n          level: 1,\n          alignment: this.state.characterAlignment,\n          user_id: this.props.currentUser.id\n        })\n      }).then(r => r.json()).then(character => this.setState({\n        character_id: character.id\n      }, () => {\n        fetch('http://localhost:3000/character_classes', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          body: JSON.stringify({\n            character_id: this.state.character_id,\n            name: this.props.newCharClass.name,\n            desc: this.props.newCharClass.desc,\n            hit_dice: this.props.newCharClass.hit_dice,\n            armor_prof: this.props.newCharClass.armor_prof,\n            prof_weapons: this.props.newCharClass.prof_weapons,\n            prof_tools: this.props.newCharClass.prof_tools,\n            prof_saving_throws: this.props.newCharClass.prof_saving_throws,\n            prof_skills: this.props.newCharClass.prof_skills,\n            equipment: this.props.newCharClass.equipment,\n            spellcast_ability: this.props.newCharClass.spellcasting_ability\n          })\n        }).then(r => r.json()).then(this.props.history.push('NewRace'));\n      }));\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/profile', {\n      headers: {\n        'Authorization': \"Bearer \".concat(localStorage.token)\n      }\n    }).then(res => res.json()).then(user => this.props.LogIn(user));\n    fetch('https://api-beta.open5e.com/classes/').then(r => r.json()).then(data => this.setState({\n      allClasses: data.results\n    }));\n  }\n\n  render() {\n    console.log(this.props);\n    const classComps = this.state.allClasses.map(charClass => React.createElement(ClassInfo, {\n      key: charClass.id,\n      saveClass: this.saveClass,\n      charClass: charClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Choose Your Class:\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Currently Selected: \", this.props.newCharClass ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.props.newCharClass.name, \" \", React.createElement(\"button\", {\n      onClick: this.handleNext,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Confirm\")) : null), React.createElement(\"select\", {\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"barbarian\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Barbarian\"), React.createElement(\"option\", {\n      value: \"bard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Bard\"), React.createElement(\"option\", {\n      value: \"cleric\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Cleric\"), React.createElement(\"option\", {\n      value: \"druid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Druid\"), React.createElement(\"option\", {\n      value: \"fighter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Fighter\"), React.createElement(\"option\", {\n      value: \"monk\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Monk\"), React.createElement(\"option\", {\n      value: \"paladin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Paladin\"), React.createElement(\"option\", {\n      value: \"ranger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Ranger\"), React.createElement(\"option\", {\n      value: \"rogue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Rogue\"), React.createElement(\"option\", {\n      value: \"sorcerer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Sorcerer\"), React.createElement(\"option\", {\n      value: \"warlock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Warlock\"), React.createElement(\"option\", {\n      value: \"wizard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Wizard\")), this.state.currentClass === 'barbarian' ? classComps[0] : null, this.state.currentClass === 'bard' ? classComps[1] : null, this.state.currentClass === 'cleric' ? classComps[2] : null, this.state.currentClass === 'druid' ? classComps[3] : null, this.state.currentClass === 'fighter' ? classComps[4] : null, this.state.currentClass === 'monk' ? classComps[5] : null, this.state.currentClass === 'paladin' ? classComps[6] : null, this.state.currentClass === 'ranger' ? classComps[7] : null, this.state.currentClass === 'rogue' ? classComps[8] : null, this.state.currentClass === 'sorcerer' ? classComps[9] : null, this.state.currentClass === 'warlock' ? classComps[10] : null, this.state.currentClass === 'wizard' ? classComps[11] : null);\n  }\n\n}\n\nconst mapStateToProps = store => {\n  return {\n    currentUser: store.currentUser,\n    newCharClass: store.newCharClass\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    LogIn: loggedInUser => {\n      dispatch({\n        type: 'LOGIN_CURRENT_USER',\n        user: loggedInUser\n      });\n    },\n    AddClass: charClass => {\n      dispatch({\n        type: 'ADD_CLASS',\n        attribute: charClass\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewClass);","map":{"version":3,"sources":["/Users/dan/Desktop/SideQuest/sidequest_frontend/src/NewClass.js"],"names":["React","connect","ClassInfo","NewClass","Component","state","allClasses","currentClass","handleChange","e","newClass","target","value","setState","saveClass","charClass","props","AddClass","console","log","handleNext","fetch","method","headers","body","JSON","stringify","name","characterName","level","alignment","characterAlignment","user_id","currentUser","id","then","r","json","character","character_id","newCharClass","desc","hit_dice","armor_prof","prof_weapons","prof_tools","prof_saving_throws","prof_skills","equipment","spellcast_ability","spellcasting_ability","history","push","componentDidMount","localStorage","token","res","user","LogIn","data","results","render","classComps","map","mapStateToProps","store","mapDispatchToProps","dispatch","loggedInUser","type","attribute"],"mappings":"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","sourcesContent":["import React from  'react'\nimport { connect } from 'react-redux'\nimport ClassInfo from './ClassInfo'\n\n\nclass NewClass extends React.Component{\n    state = {\n        allClasses: [],\n        currentClass: 'barbarian'\n    }\n\n    componentDidMount(){\n        fetch('http://localhost:3000/profile',{\n        headers: {\n          'Authorization': `Bearer ${localStorage.token}`\n        }\n        })\n        .then(res => res.json())\n        .then(user => this.props.LogIn(user)\n        )\n        fetch('https://api-beta.open5e.com/classes/')\n        .then(r => r.json())\n        .then(data => this.setState({\n            allClasses: data.results\n        }))\n    }\n\n    handleChange = (e) =>{\n        const newClass = e.target.value\n        this.setState({\n            currentClass: newClass\n        })\n    }\n\n    saveClass = (charClass) => {\n        this.props.AddClass(charClass)\n        console.log(this.props)\n    }\n\n    handleNext = () => {\n        fetch('http://localhost:3000/characters', {\n            method: 'POST',\n            headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n            },\n            body: JSON.stringify({\n                name: this.state.characterName,\n                level: 1,\n                alignment: this.state.characterAlignment,\n                user_id: this.props.currentUser.id\n            })\n        }).then(r => r.json()).then(character => this.setState({\n            character_id: character.id\n        },() => {fetch('http://localhost:3000/character_classes', {\n                method: 'POST',\n                headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n                },\n                body: JSON.stringify({\n                    character_id: this.state.character_id,\n                    name: this.props.newCharClass.name,\n                    desc: this.props.newCharClass.desc,\n                    hit_dice: this.props.newCharClass.hit_dice, \n                    armor_prof: this.props.newCharClass.armor_prof,\n                    prof_weapons: this.props.newCharClass.prof_weapons,\n                    prof_tools: this.props.newCharClass.prof_tools,\n                    prof_saving_throws: this.props.newCharClass.prof_saving_throws,\n                    prof_skills: this.props.newCharClass.prof_skills,\n                    equipment: this.props.newCharClass.equipment,\n                    spellcast_ability: this.props.newCharClass.spellcasting_ability\n                })\n            }).then(r => r.json()).then(this.props.history.push('NewRace'))}))\n    }\n\n\n\n    render(){\n        console.log(this.props)\n        const classComps = this.state.allClasses.map(charClass => <ClassInfo key={charClass.id} saveClass={this.saveClass} charClass={charClass} /> )\n        return(\n            <div>\n                <h1>Choose Your Class:</h1>\n                <h2>Currently Selected: {this.props.newCharClass ? <div>{this.props.newCharClass.name} <button onClick={this.handleNext}>Confirm</button></div> : null}</h2>\n                <select onChange={this.handleChange}>\n                    <option value=\"barbarian\">Barbarian</option>\n                    <option value=\"bard\">Bard</option>\n                    <option value=\"cleric\">Cleric</option>\n                    <option value=\"druid\">Druid</option>\n                    <option value=\"fighter\">Fighter</option>\n                    <option value=\"monk\">Monk</option>\n                    <option value=\"paladin\">Paladin</option>\n                    <option value=\"ranger\">Ranger</option>\n                    <option value=\"rogue\">Rogue</option>\n                    <option value=\"sorcerer\">Sorcerer</option>\n                    <option value=\"warlock\">Warlock</option>\n                    <option value=\"wizard\">Wizard</option>\n                </select>\n                {this.state.currentClass === 'barbarian' ? classComps[0] : null}\n                {this.state.currentClass === 'bard' ? classComps[1] : null}\n                {this.state.currentClass === 'cleric' ? classComps[2] : null}\n                {this.state.currentClass === 'druid' ? classComps[3] : null}\n                {this.state.currentClass === 'fighter' ? classComps[4] : null}\n                {this.state.currentClass === 'monk' ? classComps[5] : null}\n                {this.state.currentClass === 'paladin' ? classComps[6] : null}\n                {this.state.currentClass === 'ranger' ? classComps[7] : null}\n                {this.state.currentClass === 'rogue' ? classComps[8] : null}\n                {this.state.currentClass === 'sorcerer' ? classComps[9] : null}\n                {this.state.currentClass === 'warlock' ? classComps[10] : null}\n                {this.state.currentClass === 'wizard' ? classComps[11] : null}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (store) => {\n    return {\n      currentUser: store.currentUser,\n      newCharClass: store.newCharClass\n    }\n}\n  \nconst mapDispatchToProps = (dispatch) => {\n    return {\n      LogIn: (loggedInUser) => {\n        dispatch({ type: 'LOGIN_CURRENT_USER', user: loggedInUser })\n      },\n      AddClass: (charClass) => {\n          dispatch({ type: 'ADD_CLASS', attribute: charClass })\n      }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewClass);"]},"metadata":{},"sourceType":"module"}