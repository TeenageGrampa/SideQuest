{"ast":null,"code":"var _jsxFileName = \"/Users/dan/Desktop/SideQuest/sidequest_frontend/sidequest/src/StatRoll.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport ReactDice from 'react-dice-complete';\nimport StatDist from './StatDist';\nimport 'react-dice-complete/dist/react-dice-complete.css';\n\nclass NewCharacter extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      strength: 0,\n      dexterity: 0,\n      constitution: 0,\n      intelligence: 0,\n      wisdom: 0,\n      charisma: 0,\n      statRoll: [],\n      statVal: []\n    };\n\n    this.rollDoneCallback = () => {\n      if (this.state.statRoll.length === 4) {\n        return;\n      } else {\n        // console.log(`You rolled a ${num}`)\n        const num = Math.floor(Math.random() * 6) + 1;\n        this.setState({\n          statRoll: [...this.state.statRoll, num]\n        });\n        this.statValCheck();\n      }\n    };\n\n    this.statValCheck = () => {\n      if (this.state.statRoll.length === 4) {\n        const smallest = Math.min.apply(null, this.state.statRoll);\n        const pos = this.state.statRoll.indexOf(smallest);\n        const topThree = this.state.statRoll.slice(0, pos).concat(this.state.statRoll.slice(pos + 1));\n        const statVal = topThree.reduce((a, b) => a + b, 0);\n        this.setState({\n          statVal: [...this.state.statVal, statVal],\n          statRoll: []\n        });\n      } else {\n        return;\n      }\n    };\n\n    this.getStat = stat => {\n      this.setState({\n        [stat]: this.state.statVal[0],\n        statVal: this.state.statVal.concat(this.state.statVal.splice(0, 1))\n      });\n    };\n\n    this.handleNext = () => {\n      this.props.AddStrength(this.state.strength);\n      this.props.AddDexterity(this.state.dexterity);\n      this.props.AddConstitution(this.state.constitution);\n      this.props.AddIntelligence(this.state.intelligence);\n      this.props.AddWisdom(this.state.wisdom);\n      this.props.AddCharisma(this.state.strength);\n      this.props.history.push('./CharacterSheet');\n    };\n  }\n\n  componentDidMount() {\n    const asi = this.props.newCharRace.asi.map(asi => asi);\n    console.log(asi);\n    const asiAtr = asi.map(asiAtr => asiAtr.attributes[0].toLowerCase());\n\n    for (let i = 0; i < asiAtr.length; i++) {\n      this.setState({\n        [asiAtr[i]]: asi[i].value\n      });\n    }\n  }\n\n  rollAll() {\n    this.reactDice.rollAll();\n  }\n\n  render() {\n    console.log(this.state);\n    const asi = this.props.newCharRace.asi.map(asi => React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, asi.attributes, \" - \", asi.value));\n    return React.createElement(\"div\", {\n      className: \"columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Roll Your Stats:\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Chosen Race: \", this.props.newCharRace.name), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Chosen Class: \", this.props.newCharClass.name), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Ability score increases: \", asi), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Stats:\"), this.state.strength > 0 && this.state.charisma > 0 && this.state.constitution > 0 && this.state.intelligence > 0 && this.state.wisdom > 0 && this.state.dexterity > 0 ? React.createElement(\"button\", {\n      onClick: this.handleNext,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Confirm\") : null, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Strength\"), React.createElement(\"li\", {\n      className: \"box\",\n      style: {\n        width: 60\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.state.strength), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Dexterity\"), React.createElement(\"li\", {\n      className: \"box\",\n      style: {\n        width: 60\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.state.dexterity), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Constitution\"), React.createElement(\"li\", {\n      className: \"box\",\n      style: {\n        width: 60\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, this.state.constitution), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Intelligence\"), React.createElement(\"li\", {\n      className: \"box\",\n      style: {\n        width: 60\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, this.state.intelligence), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Wisdom\"), React.createElement(\"li\", {\n      className: \"box\",\n      style: {\n        width: 60\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, this.state.wisdom), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Charisma\"), React.createElement(\"li\", {\n      className: \"box\",\n      style: {\n        width: 60\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, this.state.charisma)), \" \"), React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(ReactDice, {\n      numDice: 1,\n      rollDone: this.rollDoneCallback,\n      ref: dice => this.reactDice = dice,\n      faceColor: '#696969',\n      dotColor: '#D3D3D3',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(ReactDice, {\n      numDice: 1,\n      rollDone: this.rollDoneCallback,\n      ref: dice => this.reactDice = dice,\n      faceColor: '#696969',\n      dotColor: '#D3D3D3',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })), this.state.statVal && this.state.statVal.length < 6 ? React.createElement(\"div\", {\n      style: {\n        paddingTop: 400,\n        paddingRight: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Your Rolls: \", this.state.statVal.map(stat => \"\".concat(stat, \" \")))) : null, this.state.statVal.length === 6 ? React.createElement(\"div\", {\n      style: {\n        paddingTop: 400,\n        paddingRight: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Your Rolls: \", this.state.statVal.map(stat => \"\".concat(stat, \" \"))), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Add \", this.state.statVal[0], \" to: \"), React.createElement(StatDist, {\n      statVals: this.state.statVal,\n      wisdom: this.state.wisdom,\n      strength: this.state.strength,\n      charisma: this.state.charisma,\n      intelligence: this.state.intelligence,\n      dexterity: this.state.dexterity,\n      constitution: this.state.constitution,\n      getStat: this.getStat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })) : null, React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(ReactDice, {\n      numDice: 1,\n      rollDone: this.rollDoneCallback,\n      ref: dice => this.reactDice = dice,\n      faceColor: '#696969',\n      dotColor: '#D3D3D3',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(ReactDice, {\n      numDice: 1,\n      rollDone: this.rollDoneCallback,\n      ref: dice => this.reactDice = dice,\n      faceColor: '#696969',\n      dotColor: '#D3D3D3',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = store => {\n  return {\n    currentUser: store.currentUser,\n    newCharClass: store.newCharClass,\n    newCharRace: store.newCharRace,\n    strength: store.strength,\n    constitution: store.constitution,\n    dexterity: store.dexterity,\n    intelligence: store.intelligence,\n    wisdom: store.wisdom,\n    charisma: store.charisma\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    LogIn: loggedInUser => {\n      dispatch({\n        type: 'LOGIN_CURRENT_USER',\n        user: loggedInUser\n      });\n    },\n    AddRace: charRace => {\n      dispatch({\n        type: 'ADD_Race',\n        attribute: charRace\n      });\n    },\n    AddStrength: stat => {\n      dispatch({\n        type: 'ADD_strength',\n        strength: stat\n      });\n    },\n    AddDexterity: stat => {\n      dispatch({\n        type: 'ADD_dexterity',\n        dexterity: stat\n      });\n    },\n    AddConstitution: stat => {\n      dispatch({\n        type: 'ADD_constitution',\n        constitution: stat\n      });\n    },\n    AddIntelligence: stat => {\n      dispatch({\n        type: 'ADD_intelligence',\n        intelligence: stat\n      });\n    },\n    AddWisdom: stat => {\n      dispatch({\n        type: 'ADD_wisdom',\n        wisdom: stat\n      });\n    },\n    AddCharisma: stat => {\n      dispatch({\n        type: 'ADD_charisma',\n        charisma: stat\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCharacter);","map":{"version":3,"sources":["/Users/dan/Desktop/SideQuest/sidequest_frontend/sidequest/src/StatRoll.js"],"names":["React","connect","ReactDice","StatDist","NewCharacter","Component","state","strength","dexterity","constitution","intelligence","wisdom","charisma","statRoll","statVal","rollDoneCallback","length","num","Math","floor","random","setState","statValCheck","smallest","min","apply","pos","indexOf","topThree","slice","concat","reduce","a","b","getStat","stat","splice","handleNext","props","AddStrength","AddDexterity","AddConstitution","AddIntelligence","AddWisdom","AddCharisma","history","push","componentDidMount","asi","newCharRace","map","console","log","asiAtr","attributes","toLowerCase","i","value","rollAll","reactDice","render","name","newCharClass","width","dice","paddingTop","paddingRight","mapStateToProps","store","currentUser","mapDispatchToProps","dispatch","LogIn","loggedInUser","type","user","AddRace","charRace","attribute"],"mappings":"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","sourcesContent":["import React from  'react'\nimport { connect } from 'react-redux'\nimport ReactDice from 'react-dice-complete'\nimport StatDist from './StatDist'\nimport 'react-dice-complete/dist/react-dice-complete.css'\n\n\nclass NewCharacter extends React.Component{\n    state = {\n        strength: 0,\n        dexterity: 0,\n        constitution: 0,\n        intelligence: 0,\n        wisdom: 0,\n        charisma: 0,\n        statRoll: [],\n        statVal: []\n    }\n\n    componentDidMount(){\n        const asi = this.props.newCharRace.asi.map(asi => asi)\n        console.log(asi)\n        const asiAtr = asi.map(asiAtr => asiAtr.attributes[0].toLowerCase())\n        for(let i = 0; i < asiAtr.length; i++){\n            this.setState({\n                [asiAtr[i]]: asi[i].value\n            })\n        }\n    }\n\n    rollAll() {\n        this.reactDice.rollAll()\n        \n    }\n\n     \n    rollDoneCallback = () => {\n        if(this.state.statRoll.length === 4){\n            return\n            \n        } else {\n            // console.log(`You rolled a ${num}`)\n            const num = Math.floor(Math.random() * 6) + 1\n            this.setState({\n                statRoll: [...this.state.statRoll, num]\n            })\n            this.statValCheck()\n        }\n    }\n\n    statValCheck = () => {\n        if(this.state.statRoll.length === 4){\n            const smallest = Math.min.apply(null, this.state.statRoll)\n            const pos = this.state.statRoll.indexOf(smallest)\n            const topThree = this.state.statRoll.slice(0, pos).concat(this.state.statRoll.slice(pos + 1))\n            const statVal = topThree.reduce((a, b) => a + b, 0)\n            this.setState({\n                statVal: [...this.state.statVal, statVal],\n                statRoll: []\n            })\n        } else {\n            return\n        }\n    }\n\n    getStat =(stat) => {\n        this.setState({\n            [stat]: this.state.statVal[0],\n            statVal: this.state.statVal.concat(this.state.statVal.splice(0, 1))\n        })\n    }\n\n    handleNext = () => {\n        this.props.AddStrength(this.state.strength)\n        this.props.AddDexterity(this.state.dexterity)\n        this.props.AddConstitution(this.state.constitution)\n        this.props.AddIntelligence(this.state.intelligence)\n        this.props.AddWisdom(this.state.wisdom)\n        this.props.AddCharisma(this.state.strength)\n        this.props.history.push('./CharacterSheet')\n    }\n\n\n    render(){\n            console.log(this.state)\n            const asi = this.props.newCharRace.asi.map(asi => <p>{asi.attributes} - {asi.value}</p>)\n        return(\n            <div className=\"columns\">\n                <div className=\"column\">\n                <h1>Roll Your Stats:</h1>\n                <h2>Chosen Race: {this.props.newCharRace.name}</h2>\n                <h2>Chosen Class: {this.props.newCharClass.name}</h2>\n                <h2>Ability score increases: {asi}</h2>\n                <ul>\n                <h2>Stats:</h2>{this.state.strength > 0 &&\n                this.state.charisma > 0 &&\n                this.state.constitution > 0 &&\n                this.state.intelligence > 0 &&\n                this.state.wisdom > 0 &&\n                this.state.dexterity > 0 ?\n                <button onClick={this.handleNext}>Confirm</button> : null\n                }\n                <li>Strength</li>\n                <li className=\"box\" style={{width: 60}}>{this.state.strength}</li>\n                <li>Dexterity</li>\n                <li className=\"box\" style={{width: 60}}>{this.state.dexterity}</li>\n                <li>Constitution</li>\n                <li className=\"box\" style={{width: 60}}>{this.state.constitution}</li>\n                <li>Intelligence</li>\n                <li className=\"box\" style={{width: 60}}>{this.state.intelligence}</li>\n                <li>Wisdom</li>\n                <li className=\"box\" style={{width: 60}}>{this.state.wisdom}</li>\n                <li>Charisma</li>\n                <li className=\"box\" style={{width: 60}}>{this.state.charisma}</li>\n                </ul> </div>\n                <div className=\"column\">\n                <ReactDice\n                    numDice={1}\n                    rollDone={this.rollDoneCallback}\n                    ref={dice => this.reactDice = dice}\n                    faceColor={'#696969'}\n                    dotColor={'#D3D3D3'}\n                    />\n                </div>\n                <div className=\"column\">\n                <ReactDice\n                    numDice={1}\n                    rollDone={this.rollDoneCallback}\n                    ref={dice => this.reactDice = dice}\n                    faceColor={'#696969'}\n                    dotColor={'#D3D3D3'}\n                    />\n                </div>\n                {this.state.statVal && this.state.statVal.length < 6 ? \n                    <div style={{paddingTop: 400, paddingRight: 100}}>\n                        <h1>Your Rolls: {this.state.statVal.map(stat => `${stat} `)}</h1>\n                    </div>  \n                    : null  \n                }\n                {this.state.statVal.length === 6 ? \n                <div style={{paddingTop: 400, paddingRight: 100}}>\n                    <h1>Your Rolls: {this.state.statVal.map(stat => `${stat} `)}</h1>\n                    <h2>Add {this.state.statVal[0]} to: </h2>\n                    <StatDist statVals={this.state.statVal} wisdom={this.state.wisdom} strength={this.state.strength} charisma={this.state.charisma} intelligence={this.state.intelligence} dexterity={this.state.dexterity} constitution={this.state.constitution} getStat={this.getStat}/>\n                </div> \n                : null\n                }\n                <div className=\"column\">\n                <ReactDice\n                    numDice={1}\n                    rollDone={this.rollDoneCallback}\n                    ref={dice => this.reactDice = dice}\n                    faceColor={'#696969'}\n                    dotColor={'#D3D3D3'}\n                    />\n                </div>\n                <div className=\"column\">\n                <ReactDice\n                    numDice={1}\n                    rollDone={this.rollDoneCallback}\n                    ref={dice => this.reactDice = dice}\n                    faceColor={'#696969'}\n                    dotColor={'#D3D3D3'}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (store) => {\n    return {\n      currentUser: store.currentUser,\n      newCharClass: store.newCharClass,\n      newCharRace: store.newCharRace,\n      strength: store.strength,\n      constitution: store.constitution,\n      dexterity: store.dexterity,\n      intelligence: store.intelligence,\n      wisdom: store.wisdom,\n      charisma: store.charisma\n    }\n}\n  \nconst mapDispatchToProps = (dispatch) => {\n    return {\n      LogIn: (loggedInUser) => {\n        dispatch({ type: 'LOGIN_CURRENT_USER', user: loggedInUser })\n      },\n      AddRace: (charRace) => {\n          dispatch({ type: 'ADD_Race', attribute: charRace })\n      },\n      AddStrength: (stat) => {\n          dispatch({ type: 'ADD_strength', strength: stat})\n      },\n      AddDexterity: (stat) => {\n          dispatch({ type: 'ADD_dexterity', dexterity: stat})\n      },\n      AddConstitution: (stat) => {\n        dispatch({ type: 'ADD_constitution', constitution: stat})\n      },\n      AddIntelligence: (stat) => {\n        dispatch({ type: 'ADD_intelligence', intelligence: stat})\n      },\n      AddWisdom: (stat) => {\n        dispatch({ type: 'ADD_wisdom', wisdom: stat})\n      },\n      AddCharisma: (stat) => {\n        dispatch({ type: 'ADD_charisma', charisma: stat})\n      }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCharacter);"]},"metadata":{},"sourceType":"module"}