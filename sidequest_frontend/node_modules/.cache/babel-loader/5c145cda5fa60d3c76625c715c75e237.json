{"ast":null,"code":"import _defineProperty from \"/Users/dan/Desktop/SideQuest/sidequest_frontend/sidequest/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport default ((state = {\n  currentUser: {},\n  newCharClass: {}\n}, action) => {\n  switch (action.type) {\n    case \"LOGIN_CURRENT_USER\":\n      return _objectSpread({}, state, {\n        currentUser: action.user\n      });\n\n    case \"ADD_CLASS\":\n      return _objectSpread({}, state, {\n        newCharClass: action.attribute\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/dan/Desktop/SideQuest/sidequest_frontend/sidequest/src/reducers/rootReducer.js"],"names":["state","currentUser","newCharClass","action","type","user","attribute"],"mappings":";;;;;;AAAA,gBAAe,CAACA,KAAK,GAAG;AACpBC,EAAAA,WAAW,EAAE,EADO;AAEpBC,EAAAA,YAAY,EAAE;AAFM,CAAT,EAGZC,MAHY,KAGD;AAEV,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,oBAAL;AACE,+BAAYJ,KAAZ;AAAmBC,QAAAA,WAAW,EAAEE,MAAM,CAACE;AAAvC;;AACF,SAAK,WAAL;AACE,+BAAYL,KAAZ;AAAmBE,QAAAA,YAAY,EAAEC,MAAM,CAACG;AAAxC;;AAEF;AACE,aAAON,KAAP;AAPJ;AASD,CAdH","sourcesContent":["export default (state = { \n    currentUser: {}, \n    newCharClass: {} \n}, action) => {\n  \n    switch (action.type) {\n      case \"LOGIN_CURRENT_USER\":\n        return { ...state, currentUser: action.user }\n      case \"ADD_CLASS\":\n        return { ...state, newCharClass: action.attribute }\n  \n      default:\n        return state\n    }\n  }\n  "]},"metadata":{},"sourceType":"module"}