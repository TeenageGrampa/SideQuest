{"ast":null,"code":"var _jsxFileName = \"/Users/dan/Desktop/SideQuest/sidequest_frontend/src/NavBar.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { connect } from 'react-redux';\nimport { Router, Route, Link } from 'react-router-dom';\nimport { race } from 'q';\n\nclass NavBar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      AllCharacters: []\n    };\n\n    this.checkCharacters = () => {\n      fetch(\"http://localhost:3000/users/\".concat(this.props.currentUser.id)).then(r => r.json()).then(user => this.setState({\n        AllCharacters: user.characters\n      }, () => {\n        for (let i = 0; i < this.state.AllCharacters.length; i++) {\n          if (this.state.AllCharacters[i].race.length > 0 && this.state.AllCharacters[i].class.length > 0) {\n            console.log('checked');\n          } else {\n            fetch(\"http://localhost:3000/characters/\".concat(this.state.AllCharacters[i].id), {\n              method: 'DELETE'\n            }).then(r => r.json()).then(console.log('deleted'));\n          }\n        }\n      }));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"columns container box\",\n      style: {\n        marginTop: 30,\n        marginLeft: 350,\n        backgroundImage: \"url(http://fanaru.com/fantasy-art/image/232259-fantasy-art-a-burning-rose.gif)\",\n        backgroundSize: 'cover'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"column button is-white is-small\",\n      style: {\n        marginLeft: 50,\n        marginRight: 50\n      },\n      to: {\n        pathname: './profile'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Profile Page\"), React.createElement(Link, {\n      className: \"column button is-white is-small\",\n      to: {\n        pathname: './NewGame'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"New Game\"), React.createElement(Link, {\n      className: \"column button is-white is-small\",\n      to: {\n        pathname: './AllCharacters'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"All Characters\"), React.createElement(Link, {\n      className: \"column button is-white is-small\",\n      to: {\n        pathname: './AllGames'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"All Games\"), React.createElement(Link, {\n      className: \"column button is-white is-small\",\n      to: {\n        pathname: './NewClass'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Create New Character\"));\n  }\n\n}\n\nconst mapStateToProps = store => {\n  return {\n    currentUser: store.currentUser,\n    newCharClass: store.newCharClass,\n    newCharRace: store.newCharRace,\n    stats: store.stats,\n    mods: store.mods,\n    skills: store.skills\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    LogIn: loggedInUser => {\n      dispatch({\n        type: 'LOGIN_CURRENT_USER',\n        user: loggedInUser\n      });\n    },\n    AddClass: charClass => {\n      dispatch({\n        type: 'ADD_CLASS',\n        attribute: charClass\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);","map":{"version":3,"sources":["/Users/dan/Desktop/SideQuest/sidequest_frontend/src/NavBar.js"],"names":["React","render","connect","Router","Route","Link","race","NavBar","Component","state","AllCharacters","checkCharacters","fetch","props","currentUser","id","then","r","json","user","setState","characters","i","length","class","console","log","method","marginTop","marginLeft","backgroundImage","backgroundSize","marginRight","pathname","mapStateToProps","store","newCharClass","newCharRace","stats","mods","skills","mapDispatchToProps","dispatch","LogIn","loggedInUser","type","AddClass","charClass","attribute"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { render } from 'react-dom'\nimport { connect } from 'react-redux'\nimport { Router, Route, Link } from 'react-router-dom'\nimport { race } from 'q'\n\nclass NavBar extends React.Component{\n\n    state = {\n        AllCharacters: []\n    }\n\n\n    // componentWillUnmount(){\n    //     fetch(`http://localhost:3000/users/${this.props.currentUser.id}`)\n    //     .then(r => r.json())\n    //     .then(user => this.setState({\n    //         AllCharacters: user.characters\n    //     }, () => {\n    //         for(let i = 0; i < this.state.AllCharacters.length; i++){\n    //             if(this.state.AllCharacters[i].race.length > 0 && this.state.AllCharacters[i].class.length > 0){\n    //                 console.log('checked')\n    //             } else {\n    //                 fetch(`http://localhost:3000/characters/${this.state.AllCharacters[i].id}`, {\n    //                     method: 'DELETE'\n    //                 }).then(r => r.json()).then(console.log('deleted'))\n    //             }\n    //         }\n    //     }))\n    // }\n\n    checkCharacters = () => {\n        fetch(`http://localhost:3000/users/${this.props.currentUser.id}`)\n        .then(r => r.json())\n        .then(user => this.setState({\n            AllCharacters: user.characters\n        }, () => {\n            for(let i = 0; i < this.state.AllCharacters.length; i++){\n                if(this.state.AllCharacters[i].race.length > 0 && this.state.AllCharacters[i].class.length > 0){\n                    console.log('checked')\n                } else {\n                    fetch(`http://localhost:3000/characters/${this.state.AllCharacters[i].id}`, {\n                        method: 'DELETE'\n                    }).then(r => r.json()).then(console.log('deleted'))\n                }\n            }\n        }))\n    }\n    \n\n\n    render(){\n        return(\n            <div className=\"columns container box\" style={{marginTop: 30, marginLeft: 350, backgroundImage: `url(http://fanaru.com/fantasy-art/image/232259-fantasy-art-a-burning-rose.gif)`, backgroundSize: 'cover'}}>\n                    <Link className=\"column button is-white is-small\" style={{marginLeft: 50, marginRight: 50}}to={{pathname:'./profile'}} >Profile Page</Link>\n                    <Link className=\"column button is-white is-small\" to={{pathname:'./NewGame'}} >New Game</Link>\n                    <Link className=\"column button is-white is-small\" to={{pathname:'./AllCharacters'}} >All Characters</Link>\n                    <Link className=\"column button is-white is-small\" to={{pathname:'./AllGames'}} >All Games</Link>\n                    <Link className=\"column button is-white is-small\" to={{pathname:'./NewClass'}} >Create New Character</Link>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (store) => {\n    return {\n        currentUser: store.currentUser,\n        newCharClass: store.newCharClass,\n        newCharRace: store.newCharRace,\n        stats: store.stats,\n        mods: store.mods,\n        skills: store.skills\n    }\n}\n  \nconst mapDispatchToProps = (dispatch) => {\n    return {\n      LogIn: (loggedInUser) => {\n        dispatch({ type: 'LOGIN_CURRENT_USER', user: loggedInUser })\n      },\n      AddClass: (charClass) => {\n          dispatch({ type: 'ADD_CLASS', attribute: charClass })\n      }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);"]},"metadata":{},"sourceType":"module"}