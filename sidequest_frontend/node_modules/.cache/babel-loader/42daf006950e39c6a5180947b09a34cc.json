{"ast":null,"code":"var _jsxFileName = \"/Users/dan/Desktop/SideQuest/sidequest_frontend/sidequest/src/NewCharacter.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport ClassInfo from './ClassInfo';\n\nclass NewCharacter extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allClasses: [],\n      currentClass: 'barbarian'\n    };\n\n    this.handleChange = e => {\n      const newClass = e.target.value;\n      this.setState({\n        currentClass: newClass\n      });\n    };\n\n    this.showClass = () => {\n      const classComps = this.state.allClasses.map(charClass => React.createElement(ClassInfo, {\n        key: charClass.id,\n        charClass: charClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }));\n\n      switch (this.state.currentClass) {\n        case 'barbarian':\n          return 0;\n\n        case 'bard':\n          return classComps[1];\n\n        case 'cleric':\n          return classComps[2];\n\n        case 'druid':\n          return classComps[3];\n\n        case 'fighter':\n          return classComps[4];\n\n        case 'monk':\n          return classComps[5];\n\n        case 'paladin':\n          return classComps[6];\n\n        case 'ranger':\n          return classComps[7];\n\n        case 'rogue':\n          return classComps[8];\n\n        case 'sorcerer':\n          return classComps[9];\n\n        case 'warlock':\n          return classComps[10];\n\n        case 'wizard':\n          return classComps[11];\n\n        default:\n          return classComps[0];\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/profile', {\n      headers: {\n        'Authorization': \"Bearer \".concat(localStorage.token)\n      }\n    }).then(res => res.json()).then(user => this.props.LogIn(user));\n    fetch('https://api-beta.open5e.com/classes/').then(r => r.json()).then(data => this.setState({\n      allClasses: data.results\n    }));\n  }\n\n  render() {\n    // console.log(this.state.currentClass)\n    const classComps = this.state.allClasses.map(charClass => React.createElement(ClassInfo, {\n      key: charClass.id,\n      charClass: charClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Choose Your Class:\"), React.createElement(\"select\", {\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"barbarian\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Barbarian\"), React.createElement(\"option\", {\n      value: \"bard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Bard\"), React.createElement(\"option\", {\n      value: \"cleric\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Cleric\"), React.createElement(\"option\", {\n      value: \"druid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Druid\"), React.createElement(\"option\", {\n      value: \"fighter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Fighter\"), React.createElement(\"option\", {\n      value: \"monk\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Monk\"), React.createElement(\"option\", {\n      value: \"paladin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Paladin\"), React.createElement(\"option\", {\n      value: \"ranger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Ranger\"), React.createElement(\"option\", {\n      value: \"rogue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Rogue\"), React.createElement(\"option\", {\n      value: \"sorcerer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Sorcerer\"), React.createElement(\"option\", {\n      value: \"warlock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Warlock\"), React.createElement(\"option\", {\n      value: \"wizard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Wizard\")), classComps[this.showClass]);\n  }\n\n}\n\nconst mapStateToProps = store => {\n  return {\n    currentUser: store.currentUser\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    LogIn: loggedInUser => {\n      dispatch({\n        type: 'LOGIN_CURRENT_USER',\n        user: loggedInUser\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCharacter);","map":{"version":3,"sources":["/Users/dan/Desktop/SideQuest/sidequest_frontend/sidequest/src/NewCharacter.js"],"names":["React","connect","ClassInfo","NewCharacter","Component","state","allClasses","currentClass","handleChange","e","newClass","target","value","setState","showClass","classComps","map","charClass","id","componentDidMount","fetch","headers","localStorage","token","then","res","json","user","props","LogIn","r","data","results","render","mapStateToProps","store","currentUser","mapDispatchToProps","dispatch","loggedInUser","type"],"mappings":"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","sourcesContent":["import React from  'react'\nimport { connect } from 'react-redux'\nimport ClassInfo from './ClassInfo'\n\n\nclass NewCharacter extends React.Component{\n    state = {\n        allClasses: [],\n        currentClass: 'barbarian'\n    }\n\n    componentDidMount(){\n        fetch('http://localhost:3000/profile',{\n        headers: {\n          'Authorization': `Bearer ${localStorage.token}`\n        }\n        })\n        .then(res => res.json())\n        .then(user => this.props.LogIn(user)\n        )\n        fetch('https://api-beta.open5e.com/classes/')\n        .then(r => r.json())\n        .then(data => this.setState({\n            allClasses: data.results\n        }))\n    }\n\n    handleChange = (e) =>{\n        const newClass = e.target.value\n        this.setState({\n            currentClass: newClass\n        })\n    }\n\n    showClass = () =>{\n        const classComps = this.state.allClasses.map(charClass => <ClassInfo key={charClass.id} charClass={charClass} /> )\n        switch(this.state.currentClass){\n            case 'barbarian':\n                return 0\n            case 'bard':\n                return classComps[1]\n            case 'cleric':\n                return classComps[2]\n            case 'druid':\n                return classComps[3]\n            case 'fighter':\n                return classComps[4]\n            case 'monk':\n                return classComps[5]\n            case 'paladin':\n                return classComps[6]\n            case 'ranger':\n                return classComps[7]\n            case 'rogue':\n                return classComps[8]\n            case 'sorcerer':\n                return classComps[9]\n            case 'warlock':\n                return classComps[10]\n            case 'wizard':\n                return classComps[11]\n\n            default:\n                return classComps[0]\n        }\n    }\n\n\n\n    render(){\n        // console.log(this.state.currentClass)\n        const classComps = this.state.allClasses.map(charClass => <ClassInfo key={charClass.id} charClass={charClass} /> )\n        return(\n            <div>\n                <h1>Choose Your Class:</h1>\n                <select onChange={this.handleChange}>\n                    <option value=\"barbarian\">Barbarian</option>\n                    <option value=\"bard\">Bard</option>\n                    <option value=\"cleric\">Cleric</option>\n                    <option value=\"druid\">Druid</option>\n                    <option value=\"fighter\">Fighter</option>\n                    <option value=\"monk\">Monk</option>\n                    <option value=\"paladin\">Paladin</option>\n                    <option value=\"ranger\">Ranger</option>\n                    <option value=\"rogue\">Rogue</option>\n                    <option value=\"sorcerer\">Sorcerer</option>\n                    <option value=\"warlock\">Warlock</option>\n                    <option value=\"wizard\">Wizard</option>\n                </select>\n                {classComps[this.showClass]}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (store) => {\n    return {\n      currentUser: store.currentUser\n    }\n}\n  \nconst mapDispatchToProps = (dispatch) => {\n    return {\n      LogIn: (loggedInUser) => {\n        dispatch({ type: 'LOGIN_CURRENT_USER', user: loggedInUser })\n      }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCharacter);"]},"metadata":{},"sourceType":"module"}