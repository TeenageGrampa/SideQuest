{"ast":null,"code":"import _defineProperty from \"/Users/dan/Desktop/SideQuest/sidequest_frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/dan/Desktop/SideQuest/sidequest_frontend/src/StatRoll.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport ReactDice from 'react-dice-complete';\nimport StatDist from './StatDist';\nimport 'react-dice-complete/dist/react-dice-complete.css';\n\nclass NewCharacter extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      stats: {\n        strength: 0,\n        dexterity: 0,\n        constitution: 0,\n        intelligence: 0,\n        wisdom: 0,\n        charisma: 0\n      },\n      statRoll: [],\n      statVal: []\n    };\n\n    this.rollDoneCallback = () => {\n      if (this.state.statRoll.length === 4) {\n        return;\n      } else {\n        const num = Math.floor(Math.random() * 6) + 1;\n        this.setState({\n          statRoll: [...this.state.statRoll, num]\n        });\n        this.statValCheck();\n      }\n    };\n\n    this.statValCheck = () => {\n      if (this.state.statRoll.length === 4) {\n        const smallest = Math.min.apply(null, this.state.statRoll);\n        const pos = this.state.statRoll.indexOf(smallest);\n        const topThree = this.state.statRoll.slice(0, pos).concat(this.state.statRoll.slice(pos + 1));\n        const statVal = topThree.reduce((a, b) => a + b, 0);\n        this.setState({\n          statVal: [...this.state.statVal, statVal],\n          statRoll: []\n        });\n      } else {\n        return;\n      }\n    };\n\n    this.getStat = stat => {\n      this.setState({\n        stats: _objectSpread({}, this.state.stats, {\n          [stat]: this.state.statVal[0] + this.state.stats[stat]\n        }),\n        statVal: this.state.statVal.concat(this.state.statVal.splice(0, 1))\n      });\n    };\n\n    this.handleNext = () => {\n      const strMod = this.calculateMod(this.state.stats.strength);\n      const dexMod = this.calculateMod(this.state.stats.dexterity);\n      const conMod = this.calculateMod(this.state.stats.constitution);\n      const intMod = this.calculateMod(this.state.stats.intelligence);\n      const wisMod = this.calculateMod(this.state.stats.wisdom);\n      const chrMod = this.calculateMod(this.state.stats.charisma);\n      this.props.AddStrength(this.state.stats.strength);\n      this.props.AddDexterity(this.state.stats.dexterity);\n      this.props.AddConstitution(this.state.stats.constitution);\n      this.props.AddIntelligence(this.state.stats.intelligence);\n      this.props.AddWisdom(this.state.stats.wisdom);\n      this.props.AddCharisma(this.state.stats.strength);\n      this.getModifiers(this.state.stats);\n      fetch('http://localhost:3000/character_mods', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          character_id: this.props.character_id,\n          strmod: strMod,\n          dexmod: dexMod,\n          conmod: conMod,\n          intmod: intMod,\n          wismod: wisMod,\n          chrmod: chrMod\n        })\n      }).then(r => r.json()).then(this.props.history.push('./NewCharacter')); // this.props.history.push('./NewCharacter')\n    };\n\n    this.getModifiers = stats => {\n      const strMod = this.calculateMod(stats.strength);\n      const dexMod = this.calculateMod(stats.dexterity);\n      const conMod = this.calculateMod(stats.constitution);\n      const intMod = this.calculateMod(stats.intelligence);\n      const wisMod = this.calculateMod(stats.wisdom);\n      const chrMod = this.calculateMod(stats.charisma);\n      this.props.AddMods({\n        strMod: strMod,\n        dexMod: dexMod,\n        conMod: conMod,\n        intMod: intMod,\n        wisMod: wisMod,\n        chrMod: chrMod\n      });\n    };\n\n    this.handleLogout = () => {\n      localStorage.clear();\n      this.props.history.push('/');\n    };\n\n    this.calculateMod = stat => {\n      if (stat <= 1) {\n        return -5;\n      } else if (2 <= stat && stat <= 3) {\n        return -4;\n      } else if (4 <= stat && stat <= 5) {\n        return -3;\n      } else if (6 <= stat && stat <= 7) {\n        return -2;\n      } else if (8 <= stat && stat <= 9) {\n        return -1;\n      } else if (10 <= stat && stat <= 11) {\n        return 0;\n      } else if (12 <= stat && stat <= 13) {\n        return 1;\n      } else if (14 <= stat && stat <= 15) {\n        return 2;\n      } else if (16 <= stat && stat <= 17) {\n        return 3;\n      } else if (18 <= stat && stat <= 19) {\n        return 4;\n      } else if (20 <= stat && stat <= 21) {\n        return 5;\n      } else if (22 <= stat && stat <= 23) {\n        return 6;\n      } else if (24 <= stat && stat <= 25) {\n        return 7;\n      } else if (26 <= stat && stat <= 27) {\n        return 8;\n      } else if (28 <= stat && stat <= 29) {\n        return 9;\n      } else if (30 <= stat) {\n        return 10;\n      }\n    };\n  }\n\n  componentDidMount() {\n    const asi = this.props.newCharRace.asi.map(asi => asi);\n    const asiAtr = asi.map(asiAtr => asiAtr.attributes[0].toLowerCase());\n    let stats = {\n      strength: 0,\n      dexterity: 0,\n      constitution: 0,\n      intelligence: 0,\n      wisdom: 0,\n      charisma: 0\n    };\n\n    for (let i = 0; i < asiAtr.length; i++) {\n      stats[asiAtr[i]] = asi[i].value;\n    }\n\n    this.setState({\n      stats: stats\n    });\n  }\n\n  rollAll() {\n    this.reactDice.rollAll();\n  }\n\n  render() {\n    const asi = this.props.newCharRace.asi.map(asi => React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, asi.attributes, \" - \", asi.value));\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Logout\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Roll Your Stats:\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Chosen Race: \", this.props.newCharRace.name), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Chosen Class: \", this.props.newCharClass.name), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Ability score increases: \", asi), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Stats:\"), this.state.stats.strength > 0 && this.state.stats.charisma > 0 && this.state.stats.constitution > 0 && this.state.stats.intelligence > 0 && this.state.stats.wisdom > 0 && this.state.stats.dexterity > 0 ? React.createElement(\"button\", {\n      onClick: this.handleNext,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Confirm\") : null, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Strength\"), React.createElement(\"li\", {\n      className: \"box\",\n      style: {\n        width: 60\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, this.state.stats.strength), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Dexterity\"), React.createElement(\"li\", {\n      className: \"box\",\n      style: {\n        width: 60\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, this.state.stats.dexterity), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Constitution\"), React.createElement(\"li\", {\n      className: \"box\",\n      style: {\n        width: 60\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, this.state.stats.constitution), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Intelligence\"), React.createElement(\"li\", {\n      className: \"box\",\n      style: {\n        width: 60\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, this.state.stats.intelligence), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Wisdom\"), React.createElement(\"li\", {\n      className: \"box\",\n      style: {\n        width: 60\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, this.state.stats.wisdom), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Charisma\"), React.createElement(\"li\", {\n      className: \"box\",\n      style: {\n        width: 60\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, this.state.stats.charisma)), \" \"), React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(ReactDice, {\n      numDice: 1,\n      rollDone: this.rollDoneCallback,\n      ref: dice => this.reactDice = dice,\n      faceColor: '#696969',\n      dotColor: '#D3D3D3',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(ReactDice, {\n      numDice: 1,\n      rollDone: this.rollDoneCallback,\n      ref: dice => this.reactDice = dice,\n      faceColor: '#696969',\n      dotColor: '#D3D3D3',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    })), this.state.statVal && this.state.statVal.length < 6 ? React.createElement(\"div\", {\n      style: {\n        paddingTop: 400,\n        paddingRight: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Your Rolls: \", this.state.statVal.map(stat => \"\".concat(stat, \" \")))) : null, this.state.statVal.length === 6 ? React.createElement(\"div\", {\n      style: {\n        paddingTop: 400,\n        paddingRight: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Your Rolls: \", this.state.statVal.map(stat => \"\".concat(stat, \" \"))), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Add \", this.state.statVal[0], \" to: \"), React.createElement(StatDist, {\n      statVals: this.state.statVal,\n      wisdom: this.state.wisdom,\n      strength: this.state.strength,\n      charisma: this.state.charisma,\n      intelligence: this.state.intelligence,\n      dexterity: this.state.dexterity,\n      constitution: this.state.constitution,\n      getStat: this.getStat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    })) : null, React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(ReactDice, {\n      numDice: 1,\n      rollDone: this.rollDoneCallback,\n      ref: dice => this.reactDice = dice,\n      faceColor: '#696969',\n      dotColor: '#D3D3D3',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(ReactDice, {\n      numDice: 1,\n      rollDone: this.rollDoneCallback,\n      ref: dice => this.reactDice = dice,\n      faceColor: '#696969',\n      dotColor: '#D3D3D3',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = store => {\n  return {\n    currentUser: store.currentUser,\n    newCharClass: store.newCharClass,\n    newCharRace: store.newCharRace,\n    mods: store.mods,\n    character_id: store.character_id\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    LogIn: loggedInUser => {\n      dispatch({\n        type: 'LOGIN_CURRENT_USER',\n        user: loggedInUser\n      });\n    },\n    AddRace: charRace => {\n      dispatch({\n        type: 'ADD_Race',\n        attribute: charRace\n      });\n    },\n    AddStrength: stat => {\n      dispatch({\n        type: 'ADD_strength',\n        strength: stat\n      });\n    },\n    AddDexterity: stat => {\n      dispatch({\n        type: 'ADD_dexterity',\n        dexterity: stat\n      });\n    },\n    AddConstitution: stat => {\n      dispatch({\n        type: 'ADD_constitution',\n        constitution: stat\n      });\n    },\n    AddIntelligence: stat => {\n      dispatch({\n        type: 'ADD_intelligence',\n        intelligence: stat\n      });\n    },\n    AddWisdom: stat => {\n      dispatch({\n        type: 'ADD_wisdom',\n        wisdom: stat\n      });\n    },\n    AddCharisma: stat => {\n      dispatch({\n        type: 'ADD_charisma',\n        charisma: stat\n      });\n    },\n    AddMods: mods => {\n      dispatch({\n        type: 'ADD_MODS',\n        mods\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCharacter);","map":{"version":3,"sources":["/Users/dan/Desktop/SideQuest/sidequest_frontend/src/StatRoll.js"],"names":["React","connect","ReactDice","StatDist","NewCharacter","Component","state","stats","strength","dexterity","constitution","intelligence","wisdom","charisma","statRoll","statVal","rollDoneCallback","length","num","Math","floor","random","setState","statValCheck","smallest","min","apply","pos","indexOf","topThree","slice","concat","reduce","a","b","getStat","stat","splice","handleNext","strMod","calculateMod","dexMod","conMod","intMod","wisMod","chrMod","props","AddStrength","AddDexterity","AddConstitution","AddIntelligence","AddWisdom","AddCharisma","getModifiers","fetch","method","headers","body","JSON","stringify","character_id","strmod","dexmod","conmod","intmod","wismod","chrmod","then","r","json","history","push","AddMods","handleLogout","localStorage","clear","componentDidMount","asi","newCharRace","map","asiAtr","attributes","toLowerCase","i","value","rollAll","reactDice","render","name","newCharClass","width","dice","paddingTop","paddingRight","mapStateToProps","store","currentUser","mods","mapDispatchToProps","dispatch","LogIn","loggedInUser","type","user","AddRace","charRace","attribute"],"mappings":"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","sourcesContent":["import React from  'react'\nimport { connect } from 'react-redux'\nimport ReactDice from 'react-dice-complete'\nimport StatDist from './StatDist'\nimport 'react-dice-complete/dist/react-dice-complete.css'\n\n\nclass NewCharacter extends React.Component{\n    state = {\n        stats: {\n            strength: 0,\n            dexterity: 0,\n            constitution: 0,\n            intelligence: 0,\n            wisdom: 0,\n            charisma: 0,\n        },\n        statRoll: [],\n        statVal: []\n    }\n    \n\n    componentDidMount(){\n        const asi = this.props.newCharRace.asi.map(asi => asi)\n        const asiAtr = asi.map(asiAtr => asiAtr.attributes[0].toLowerCase())\n        let stats = {strength: 0,\n            dexterity: 0,\n            constitution: 0,\n            intelligence: 0,\n            wisdom: 0,\n            charisma: 0}\n        for(let i = 0; i < asiAtr.length; i++){\n            stats[asiAtr[i]] = asi[i].value\n        }\n        this.setState({\n            stats: stats\n        })\n    }\n\n    rollAll() {\n        this.reactDice.rollAll()\n        \n    }\n\n     \n    rollDoneCallback = () => {\n        if(this.state.statRoll.length === 4){\n            return\n            \n        } else {\n            const num = Math.floor(Math.random() * 6) + 1\n            this.setState({\n                statRoll: [...this.state.statRoll, num]\n            })\n            this.statValCheck()\n        }\n    }\n\n    statValCheck = () => {\n        if(this.state.statRoll.length === 4){\n            const smallest = Math.min.apply(null, this.state.statRoll)\n            const pos = this.state.statRoll.indexOf(smallest)\n            const topThree = this.state.statRoll.slice(0, pos).concat(this.state.statRoll.slice(pos + 1))\n            const statVal = topThree.reduce((a, b) => a + b, 0)\n            this.setState({\n                statVal: [...this.state.statVal, statVal],\n                statRoll: []\n            })\n        } else {\n            return\n        }\n    }\n\n    getStat =(stat) => {\n        this.setState({\n            stats: {...this.state.stats, [stat]: this.state.statVal[0] + this.state.stats[stat]},\n            statVal: this.state.statVal.concat(this.state.statVal.splice(0, 1))\n        })\n    }\n\n    handleNext = () => {\n        const strMod = this.calculateMod(this.state.stats.strength)\n        const dexMod = this.calculateMod(this.state.stats.dexterity)\n        const conMod = this.calculateMod(this.state.stats.constitution)\n        const intMod = this.calculateMod(this.state.stats.intelligence)\n        const wisMod = this.calculateMod(this.state.stats.wisdom)\n        const chrMod = this.calculateMod(this.state.stats.charisma)\n        this.props.AddStrength(this.state.stats.strength)\n        this.props.AddDexterity(this.state.stats.dexterity)\n        this.props.AddConstitution(this.state.stats.constitution)\n        this.props.AddIntelligence(this.state.stats.intelligence)\n        this.props.AddWisdom(this.state.stats.wisdom)\n        this.props.AddCharisma(this.state.stats.strength)\n        this.getModifiers(this.state.stats)\n        fetch('http://localhost:3000/character_mods', {\n                method: 'POST',\n                headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n                },\n                body: JSON.stringify({\n                    character_id: this.props.character_id,\n                    strmod: strMod,\n                    dexmod: dexMod,\n                    conmod: conMod,\n                    intmod: intMod,\n                    wismod: wisMod,\n                    chrmod: chrMod\n                })\n            }).then(r => r.json()).then(this.props.history.push('./NewCharacter'))\n        // this.props.history.push('./NewCharacter')\n    }\n\n    getModifiers = (stats) => {\n        const strMod = this.calculateMod(stats.strength)\n        const dexMod = this.calculateMod(stats.dexterity)\n        const conMod = this.calculateMod(stats.constitution)\n        const intMod = this.calculateMod(stats.intelligence)\n        const wisMod = this.calculateMod(stats.wisdom)\n        const chrMod = this.calculateMod(stats.charisma)\n        this.props.AddMods({\n            strMod: strMod,\n            dexMod: dexMod,\n            conMod: conMod,\n            intMod: intMod,\n            wisMod: wisMod,\n            chrMod: chrMod\n        })\n    }\n\n    handleLogout = () => {\n        localStorage.clear()\n        this.props.history.push('/')\n    }\n\n    calculateMod = (stat) =>{\n        \n        if(stat <= 1){\n            return -5\n        } else if(2 <= stat && stat <= 3){\n            return -4\n        } else if(4 <= stat && stat <= 5){\n            return -3\n        } else if(6 <= stat && stat <= 7){\n            return -2\n        } else if (8 <= stat && stat <= 9){\n            return -1\n        } else if ( 10 <= stat && stat <= 11){\n            return 0\n        } else if (12 <= stat && stat <= 13){\n            return 1\n        } else if (14 <= stat && stat <= 15){\n            return 2\n        } else if (16 <= stat && stat <= 17){\n            return 3\n        } else if (18 <= stat && stat <= 19){\n            return 4\n        } else if (20 <= stat && stat <= 21){\n            return 5\n        } else if (22 <= stat && stat <= 23){\n            return 6\n        } else if (24 <= stat && stat <= 25){\n            return 7\n        } else if (26 <= stat && stat <= 27){\n            return 8\n        } else if (28 <= stat && stat <= 29){\n            return 9\n        } else if (30 <= stat){\n            return 10\n        }\n    }\n\n    render(){\n            const asi = this.props.newCharRace.asi.map(asi => <p>{asi.attributes} - {asi.value}</p>)\n        return(\n           <div className=\"container\"><div className=\"columns\">\n                <div className=\"column\">\n                <button onClick={this.handleLogout}>Logout</button>\n                <h1>Roll Your Stats:</h1>\n                <h2>Chosen Race: {this.props.newCharRace.name}</h2>\n                <h2>Chosen Class: {this.props.newCharClass.name}</h2>\n                <h2>Ability score increases: {asi}</h2>\n                <ul>\n                <h2>Stats:</h2>{this.state.stats.strength > 0 &&\n                this.state.stats.charisma > 0 &&\n                this.state.stats.constitution > 0 &&\n                this.state.stats.intelligence > 0 &&\n                this.state.stats.wisdom > 0 &&\n                this.state.stats.dexterity > 0 ?\n                <button onClick={this.handleNext}>Confirm</button> : null\n                }\n                <li>Strength</li>\n                <li className=\"box\" style={{width: 60}}>{this.state.stats.strength}</li>\n                <li>Dexterity</li>\n                <li className=\"box\" style={{width: 60}}>{this.state.stats.dexterity}</li>\n                <li>Constitution</li>\n                <li className=\"box\" style={{width: 60}}>{this.state.stats.constitution}</li>\n                <li>Intelligence</li>\n                <li className=\"box\" style={{width: 60}}>{this.state.stats.intelligence}</li>\n                <li>Wisdom</li>\n                <li className=\"box\" style={{width: 60}}>{this.state.stats.wisdom}</li>\n                <li>Charisma</li>\n                <li className=\"box\" style={{width: 60}}>{this.state.stats.charisma}</li>\n                </ul> </div>\n                <div className=\"column\">\n                <ReactDice\n                    numDice={1}\n                    rollDone={this.rollDoneCallback}\n                    ref={dice => this.reactDice = dice}\n                    faceColor={'#696969'}\n                    dotColor={'#D3D3D3'}\n                    />\n                </div>\n                <div className=\"column\">\n                <ReactDice\n                    numDice={1}\n                    rollDone={this.rollDoneCallback}\n                    ref={dice => this.reactDice = dice}\n                    faceColor={'#696969'}\n                    dotColor={'#D3D3D3'}\n                    />\n                </div>\n                {this.state.statVal && this.state.statVal.length < 6 ? \n                    <div style={{paddingTop: 400, paddingRight: 100}}>\n                        <h1>Your Rolls: {this.state.statVal.map(stat => `${stat} `)}</h1>\n                    </div>  \n                    : null  \n                }\n                {this.state.statVal.length === 6 ? \n                <div style={{paddingTop: 400, paddingRight: 100}}>\n                    <h1>Your Rolls: {this.state.statVal.map(stat => `${stat} `)}</h1>\n                    <h2>Add {this.state.statVal[0]} to: </h2>\n                    <StatDist statVals={this.state.statVal} wisdom={this.state.wisdom} strength={this.state.strength} charisma={this.state.charisma} intelligence={this.state.intelligence} dexterity={this.state.dexterity} constitution={this.state.constitution} getStat={this.getStat}/>\n                </div> \n                : null\n                }\n                <div className=\"column\">\n                <ReactDice\n                    numDice={1}\n                    rollDone={this.rollDoneCallback}\n                    ref={dice => this.reactDice = dice}\n                    faceColor={'#696969'}\n                    dotColor={'#D3D3D3'}\n                    />\n                </div>\n                <div className=\"column\">\n                <ReactDice\n                    numDice={1}\n                    rollDone={this.rollDoneCallback}\n                    ref={dice => this.reactDice = dice}\n                    faceColor={'#696969'}\n                    dotColor={'#D3D3D3'}\n                    />\n                </div>\n            </div></div> \n        )\n    }\n}\n\nconst mapStateToProps = (store) => {\n    return {\n      currentUser: store.currentUser,\n      newCharClass: store.newCharClass,\n      newCharRace: store.newCharRace,\n      mods: store.mods,\n      character_id: store.character_id\n      \n    }\n}\n  \nconst mapDispatchToProps = (dispatch) => {\n    return {\n      LogIn: (loggedInUser) => {\n        dispatch({ type: 'LOGIN_CURRENT_USER', user: loggedInUser })\n      },\n      AddRace: (charRace) => {\n          dispatch({ type: 'ADD_Race', attribute: charRace })\n      },\n      AddStrength: (stat) => {\n          dispatch({ type: 'ADD_strength', strength: stat})\n      },\n      AddDexterity: (stat) => {\n          dispatch({ type: 'ADD_dexterity', dexterity: stat})\n      },\n      AddConstitution: (stat) => {\n        dispatch({ type: 'ADD_constitution', constitution: stat})\n      },\n      AddIntelligence: (stat) => {\n        dispatch({ type: 'ADD_intelligence', intelligence: stat})\n      },\n      AddWisdom: (stat) => {\n        dispatch({ type: 'ADD_wisdom', wisdom: stat})\n      },\n      AddCharisma: (stat) => {\n        dispatch({ type: 'ADD_charisma', charisma: stat})\n      },\n      AddMods: (mods) => {\n          dispatch({ type: 'ADD_MODS', mods })\n      }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCharacter);"]},"metadata":{},"sourceType":"module"}