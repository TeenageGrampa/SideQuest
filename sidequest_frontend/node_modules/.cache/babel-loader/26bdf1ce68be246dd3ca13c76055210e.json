{"ast":null,"code":"var _jsxFileName = \"/Users/dan/Desktop/SideQuest/sidequest_frontend/src/AllCharacters.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport NavBar from './NavBar';\nimport PartyMember from './PartyMember';\n\nclass AllCaracters extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      characters: []\n    };\n\n    this.handleLogout = () => {\n      localStorage.clear();\n      this.props.history.push('/');\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/users/\".concat(this.props.currentUser.id)).then(r => r.json()).then(user => this.setState({\n      characters: user.characters\n    })); // this.checkCharacters()\n  }\n\n  render() {\n    // console.log(this.state)\n    const characters = this.state.characters.map(character => React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(PartyMember, {\n      character: character,\n      player: this.props.currentUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })));\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleLogout,\n      className: \"button is-black\",\n      style: {\n        marginLeft: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Logout\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"All Characters:\"), React.createElement(\"div\", {\n      className: \"columns is-multiline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, characters));\n  }\n\n}\n\nconst mapStateToProps = store => {\n  return {\n    currentUser: store.currentUser,\n    newCharClass: store.newCharClass,\n    newCharRace: store.newCharRace,\n    stats: store.stats,\n    mods: store.mods,\n    skills: store.skills\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    LogIn: loggedInUser => {\n      dispatch({\n        type: 'LOGIN_CURRENT_USER',\n        user: loggedInUser\n      });\n    },\n    AddClass: charClass => {\n      dispatch({\n        type: 'ADD_CLASS',\n        attribute: charClass\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AllCaracters);","map":{"version":3,"sources":["/Users/dan/Desktop/SideQuest/sidequest_frontend/src/AllCharacters.js"],"names":["React","connect","NavBar","PartyMember","AllCaracters","Component","state","characters","handleLogout","localStorage","clear","props","history","push","componentDidMount","fetch","currentUser","id","then","r","json","user","setState","render","map","character","marginLeft","mapStateToProps","store","newCharClass","newCharRace","stats","mods","skills","mapDispatchToProps","dispatch","LogIn","loggedInUser","type","AddClass","charClass","attribute"],"mappings":"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","sourcesContent":["import React from  'react'\nimport { connect } from 'react-redux'\nimport NavBar from './NavBar'\nimport PartyMember from'./PartyMember'\n\n\n\nclass AllCaracters extends React.Component{\n\n    state = {\n        characters: []\n    }\n    \n    componentDidMount(){\n        fetch(`http://localhost:3000/users/${this.props.currentUser.id}`)\n        .then(r => r.json()).then(user => this.setState({\n            characters: user.characters\n        }))\n        // this.checkCharacters()\n    }\n\n    handleLogout = () => {\n        localStorage.clear()\n        this.props.history.push('/')\n    }\n\n    \n\n\n\n    render(){\n        // console.log(this.state)\n        const characters = this.state.characters.map(character  =>\n        <div className=\"column\"><PartyMember character={character} player={this.props.currentUser}/></div>)\n        return(\n            <div className=\"container\">\n                <NavBar />\n                <button onClick={this.handleLogout} className=\"button is-black\" style={{marginLeft: 100}}>Logout</button>\n                <h1>All Characters:</h1>\n                <div className=\"columns is-multiline\">{characters}</div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (store) => {\n    return {\n        currentUser: store.currentUser,\n        newCharClass: store.newCharClass,\n        newCharRace: store.newCharRace,\n        stats: store.stats,\n        mods: store.mods,\n        skills: store.skills\n    }\n}\n  \nconst mapDispatchToProps = (dispatch) => {\n    return {\n      LogIn: (loggedInUser) => {\n        dispatch({ type: 'LOGIN_CURRENT_USER', user: loggedInUser })\n      },\n      AddClass: (charClass) => {\n          dispatch({ type: 'ADD_CLASS', attribute: charClass })\n      }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AllCaracters);"]},"metadata":{},"sourceType":"module"}