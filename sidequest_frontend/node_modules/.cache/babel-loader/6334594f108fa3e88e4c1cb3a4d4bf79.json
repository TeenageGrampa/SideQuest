{"ast":null,"code":"var _jsxFileName = \"/Users/dan/Desktop/SideQuest/sidequest_frontend/src/ProfilePage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport NavBar from './NavBar';\n\nclass ProfilePage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      AllGames: []\n    };\n\n    this.handleClick = () => {\n      localStorage.clear();\n      this.props.history.push('/');\n    };\n\n    this.getGames = games => {\n      const gameArr = games.filter(function (ele) {\n        if (ele.game.length === 1) {\n          return ele;\n        }\n      });\n      this.setState({\n        AllGames: gameArr\n      });\n    };\n\n    this.checkCharacters = () => {\n      fetch(\"http://localhost:3000/users/\".concat(this.props.currentUser.id)).then(r => r.json()).then(user => this.setState({\n        AllCharacters: user.characters\n      }, () => {\n        for (let i = 0; i < this.state.AllCharacters.length; i++) {\n          if (this.state.AllCharacters[i].race.length > 0 && this.state.AllCharacters[i].class.length > 0) {\n            console.log('checked');\n          } else {\n            fetch(\"http://localhost:3000/characters/\".concat(this.state.AllCharacters[i].id), {\n              method: 'DELETE'\n            }).then(r => r.json()).then(console.log('deleted'));\n          }\n        }\n      }));\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/profile', {\n      headers: {\n        'Authorization': \"Bearer \".concat(localStorage.token)\n      }\n    }).then(res => res.json()).then(user => {\n      this.props.LogIn(user);\n      fetch(\"http://localhost:3000/users/\".concat(this.props.currentUser.id)).then(r => r.json()).then(user => this.props.SelectCharacter(user.characters[0]));\n    });\n    localStorage.removeItem('newCharClass');\n    localStorage.removeItem('newCharRace');\n    localStorage.removeItem('stats');\n    localStorage.removeItem('mods');\n    localStorage.removeItem('skills');\n    this.checkCharacters();\n    fetch(\"http://localhost:3000/users/\".concat(this.props.currentUser.id)).then(r => r.json()).then(user => this.getGames(user.games));\n  }\n\n  render() {\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Logout\"), this.props.currentUser.username ? React.createElement(\"h1\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Welcome \", this.props.currentUser.username, \"!\") : React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"getting your info...\"));\n  }\n\n}\n\nconst mapStateToProps = store => {\n  return {\n    currentUser: store.currentUser,\n    SelectedCharacter: store.SelectedCharacter\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    LogIn: loggedInUser => {\n      dispatch({\n        type: 'LOGIN_CURRENT_USER',\n        user: loggedInUser\n      });\n    },\n    SelectCharacter: character => {\n      dispatch({\n        type: 'CHARACTER_SELECT',\n        character\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage);","map":{"version":3,"sources":["/Users/dan/Desktop/SideQuest/sidequest_frontend/src/ProfilePage.js"],"names":["React","Component","connect","Link","NavBar","ProfilePage","state","username","AllGames","handleClick","localStorage","clear","props","history","push","getGames","games","gameArr","filter","ele","game","length","setState","checkCharacters","fetch","currentUser","id","then","r","json","user","AllCharacters","characters","i","race","class","console","log","method","componentDidMount","headers","token","res","LogIn","SelectCharacter","removeItem","render","mapStateToProps","store","SelectedCharacter","mapDispatchToProps","dispatch","loggedInUser","type","character"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport NavBar from './NavBar';\n\n\nclass ProfilePage extends Component {\n\n    state = {\n        username: '',\n        AllGames: []\n    }\n\n  handleClick = () => {\n    localStorage.clear()\n    this.props.history.push('/')\n  }\n\n  componentDidMount(){\n    fetch('http://localhost:3000/profile',{\n    headers: {\n      'Authorization': `Bearer ${localStorage.token}`\n    }\n    })\n    .then(res => res.json())\n    .then(user => \n      {this.props.LogIn(user)\n\n        fetch(`http://localhost:3000/users/${this.props.currentUser.id}`)\n        .then(r => r.json()).then(user => this.props.SelectCharacter(user.characters[0]))}\n    )\n    localStorage.removeItem('newCharClass')\n    localStorage.removeItem('newCharRace')\n    localStorage.removeItem('stats')\n    localStorage.removeItem('mods')\n    localStorage.removeItem('skills')\n    this.checkCharacters()\n    fetch(`http://localhost:3000/users/${this.props.currentUser.id}`)\n        .then(r => r.json()).then(user => this.getGames(user.games))\n  }\n\n  getGames = (games) => {\n    const gameArr = games.filter(function(ele){\n      if(ele.game.length === 1){\n        return ele\n      }\n    })\n    this.setState({\n      AllGames: gameArr\n    })\n  }\n\n  checkCharacters = () => {\n    fetch(`http://localhost:3000/users/${this.props.currentUser.id}`)\n    .then(r => r.json())\n    .then(user => this.setState({\n        AllCharacters: user.characters\n    }, () => {\n        for(let i = 0; i < this.state.AllCharacters.length; i++){\n            if(this.state.AllCharacters[i].race.length > 0 && this.state.AllCharacters[i].class.length > 0){\n                console.log('checked')\n            } else {\n                fetch(`http://localhost:3000/characters/${this.state.AllCharacters[i].id}`, {\n                    method: 'DELETE'\n                }).then(r => r.json()).then(console.log('deleted'))\n            }\n        }\n    }))\n  }\n\n  \n\n  render() {\n    console.log(this.state)\n    \n    return (\n      <div className=\"container\">\n        <NavBar />\n        <button onClick={this.handleClick}>Logout</button>\n        {\n          this.props.currentUser.username ?\n          <h1 className=\"title\">Welcome {this.props.currentUser.username}!</h1> :\n          <h1>getting your info...</h1>\n          \n        }\n        \n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => {\n    return {\n      currentUser: store.currentUser,\n      SelectedCharacter: store.SelectedCharacter\n    }\n}\n  \nconst mapDispatchToProps = (dispatch) => {\n    return {\n      LogIn: (loggedInUser) => {\n        dispatch({ type: 'LOGIN_CURRENT_USER', user: loggedInUser })\n      },\n      SelectCharacter: (character) => {\n          dispatch({\n              type: 'CHARACTER_SELECT', character\n          })\n      }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage);"]},"metadata":{},"sourceType":"module"}