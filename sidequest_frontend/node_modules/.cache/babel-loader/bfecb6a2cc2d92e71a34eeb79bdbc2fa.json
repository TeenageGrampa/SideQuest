{"ast":null,"code":"var _jsxFileName = \"/Users/dan/Desktop/SideQuest/sidequest_frontend/src/AllCharacters.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport NavBar from './NavBar';\n\nclass AllCaracters extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      characters: []\n    };\n\n    this.handleLogout = () => {\n      localStorage.clear();\n      this.props.history.push('/login');\n    };\n\n    this.checkCharacters = () => {\n      const charArr = this.state.characters;\n\n      for (let i = 0; i < charArr.length; i++) {\n        if (charArr[i].race.length === 1) {\n          console.log('checked');\n        } else {\n          fetch(\"http://localhost:3000/characters/\".concat(this.state.characters[i].id), {\n            method: 'DELETE'\n          }).then(r => r.json()).then(console.log);\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/users/\".concat(this.props.currentUser.id)).then(r => r.json()).then(user => this.setState({\n      characters: user.characters\n    })); // this.checkCharacters()\n  }\n\n  render() {\n    // this.checkCharacters()\n    console.log(this.state);\n    const characters = this.state.characters.map(character => React.createElement(\"div\", {\n      className: \"box\",\n      key: character.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Name: \", character.name), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Race: \", character.race[0].name), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Class: \", character.class[0].name), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Level: \", character.level), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Alignment: \", character.alignment)));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Logout\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"All Characters:\"), characters);\n  }\n\n}\n\nconst mapStateToProps = store => {\n  return {\n    currentUser: store.currentUser,\n    newCharClass: store.newCharClass,\n    newCharRace: store.newCharRace,\n    stats: store.stats,\n    mods: store.mods,\n    skills: store.skills\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    LogIn: loggedInUser => {\n      dispatch({\n        type: 'LOGIN_CURRENT_USER',\n        user: loggedInUser\n      });\n    },\n    AddClass: charClass => {\n      dispatch({\n        type: 'ADD_CLASS',\n        attribute: charClass\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AllCaracters);","map":{"version":3,"sources":["/Users/dan/Desktop/SideQuest/sidequest_frontend/src/AllCharacters.js"],"names":["React","connect","NavBar","AllCaracters","Component","state","characters","handleLogout","localStorage","clear","props","history","push","checkCharacters","charArr","i","length","race","console","log","fetch","id","method","then","r","json","componentDidMount","currentUser","user","setState","render","map","character","name","class","level","alignment","mapStateToProps","store","newCharClass","newCharRace","stats","mods","skills","mapDispatchToProps","dispatch","LogIn","loggedInUser","type","AddClass","charClass","attribute"],"mappings":"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","sourcesContent":["import React from  'react'\nimport { connect } from 'react-redux'\nimport NavBar from './NavBar'\n\n\n\nclass AllCaracters extends React.Component{\n\n    state = {\n        characters: []\n    }\n    \n    componentDidMount(){\n        fetch(`http://localhost:3000/users/${this.props.currentUser.id}`)\n        .then(r => r.json()).then(user => this.setState({\n            characters: user.characters\n        }))\n        // this.checkCharacters()\n    }\n\n    handleLogout = () => {\n        localStorage.clear()\n        this.props.history.push('/login')\n    }\n\n    checkCharacters = () => {\n        const charArr = this.state.characters\n        for(let i =0; i < charArr.length; i++){\n            if(charArr[i].race.length === 1){\n                console.log('checked')\n            } else { \n                fetch(`http://localhost:3000/characters/${this.state.characters[i].id}`,{\n                method: 'DELETE'\n                }).then(r => r.json()).then(console.log)\n            }\n        }\n    }\n\n\n\n    render(){\n        // this.checkCharacters()\n        console.log(this.state)\n        const characters = this.state.characters.map(character  =>\n        <div className=\"box\" key={character.id}>\n            <h2>Name: {character.name}</h2>\n            <h3>Race: {character.race[0].name}</h3>\n            <h3>Class: {character.class[0].name}</h3>\n            <h4>Level: {character.level}</h4>\n            <h4>Alignment: {character.alignment}</h4>\n        </div>)\n        return(\n            <div>\n                <NavBar />\n                <button onClick={this.handleLogout}>Logout</button>\n                <h1>All Characters:</h1>\n                {characters}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (store) => {\n    return {\n        currentUser: store.currentUser,\n        newCharClass: store.newCharClass,\n        newCharRace: store.newCharRace,\n        stats: store.stats,\n        mods: store.mods,\n        skills: store.skills\n    }\n}\n  \nconst mapDispatchToProps = (dispatch) => {\n    return {\n      LogIn: (loggedInUser) => {\n        dispatch({ type: 'LOGIN_CURRENT_USER', user: loggedInUser })\n      },\n      AddClass: (charClass) => {\n          dispatch({ type: 'ADD_CLASS', attribute: charClass })\n      }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AllCaracters);"]},"metadata":{},"sourceType":"module"}