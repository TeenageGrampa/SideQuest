{"ast":null,"code":"import _defineProperty from \"/Users/dan/Desktop/SideQuest/sidequest_frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/dan/Desktop/SideQuest/sidequest_frontend/src/NewCharacter.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Skills from './Skills';\n\nclass NewCharacter extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      strMod: 0,\n      dexMod: 0,\n      conMod: 0,\n      intMod: 0,\n      wisMod: 0,\n      chrMod: 0,\n      savingProf: {\n        strength: 0,\n        dexterity: 0,\n        constitution: 0,\n        intelligence: 0,\n        wisdom: 0,\n        charisma: 0\n      },\n      proficiencyPoints: 0,\n      armor: '',\n      armorClass: 0,\n      shield: false,\n      characterName: '',\n      characterAlignment: 'True Neutral',\n      character_id: 0\n    };\n\n    this.handleChoice = () => {\n      if (this.state.proficiencyPoints > 0) {\n        this.setState({\n          proficiencyPoints: this.state.proficiencyPoints - 1\n        });\n      } else if (this.state.proficiencyPoints === 0) {\n        return;\n      }\n    };\n\n    this.handleReset = () => {\n      if (this.props.newCharClass.name === 'Barbarian') {\n        this.setState({\n          proficiencyPoints: 2\n        });\n      } else if (this.props.newCharClass.name === 'Bard') {\n        this.setState({\n          proficiencyPoints: 3\n        });\n      } else if (this.props.newCharClass.name === 'CLeric') {\n        this.setState({\n          proficiencyPoints: 2\n        });\n      } else if (this.props.newCharClass.name === 'Druid') {\n        this.setState({\n          proficiencyPoints: 2\n        });\n      } else if (this.props.newCharClass.name === 'Fighter') {\n        this.setState({\n          proficiencyPoints: 2\n        });\n      } else if (this.props.newCharClass.name === 'Monk') {\n        this.setState({\n          proficiencyPoints: 2\n        });\n      } else if (this.props.newCharClass.name === 'Paladin') {\n        this.setState({\n          proficiencyPoints: 2\n        });\n      } else if (this.props.newCharClass.name === 'Ranger') {\n        this.setState({\n          proficiencyPoints: 3\n        });\n      } else if (this.props.newCharClass.name === 'Rogue') {\n        this.setState({\n          proficiencyPoints: 4\n        });\n      } else if (this.props.newCharClass.name === 'Sorcerer') {\n        this.setState({\n          proficiencyPoints: 2\n        });\n      } else if (this.props.newCharClass.name === 'Warlock') {\n        this.setState({\n          proficiencyPoints: 2\n        });\n      } else if (this.props.newCharClass.name === 'Wizard') {\n        this.setState({\n          proficiencyPoints: 2\n        });\n      }\n    };\n\n    this.handleNext = skills => {\n      this.props.AddSkills(skills);\n    };\n\n    this.handleArmor = e => {\n      if (e.target.value === 'shields' || e.target.value === 'shields (druids will not wear armor or use shields made of metal)') {\n        if (this.state.shield === false) {\n          this.setState({\n            armorClass: this.state.armorClass + 2\n          });\n        }\n\n        this.setState({\n          shield: true\n        });\n      } else {\n        this.setState({\n          armor: e.target.value.toLowerCase()\n        }, () => {\n          this.calculateArmor();\n        });\n      }\n    };\n\n    this.calculateArmor = () => {\n      if (this.state.armor === 'light armor') {\n        const armorClass = this.props.mods.dexMod + 11;\n        this.setState({\n          armorClass: armorClass\n        });\n      } else if (this.state.armor === 'medium armor') {\n        const armorClass = this.props.mods.dexMod + 12;\n        this.setState({\n          armorClass: armorClass\n        });\n      } else if (this.state.armor === 'heavy armor') {\n        const armorClass = 14;\n        this.setState({\n          armorClass: armorClass\n        });\n      } else if (this.state.armor === 'none') {\n        const armorClass = this.props.mods.dexMod + 10;\n        this.setState({\n          armorClass: armorClass\n        });\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      console.log();\n      const hitDieNum = this.props.newCharClass.hit_dice.split('d')[1];\n      const maxHP = parseInt(hitDieNum) + this.props.mods.conMod;\n      fetch('http://localhost:3000/character_skills', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          character_id: this.props.character_id,\n          acrobatics: this.props.skills.Acrobatics,\n          animal_handling: this.props.skills.AnimalHandling,\n          arcana: this.props.skills.Arcana,\n          athletics: this.props.skills.Athletics,\n          deception: this.props.skills.Deception,\n          history: this.props.skills.History,\n          insight: this.props.skills.Insight,\n          intimidation: this.props.skills.Intimidation,\n          investigation: this.props.skills.Investigation,\n          medicine: this.props.skills.Medicine,\n          nature: this.props.skills.Nature,\n          perception: this.props.skills.Perception,\n          performance: this.props.skills.Performance,\n          persuasion: this.props.skills.Persuasion,\n          religion: this.props.skills.Religion,\n          sleight_of_hand: this.props.skills.SleightofHand,\n          stealth: this.props.skills.Stealth\n        })\n      }).then(r => r.json()).then(console.log);\n      fetch('http://localhost:3000/character_stats', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          character_id: this.props.character_id,\n          strength: this.props.stats.strength,\n          dexterity: this.props.stats.dexterity,\n          constitution: this.props.stats.constitution,\n          intelligence: this.props.stats.intelligence,\n          wisdom: this.props.stats.wisdom,\n          charisma: this.props.stats.charisma,\n          initiative: this.props.mods.dexMod,\n          hp: maxHP,\n          armor_class: this.state.armorClass,\n          passive_perception: 10 + this.props.skills.Perception,\n          proficiency_mod: 2\n        })\n      }).then(r => r.json()).then(this.handleCreate);\n    };\n\n    this.handleCreate = () => {\n      this.props.history.push('./profile');\n    };\n\n    this.handleLogout = () => {\n      localStorage.clear();\n      this.props.history.push('/');\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      strMod: this.props.mods.strMod,\n      dexMod: this.props.mods.dexMod,\n      conMod: this.props.mods.conMod,\n      intMod: this.props.mods.intMod,\n      wisMod: this.props.mods.wisMod,\n      chrMod: this.props.mods.chrMod\n    });\n    const savingProf = this.props.newCharClass.prof_saving_throws.toLowerCase().split(', ');\n    this.setState({\n      savingProf: _objectSpread({}, this.state.savingProf, {\n        [savingProf[0]]: 2,\n        [savingProf[1]]: 2\n      })\n    });\n    this.handleReset();\n  }\n\n  render() {\n    console.log(this.state);\n    const hitDieNum = this.props.newCharClass.hit_dice.split('d')[1];\n    const maxHP = parseInt(hitDieNum) + this.props.mods.conMod;\n    const armorChoices = this.props.newCharClass.prof_armor.split(', ');\n    const armorBtns = armorChoices.map(choice => choice === 'All armor' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleArmor,\n      value: \"light armor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Light armor\"), React.createElement(\"button\", {\n      onClick: this.handleArmor,\n      value: \"medium armor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Medium armor\"), React.createElement(\"button\", {\n      onClick: this.handleArmor,\n      value: \"heavy armor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Heavy armor\")) : React.createElement(\"button\", {\n      value: choice,\n      onClick: this.handleArmor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, choice));\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleLogout,\n      className: \"button is-black\",\n      style: {\n        marginLeft: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"Logout\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"Roll Your Stats:\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \"Chosen Race: \", this.props.newCharRace.name), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \"Chosen Class: \", this.props.newCharClass.name), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"Stats:\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"Strength - \", this.props.stats.strength), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      className: \"box\",\n      style: {\n        width: 60\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, this.state.strMod), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"Dexterity - \", this.props.stats.dexterity), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      className: \"box\",\n      style: {\n        width: 60\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, this.state.dexMod), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"Constitution - \", this.props.stats.constitution), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      className: \"box\",\n      style: {\n        width: 60\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, this.state.conMod), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"Intelligence - \", this.props.stats.intelligence), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      className: \"box\",\n      style: {\n        width: 60\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, this.state.intMod), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"Wisdom - \", this.props.stats.wisdom), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      className: \"box\",\n      style: {\n        width: 60\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, this.state.wisMod), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"Charisma - \", this.props.stats.charisma), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      className: \"box\",\n      style: {\n        width: 60\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, this.state.chrMod), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    })), \" \"), React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"Proficiency Modifier:\"), React.createElement(\"li\", {\n      className: \"box\",\n      style: {\n        width: 180\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"+ 2\"), React.createElement(\"ul\", {\n      className: \"box\",\n      style: {\n        width: 180\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"Saving Throws:\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, \"Strength: \", this.state.strMod + this.state.savingProf.strength), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"Dexterity: \", this.state.dexMod + this.state.savingProf.dexterity), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, \"Constitution: \", this.state.conMod + this.state.savingProf.constitution), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"Intelligence: \", this.state.intMod + this.state.savingProf.intelligence), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"Wisdom: \", this.state.wisMod + this.state.savingProf.wisdom), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, \"Charisma: \", this.state.chrMod + this.state.savingProf.charisma)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"Skills:\"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"Points Left: \", this.state.proficiencyPoints), React.createElement(Skills, {\n      handleNext: this.handleNext,\n      handleChoice: this.handleChoice,\n      proficiencyPoints: this.state.proficiencyPoints,\n      handleReset: this.handleReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"Passive Perception:\"), this.props.skills ? React.createElement(\"li\", {\n      className: \"box\",\n      style: {\n        width: 180\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, 10 + this.props.skills.Perception) : null, React.createElement(\"div\", {\n      className: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \"Other Proficiencies:\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"armor: \", this.props.newCharClass.prof_armor), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \"weapons: \", this.props.newCharClass.prof_weapons), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, \"tools: \", this.props.newCharClass.prof_tools))), React.createElement(\"div\", {\n      className: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"Languages:\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, this.props.newCharRace.languages.split('_**').pop())), React.createElement(\"div\", {\n      className: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, \"Equipment:\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, this.props.newCharClass.equipment)), React.createElement(\"div\", {\n      className: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, \"Armor Choice:\"), armorBtns)), React.createElement(\"div\", {\n      className: \"column is-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"box\",\n      style: {\n        width: 180\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Armor Class: \", this.state.armorClass)), React.createElement(\"div\", {\n      className: \"box\",\n      style: {\n        width: 180\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"Initiative: \", this.props.mods.dexMod), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, \"Speed: \", this.props.newCharRace.speed.walk)), React.createElement(\"div\", {\n      className: \"box\",\n      style: {\n        width: 180\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \"Hit Dice: \", this.props.newCharClass.hit_dice), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"Max HP: \", maxHP)), React.createElement(\"div\", {\n      className: \"box\",\n      style: {\n        width: 180\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, \"Submit Character\"))))));\n  }\n\n}\n\nconst mapStateToProps = store => {\n  return {\n    currentUser: store.currentUser,\n    newCharClass: store.newCharClass,\n    newCharRace: store.newCharRace,\n    stats: store.stats,\n    mods: store.mods,\n    skills: store.skills,\n    character_id: store.character_id\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    LogIn: loggedInUser => {\n      dispatch({\n        type: 'LOGIN_CURRENT_USER',\n        user: loggedInUser\n      });\n    },\n    AddRace: charRace => {\n      dispatch({\n        type: 'ADD_Race',\n        attribute: charRace\n      });\n    },\n    AddStrength: stat => {\n      dispatch({\n        type: 'ADD_strength',\n        strength: stat\n      });\n    },\n    AddDexterity: stat => {\n      dispatch({\n        type: 'ADD_dexterity',\n        dexterity: stat\n      });\n    },\n    AddConstitution: stat => {\n      dispatch({\n        type: 'ADD_constitution',\n        constitution: stat\n      });\n    },\n    AddIntelligence: stat => {\n      dispatch({\n        type: 'ADD_intelligence',\n        intelligence: stat\n      });\n    },\n    AddWisdom: stat => {\n      dispatch({\n        type: 'ADD_wisdom',\n        wisdom: stat\n      });\n    },\n    AddCharisma: stat => {\n      dispatch({\n        type: 'ADD_charisma',\n        charisma: stat\n      });\n    },\n    AddMods: mods => {\n      dispatch({\n        type: 'ADD_MODS',\n        mods\n      });\n    },\n    AddSkills: skills => {\n      dispatch({\n        type: 'ADD_SKILLS',\n        skills\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCharacter);","map":{"version":3,"sources":["/Users/dan/Desktop/SideQuest/sidequest_frontend/src/NewCharacter.js"],"names":["React","connect","Skills","NewCharacter","Component","state","strMod","dexMod","conMod","intMod","wisMod","chrMod","savingProf","strength","dexterity","constitution","intelligence","wisdom","charisma","proficiencyPoints","armor","armorClass","shield","characterName","characterAlignment","character_id","handleChoice","setState","handleReset","props","newCharClass","name","handleNext","skills","AddSkills","handleArmor","e","target","value","toLowerCase","calculateArmor","mods","handleSubmit","preventDefault","console","log","hitDieNum","hit_dice","split","maxHP","parseInt","fetch","method","headers","body","JSON","stringify","acrobatics","Acrobatics","animal_handling","AnimalHandling","arcana","Arcana","athletics","Athletics","deception","Deception","history","History","insight","Insight","intimidation","Intimidation","investigation","Investigation","medicine","Medicine","nature","Nature","perception","Perception","performance","Performance","persuasion","Persuasion","religion","Religion","sleight_of_hand","SleightofHand","stealth","Stealth","then","r","json","stats","initiative","hp","armor_class","passive_perception","proficiency_mod","handleCreate","push","handleLogout","localStorage","clear","componentDidMount","prof_saving_throws","render","armorChoices","prof_armor","armorBtns","map","choice","marginLeft","newCharRace","width","prof_weapons","prof_tools","languages","pop","equipment","speed","walk","mapStateToProps","store","currentUser","mapDispatchToProps","dispatch","LogIn","loggedInUser","type","user","AddRace","charRace","attribute","AddStrength","stat","AddDexterity","AddConstitution","AddIntelligence","AddWisdom","AddCharisma","AddMods"],"mappings":"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","sourcesContent":["import React from  'react'\nimport { connect } from 'react-redux'\nimport Skills from './Skills'\n\n\n\nclass NewCharacter extends React.Component{\n\n    state = {\n        strMod: 0,\n        dexMod: 0,\n        conMod: 0,\n        intMod: 0,\n        wisMod: 0,\n        chrMod: 0,\n        savingProf: {\n            strength: 0,\n            dexterity: 0,\n            constitution: 0,\n            intelligence: 0,\n            wisdom: 0,\n            charisma: 0\n        },\n        proficiencyPoints: 0,\n        armor: '',\n        armorClass: 0,\n        shield: false, \n        characterName: '',\n        characterAlignment: 'True Neutral',\n        character_id: 0\n    }\n\n    componentDidMount(){\n        this.setState({\n            strMod: this.props.mods.strMod,\n            dexMod: this.props.mods.dexMod,\n            conMod: this.props.mods.conMod,\n            intMod: this.props.mods.intMod,\n            wisMod: this.props.mods.wisMod,\n            chrMod: this.props.mods.chrMod\n        })\n        const savingProf = this.props.newCharClass.prof_saving_throws.toLowerCase().split(', ')\n        this.setState({\n            savingProf: {\n                ...this.state.savingProf,\n                [savingProf[0]]: 2,\n                [savingProf[1]]: 2\n            }\n        })\n        this.handleReset()\n        \n    }\n\n    handleChoice = () => {\n        if(this.state.proficiencyPoints > 0 ){\n            this.setState({\n                proficiencyPoints: this.state.proficiencyPoints - 1\n            })\n        } else if (this.state.proficiencyPoints === 0 ){\n            return\n        }\n    }\n    handleReset = () => {\n        if(this.props.newCharClass.name === 'Barbarian'){\n            this.setState({\n                proficiencyPoints: 2\n            })\n        } else if (this.props.newCharClass.name === 'Bard'){\n            this.setState({\n                proficiencyPoints: 3\n            })\n        } else if (this.props.newCharClass.name === 'CLeric'){\n            this.setState({\n                proficiencyPoints: 2\n            })\n        } else if (this.props.newCharClass.name === 'Druid'){\n            this.setState({\n                proficiencyPoints: 2\n            })\n        } else if (this.props.newCharClass.name === 'Fighter'){\n            this.setState({\n                proficiencyPoints: 2\n            })\n        } else if (this.props.newCharClass.name === 'Monk'){\n            this.setState({\n                proficiencyPoints: 2\n            })\n        } else if (this.props.newCharClass.name === 'Paladin'){\n            this.setState({\n                proficiencyPoints: 2\n            })\n        } else if (this.props.newCharClass.name === 'Ranger'){\n            this.setState({\n                proficiencyPoints: 3\n            })\n        } else if (this.props.newCharClass.name === 'Rogue'){\n            this.setState({\n                proficiencyPoints: 4\n            })\n        } else if (this.props.newCharClass.name === 'Sorcerer'){\n            this.setState({\n                proficiencyPoints: 2\n            })\n        } else if (this.props.newCharClass.name === 'Warlock'){\n            this.setState({\n                proficiencyPoints: 2\n            })\n        } else if (this.props.newCharClass.name === 'Wizard'){\n            this.setState({\n                proficiencyPoints: 2\n            })\n        }\n    }\n\n    handleNext = (skills) => {\n        this.props.AddSkills(skills)\n    }\n\n    handleArmor = (e) =>{\n        if(e.target.value === 'shields' || e.target.value === 'shields (druids will not wear armor or use shields made of metal)'){\n            if(this.state.shield === false){\n                this.setState({\n                    armorClass: this.state.armorClass + 2\n                })\n            }\n            this.setState({\n                shield: true\n            })\n        } else {\n            this.setState({\n                armor: e.target.value.toLowerCase()\n            },() =>  {this.calculateArmor()})\n        }\n    }\n\n    calculateArmor = () => {\n        if(this.state.armor === 'light armor'){\n            const armorClass = this.props.mods.dexMod + 11\n            this.setState({\n                armorClass: armorClass\n            })\n        } else if (this.state.armor === 'medium armor'){\n            const armorClass = this.props.mods.dexMod + 12\n            this.setState({\n                armorClass: armorClass\n            }) \n        } else if (this.state.armor === 'heavy armor'){\n            const armorClass = 14\n            this.setState({\n                armorClass: armorClass\n            }) \n        } else if (this.state.armor === 'none'){\n            const armorClass = this.props.mods.dexMod + 10\n            this.setState({\n                armorClass: armorClass\n            })\n        }\n        \n    }\n\n\n    handleSubmit =(e) =>  {\n        e.preventDefault()\n        console.log();\n        const hitDieNum = this.props.newCharClass.hit_dice.split('d')[1]\n        const maxHP = parseInt(hitDieNum) + this.props.mods.conMod\n                fetch('http://localhost:3000/character_skills', {\n                method: 'POST',\n                headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n                },\n                body: JSON.stringify({\n                    character_id: this.props.character_id,\n                    acrobatics: this.props.skills.Acrobatics,\n                    animal_handling: this.props.skills.AnimalHandling,\n                    arcana: this.props.skills.Arcana,\n                    athletics: this.props.skills.Athletics,\n                    deception: this.props.skills.Deception,\n                    history: this.props.skills.History,\n                    insight: this.props.skills.Insight,\n                    intimidation: this.props.skills.Intimidation,\n                    investigation: this.props.skills.Investigation,\n                    medicine: this.props.skills.Medicine,\n                    nature: this.props.skills.Nature,\n                    perception: this.props.skills.Perception,\n                    performance: this.props.skills.Performance,\n                    persuasion: this.props.skills.Persuasion,\n                    religion: this.props.skills.Religion,\n                    sleight_of_hand: this.props.skills.SleightofHand,\n                    stealth: this.props.skills.Stealth\n                })\n            }).then(r => r.json()).then(console.log)\n                fetch('http://localhost:3000/character_stats', {\n                method: 'POST',\n                headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n                },\n                body: JSON.stringify({\n                    character_id: this.props.character_id,\n                    strength: this.props.stats.strength,\n                    dexterity: this.props.stats.dexterity,\n                    constitution: this.props.stats.constitution,\n                    intelligence: this.props.stats.intelligence,\n                    wisdom: this.props.stats.wisdom,\n                    charisma: this.props.stats.charisma,\n                    initiative: this.props.mods.dexMod,\n                    hp: maxHP,\n                    armor_class: this.state.armorClass,\n                    passive_perception: 10 + this.props.skills.Perception,\n                    proficiency_mod: 2\n                })\n            }).then(r => r.json()).then(this.handleCreate)\n        }\n            \n    \n\n    handleCreate = () => {\n        this.props.history.push('./profile')\n    }\n\n    handleLogout = () => {\n        localStorage.clear()\n        this.props.history.push('/')\n    }\n\n    \n    \n    render(){\n        console.log(this.state)\n        const hitDieNum = this.props.newCharClass.hit_dice.split('d')[1]\n        const maxHP = parseInt(hitDieNum) + this.props.mods.conMod\n        const armorChoices = this.props.newCharClass.prof_armor.split(', ')\n        const armorBtns = armorChoices.map(choice => choice === 'All armor' ? <div><button onClick={this.handleArmor} value=\"light armor\">Light armor</button><button onClick={this.handleArmor} value=\"medium armor\">Medium armor</button><button onClick={this.handleArmor} value=\"heavy armor\">Heavy armor</button></div> : <button value={choice} onClick={this.handleArmor}>{choice}</button>)\n        return(\n            <div className=\"container\">\n            <div className=\"columns\">\n                <div className=\"column\">\n                <button onClick={this.handleLogout} className=\"button is-black\" style={{marginLeft: 100}}>Logout</button>\n                <h1>Roll Your Stats:</h1>\n                <h2>Chosen Race: {this.props.newCharRace.name}</h2>\n                <h2>Chosen Class: {this.props.newCharClass.name}</h2>\n                <ul>\n                <h2>Stats:</h2>\n                <li>Strength - {this.props.stats.strength}</li><br></br>\n                <li className=\"box\" style={{width: 60}}>{this.state.strMod}</li><br></br>\n                <li>Dexterity - {this.props.stats.dexterity}</li><br></br>\n                <li className=\"box\" style={{width: 60}}>{this.state.dexMod}</li><br></br>\n                <li>Constitution - {this.props.stats.constitution}</li><br></br>\n                <li className=\"box\" style={{width: 60}}>{this.state.conMod}</li><br></br>\n                <li>Intelligence - {this.props.stats.intelligence}</li><br></br>\n                <li className=\"box\" style={{width: 60}}>{this.state.intMod}</li><br></br>\n                <li>Wisdom - {this.props.stats.wisdom}</li><br></br>\n                <li className=\"box\" style={{width: 60}}>{this.state.wisMod}</li><br></br>\n                <li>Charisma - {this.props.stats.charisma}</li><br></br>\n                <li className=\"box\" style={{width: 60}}>{this.state.chrMod}</li><br></br>\n                </ul> </div>\n                <div className=\"column\">\n                <p>Proficiency Modifier:</p>\n                <li className=\"box\" style={{width: 180}}>+ 2</li>\n                <ul className=\"box\" style={{width: 180}}>\n                    <p>Saving Throws:</p>\n                    <li>Strength: {this.state.strMod + this.state.savingProf.strength}</li>\n                    <li>Dexterity: {this.state.dexMod + this.state.savingProf.dexterity}</li>\n                    <li>Constitution: {this.state.conMod + this.state.savingProf.constitution}</li>\n                    <li>Intelligence: {this.state.intMod + this.state.savingProf.intelligence}</li>\n                    <li>Wisdom: {this.state.wisMod + this.state.savingProf.wisdom}</li>\n                    <li>Charisma: {this.state.chrMod + this.state.savingProf.charisma}</li>\n                </ul>\n                <h3>Skills:</h3>\n                <h4>Points Left: {this.state.proficiencyPoints}</h4>\n                <Skills handleNext={this.handleNext} handleChoice={this.handleChoice} proficiencyPoints={this.state.proficiencyPoints} handleReset={this.handleReset}/>\n                </div>\n                <div className=\"column\">\n                <p>Passive Perception:</p>\n                {this.props.skills ? <li className=\"box\" style={{width: 180}}>{10 + this.props.skills.Perception}</li> : null}\n                <div className=\"box\">\n                    <p>Other Proficiencies:</p>\n                    <ul>\n                        <li>armor: {this.props.newCharClass.prof_armor}</li>\n                        <li>weapons: {this.props.newCharClass.prof_weapons}</li>\n                        <li>tools: {this.props.newCharClass.prof_tools}</li>\n                    </ul>\n                </div>\n                <div className=\"box\">\n                    <p>Languages:</p>\n                    <p>{this.props.newCharRace.languages.split('_**').pop()}</p>\n                </div>\n                <div className=\"box\">\n                    <p>Equipment:</p>\n                    <p>{this.props.newCharClass.equipment}</p>\n                </div>\n                <div className=\"box\">\n                    <p>Armor Choice:</p>\n                    {armorBtns}\n                </div>\n                </div>\n                <div className=\"column is-2\">\n                    <div className=\"box\" style={{width: 180}}>\n                        <p>Armor Class: {this.state.armorClass}</p>\n                    </div>\n                    <div className=\"box\" style={{width: 180}}>\n                        <p>Initiative: {this.props.mods.dexMod}</p>\n                        <p>Speed: {this.props.newCharRace.speed.walk}</p>\n                    </div>\n                    <div className=\"box\" style={{width: 180}}>\n                        <p>Hit Dice: {this.props.newCharClass.hit_dice}</p>\n                        <p>Max HP: {maxHP}</p>\n                    </div>\n                    <div className=\"box\" style={{width: 180}}>\n                        <form onSubmit={this.handleSubmit}>\n                            <button type=\"submit\">Submit Character</button>\n                        </form>\n                    </div>\n                </div>\n            </div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (store) => {\n    return {\n      currentUser: store.currentUser,\n      newCharClass: store.newCharClass,\n      newCharRace: store.newCharRace,\n      stats: store.stats,\n      mods: store.mods,\n      skills: store.skills,\n      character_id: store.character_id\n    }\n}\n  \nconst mapDispatchToProps = (dispatch) => {\n    return {\n      LogIn: (loggedInUser) => {\n        dispatch({ type: 'LOGIN_CURRENT_USER', user: loggedInUser })\n      },\n      AddRace: (charRace) => {\n          dispatch({ type: 'ADD_Race', attribute: charRace })\n      },\n      AddStrength: (stat) => {\n          dispatch({ type: 'ADD_strength', strength: stat})\n      },\n      AddDexterity: (stat) => {\n          dispatch({ type: 'ADD_dexterity', dexterity: stat})\n      },\n      AddConstitution: (stat) => {\n        dispatch({ type: 'ADD_constitution', constitution: stat})\n      },\n      AddIntelligence: (stat) => {\n        dispatch({ type: 'ADD_intelligence', intelligence: stat})\n      },\n      AddWisdom: (stat) => {\n        dispatch({ type: 'ADD_wisdom', wisdom: stat})\n      },\n      AddCharisma: (stat) => {\n        dispatch({ type: 'ADD_charisma', charisma: stat})\n      },\n      AddMods: (mods) => {\n          dispatch({ type: 'ADD_MODS', mods })\n      },\n      AddSkills: (skills) => {\n          dispatch({ type: 'ADD_SKILLS', skills})\n      },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCharacter);"]},"metadata":{},"sourceType":"module"}