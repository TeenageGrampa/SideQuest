{"ast":null,"code":"var _jsxFileName = \"/Users/dan/Desktop/SideQuest/sidequest_frontend/sidequest/src/NewRace.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport ClassInfo from './ClassInfo';\n\nclass NewCharacter extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allClasses: [] // currentClass: ''\n\n    };\n\n    this.saveClass = charClass => {\n      this.props.AddClass(charClass);\n      console.log(this.props);\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/profile', {\n      headers: {\n        'Authorization': \"Bearer \".concat(localStorage.token)\n      }\n    }).then(res => res.json()).then(user => this.props.LogIn(user));\n    fetch('https://api-beta.open5e.com/races/').then(r => r.json()).then(console.log);\n  } // handleChange = (e) =>{\n  //     const newClass = e.target.value\n  //     this.setState({\n  //         currentClass: newClass\n  //     })\n  // }\n\n\n  render() {\n    console.log(this.props); // const classComps = this.state.allClasses.map(charClass => <ClassInfo key={charClass.id} saveClass={this.saveClass} charClass={charClass} /> )\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = store => {\n  return {\n    currentUser: store.currentUser,\n    newChar: store.newChar\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    LogIn: loggedInUser => {\n      dispatch({\n        type: 'LOGIN_CURRENT_USER',\n        user: loggedInUser\n      });\n    },\n    AddClass: charClass => {\n      dispatch({\n        type: 'ADD_CLASS',\n        attribute: charClass\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCharacter);","map":{"version":3,"sources":["/Users/dan/Desktop/SideQuest/sidequest_frontend/sidequest/src/NewRace.js"],"names":["React","connect","ClassInfo","NewCharacter","Component","state","allClasses","saveClass","charClass","props","AddClass","console","log","componentDidMount","fetch","headers","localStorage","token","then","res","json","user","LogIn","r","render","mapStateToProps","store","currentUser","newChar","mapDispatchToProps","dispatch","loggedInUser","type","attribute"],"mappings":";AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAGA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA0C;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACJC,MAAAA,UAAU,EAAE,EADR,CAEJ;;AAFI,KAD8B;;AAAA,SA2BtCC,SA3BsC,GA2BzBC,SAAD,IAAe;AACvB,WAAKC,KAAL,CAAWC,QAAX,CAAoBF,SAApB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAjB;AACH,KA9BqC;AAAA;;AAMtCI,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,KAAK,CAAC,+BAAD,EAAiC;AACtCC,MAAAA,OAAO,EAAE;AACP,0CAA2BC,YAAY,CAACC,KAAxC;AADO;AAD6B,KAAjC,CAAL,CAKCC,IALD,CAKMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALb,EAMCF,IAND,CAMMG,IAAI,IAAI,KAAKZ,KAAL,CAAWa,KAAX,CAAiBD,IAAjB,CANd;AAQAP,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACCI,IADD,CACMK,CAAC,IAAIA,CAAC,CAACH,IAAF,EADX,EAECF,IAFD,CAEMP,OAAO,CAACC,GAFd;AAGH,GAlBqC,CAoBtC;AACA;AACA;AACA;AACA;AACA;;;AASAY,EAAAA,MAAM,GAAE;AACJb,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAjB,EADI,CAEJ;;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAgCH;;AArEqC;;AAwE1C,MAAMgB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACC,WADd;AAELC,IAAAA,OAAO,EAAEF,KAAK,CAACE;AAFV,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACLR,IAAAA,KAAK,EAAGS,YAAD,IAAkB;AACvBD,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE,oBAAR;AAA8BX,QAAAA,IAAI,EAAEU;AAApC,OAAD,CAAR;AACD,KAHI;AAILrB,IAAAA,QAAQ,EAAGF,SAAD,IAAe;AACrBsB,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,SAAS,EAAEzB;AAAhC,OAAD,CAAR;AACH;AANI,GAAP;AAQH,CATD;;AAWA,eAAeP,OAAO,CAACwB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6C1B,YAA7C,CAAf","sourcesContent":["import React from  'react'\nimport { connect } from 'react-redux'\nimport ClassInfo from './ClassInfo'\n\n\nclass NewCharacter extends React.Component{\n    state = {\n        allClasses: [],\n        // currentClass: ''\n    }\n\n    componentDidMount(){\n        fetch('http://localhost:3000/profile',{\n        headers: {\n          'Authorization': `Bearer ${localStorage.token}`\n        }\n        })\n        .then(res => res.json())\n        .then(user => this.props.LogIn(user)\n        )\n        fetch('https://api-beta.open5e.com/races/')\n        .then(r => r.json())\n        .then(console.log)\n    }\n\n    // handleChange = (e) =>{\n    //     const newClass = e.target.value\n    //     this.setState({\n    //         currentClass: newClass\n    //     })\n    // }\n\n    saveClass = (charClass) => {\n        this.props.AddClass(charClass)\n        console.log(this.props)\n    }\n\n\n\n    render(){\n        console.log(this.props)\n        // const classComps = this.state.allClasses.map(charClass => <ClassInfo key={charClass.id} saveClass={this.saveClass} charClass={charClass} /> )\n        return(\n            <div>\n                {/* <h1>Choose Your Class:</h1>\n                <h2>Currently Selected: {this.props.newChar.newCharClass ? this.props.newChar.newCharClass.name : null}</h2>\n                <select onChange={this.handleChange}>\n                    <option value=\"barbarian\">Barbarian</option>\n                    <option value=\"bard\">Bard</option>\n                    <option value=\"cleric\">Cleric</option>\n                    <option value=\"druid\">Druid</option>\n                    <option value=\"fighter\">Fighter</option>\n                    <option value=\"monk\">Monk</option>\n                    <option value=\"paladin\">Paladin</option>\n                    <option value=\"ranger\">Ranger</option>\n                    <option value=\"rogue\">Rogue</option>\n                    <option value=\"sorcerer\">Sorcerer</option>\n                    <option value=\"warlock\">Warlock</option>\n                    <option value=\"wizard\">Wizard</option>\n                </select>\n                {this.state.currentClass === 'barbarian' ? classComps[0] : null}\n                {this.state.currentClass === 'bard' ? classComps[1] : null}\n                {this.state.currentClass === 'cleric' ? classComps[2] : null}\n                {this.state.currentClass === 'druid' ? classComps[3] : null}\n                {this.state.currentClass === 'fighter' ? classComps[4] : null}\n                {this.state.currentClass === 'monk' ? classComps[5] : null}\n                {this.state.currentClass === 'paladin' ? classComps[6] : null}\n                {this.state.currentClass === 'ranger' ? classComps[7] : null}\n                {this.state.currentClass === 'rogue' ? classComps[8] : null}\n                {this.state.currentClass === 'sorcerer' ? classComps[9] : null}\n                {this.state.currentClass === 'warlock' ? classComps[10] : null}\n                {this.state.currentClass === 'wizard' ? classComps[11] : null} */}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (store) => {\n    return {\n      currentUser: store.currentUser,\n      newChar: store.newChar\n    }\n}\n  \nconst mapDispatchToProps = (dispatch) => {\n    return {\n      LogIn: (loggedInUser) => {\n        dispatch({ type: 'LOGIN_CURRENT_USER', user: loggedInUser })\n      },\n      AddClass: (charClass) => {\n          dispatch({ type: 'ADD_CLASS', attribute: charClass })\n      }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCharacter);"]},"metadata":{},"sourceType":"module"}