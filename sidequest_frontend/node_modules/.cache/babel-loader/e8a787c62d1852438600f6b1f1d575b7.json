{"ast":null,"code":"import _defineProperty from \"/Users/dan/Desktop/SideQuest/sidequest_frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/dan/Desktop/SideQuest/sidequest_frontend/src/NewCharacter.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Skills from './Skills';\n\nclass NewCharacter extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      strMod: 0,\n      dexMod: 0,\n      conMod: 0,\n      intMod: 0,\n      wisMod: 0,\n      chrMod: 0,\n      savingProf: {\n        strength: 0,\n        dexterity: 0,\n        constitution: 0,\n        intelligence: 0,\n        wisdom: 0,\n        charisma: 0\n      },\n      proficiencyPoints: 0,\n      armor: '',\n      armorClass: 0,\n      shield: false,\n      characterName: '',\n      characterAlignment: 'True Neutral',\n      character_id: 0\n    };\n\n    this.handleChoice = () => {\n      if (this.state.proficiencyPoints > 0) {\n        this.setState({\n          proficiencyPoints: this.state.proficiencyPoints - 1\n        });\n      } else if (this.state.proficiencyPoints === 0) {\n        return;\n      }\n    };\n\n    this.handleReset = () => {\n      if (this.props.newCharClass.name === 'Barbarian') {\n        this.setState({\n          proficiencyPoints: 2\n        });\n      } else if (this.props.newCharClass.name === 'Bard') {\n        this.setState({\n          proficiencyPoints: 3\n        });\n      } else if (this.props.newCharClass.name === 'CLeric') {\n        this.setState({\n          proficiencyPoints: 2\n        });\n      } else if (this.props.newCharClass.name === 'Druid') {\n        this.setState({\n          proficiencyPoints: 2\n        });\n      } else if (this.props.newCharClass.name === 'Fighter') {\n        this.setState({\n          proficiencyPoints: 2\n        });\n      } else if (this.props.newCharClass.name === 'Monk') {\n        this.setState({\n          proficiencyPoints: 2\n        });\n      } else if (this.props.newCharClass.name === 'Paladin') {\n        this.setState({\n          proficiencyPoints: 2\n        });\n      } else if (this.props.newCharClass.name === 'Ranger') {\n        this.setState({\n          proficiencyPoints: 3\n        });\n      } else if (this.props.newCharClass.name === 'Rogue') {\n        this.setState({\n          proficiencyPoints: 4\n        });\n      } else if (this.props.newCharClass.name === 'Sorcerer') {\n        this.setState({\n          proficiencyPoints: 2\n        });\n      } else if (this.props.newCharClass.name === 'Warlock') {\n        this.setState({\n          proficiencyPoints: 2\n        });\n      } else if (this.props.newCharClass.name === 'Wizard') {\n        this.setState({\n          proficiencyPoints: 2\n        });\n      }\n    };\n\n    this.handleNext = skills => {\n      this.props.AddSkills(skills);\n    };\n\n    this.handleArmor = e => {\n      if (e.target.value === 'shields' || e.target.value === 'shields (druids will not wear armor or use shields made of metal)') {\n        if (this.state.shield === false) {\n          this.setState({\n            armorClass: this.state.armorClass + 2\n          });\n        }\n\n        this.setState({\n          shield: true\n        });\n      } else {\n        this.setState({\n          armor: e.target.value.toLowerCase()\n        }, () => {\n          this.calculateArmor();\n        });\n      }\n    };\n\n    this.calculateArmor = () => {\n      if (this.state.armor === 'light armor') {\n        const armorClass = this.props.mods.dexMod + 11;\n        this.setState({\n          armorClass: armorClass\n        });\n      } else if (this.state.armor === 'medium armor') {\n        const armorClass = this.props.mods.dexMod + 12;\n        this.setState({\n          armorClass: armorClass\n        });\n      } else if (this.state.armor === 'heavy armor') {\n        const armorClass = 14;\n        this.setState({\n          armorClass: armorClass\n        });\n      } else if (this.state.armor === 'none') {\n        const armorClass = this.props.mods.dexMod + 10;\n        this.setState({\n          armorClass: armorClass\n        });\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (this.props.skills && this.state.armorClass > 0) {\n        const hitDieNum = this.props.newCharClass.hit_dice.split('d')[1];\n        const maxHP = parseInt(hitDieNum) + this.props.mods.conMod;\n        fetch('http://localhost:3000/character_skills', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          body: JSON.stringify({\n            character_id: this.props.character_id,\n            acrobatics: this.props.skills.Acrobatics,\n            animal_handling: this.props.skills.AnimalHandling,\n            arcana: this.props.skills.Arcana,\n            athletics: this.props.skills.Athletics,\n            deception: this.props.skills.Deception,\n            history: this.props.skills.History,\n            insight: this.props.skills.Insight,\n            intimidation: this.props.skills.Intimidation,\n            investigation: this.props.skills.Investigation,\n            medicine: this.props.skills.Medicine,\n            nature: this.props.skills.Nature,\n            perception: this.props.skills.Perception,\n            performance: this.props.skills.Performance,\n            persuasion: this.props.skills.Persuasion,\n            religion: this.props.skills.Religion,\n            sleight_of_hand: this.props.skills.SleightofHand,\n            stealth: this.props.skills.Stealth\n          })\n        }).then(r => r.json()).then(console.log);\n        fetch('http://localhost:3000/character_stats', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          body: JSON.stringify({\n            character_id: this.props.character_id,\n            strength: this.props.stats.strength,\n            dexterity: this.props.stats.dexterity,\n            constitution: this.props.stats.constitution,\n            intelligence: this.props.stats.intelligence,\n            wisdom: this.props.stats.wisdom,\n            charisma: this.props.stats.charisma,\n            initiative: this.props.mods.dexMod,\n            hp: maxHP,\n            armor_class: this.state.armorClass,\n            passive_perception: 10 + this.props.skills.Perception,\n            proficiency_mod: 2\n          })\n        }).then(r => r.json()).then(this.handleCreate);\n      } else {\n        alert('You must pick skill proficiencies and armor class');\n      }\n    };\n\n    this.handleCreate = () => {\n      this.props.history.push('./profile');\n    };\n\n    this.handleLogout = () => {\n      localStorage.clear();\n      this.props.history.push('/');\n    };\n\n    this.getClassImg = charClass => {\n      if (charClass === 'Rogue') {\n        return require('./hooded-assassin.png');\n      } else if (charClass === 'Barbarian') {\n        return require('./barbarian.png');\n      } else if (charClass === 'Paladin') {\n        return require('./elf-helmet.png');\n      } else if (charClass === 'Warlock') {\n        return require('./warlock-hood.png');\n      } else if (charClass === 'Ranger') {\n        return require('./cowled.png');\n      } else if (charClass === 'Bard') {\n        return require('./musical-notes.png');\n      } else if (charClass === 'Cleric') {\n        return require('./pope-crown.png');\n      } else if (charClass === 'Druid') {\n        return require('./wolf-head.png');\n      } else if (charClass === 'Fighter') {\n        return require('./swordman.png');\n      } else if (charClass === 'Monk') {\n        return require('./monk-face.png');\n      } else if (charClass === 'Sorcerer') {\n        return require('./robe.png');\n      } else if (charClass === 'Wizard') {\n        return require('./wizard-staff.png');\n      }\n    };\n\n    this.getRaceImg = charRace => {\n      if (charRace === 'Dwarf') {\n        return require('./dwarf-king.png');\n      } else if (charRace === 'Hill Dwarf') {\n        return require('./dwarf-king.png');\n      } else if (charRace === 'Elf') {\n        return require('./woman-elf-face.png');\n      } else if (charRace === 'High Elf') {\n        return require('./woman-elf-face.png');\n      } else if (charRace === 'Halfling') {\n        return require('./hobbit-dwelling.png');\n      } else if (charRace === 'Lightfoot') {\n        return require('./hobbit-dwelling.png');\n      } else if (charRace === 'Human') {\n        return require('./sensuousness.png');\n      } else if (charRace === 'Dragonborn') {\n        return require('./spiked-dragon-head.png');\n      } else if (charRace === 'Gnome') {\n        return require('./bad-gnome.png');\n      } else if (charRace === 'Rock Gnome') {\n        return require('./bad-gnome.png');\n      } else if (charRace === 'Half-Elf') {\n        return require('./elf-ear.png');\n      } else if (charRace === 'Half-Orc') {\n        return require('./orc-head.png');\n      } else if (charRace === 'Tiefling') {\n        return require('./horned-reptile.png');\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      strMod: this.props.mods.strMod,\n      dexMod: this.props.mods.dexMod,\n      conMod: this.props.mods.conMod,\n      intMod: this.props.mods.intMod,\n      wisMod: this.props.mods.wisMod,\n      chrMod: this.props.mods.chrMod\n    });\n    const savingProf = this.props.newCharClass.prof_saving_throws.toLowerCase().split(', ');\n    this.setState({\n      savingProf: _objectSpread({}, this.state.savingProf, {\n        [savingProf[0]]: 2,\n        [savingProf[1]]: 2\n      })\n    });\n    this.handleReset();\n  }\n\n  render() {\n    const clasImg = this.getClassImg(this.props.newCharClass.name);\n    const raceImg = this.getRaceImg(this.props.newCharRace.name);\n    const hitDieNum = this.props.newCharClass.hit_dice.split('d')[1];\n    const maxHP = parseInt(hitDieNum) + this.props.mods.conMod;\n    const armorChoices = this.props.newCharClass.prof_armor.split(', ');\n    const armorBtns = armorChoices.map(choice => choice === 'All armor' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleArmor,\n      value: \"light armor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, \"Light armor\"), React.createElement(\"button\", {\n      onClick: this.handleArmor,\n      value: \"medium armor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, \"Medium armor\"), React.createElement(\"button\", {\n      onClick: this.handleArmor,\n      value: \"heavy armor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, \"Heavy armor\")) : React.createElement(\"button\", {\n      value: choice,\n      onClick: this.handleArmor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, choice));\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"hero\",\n      style: {\n        borderStyle: 'ridge',\n        boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)',\n        borderRadius: 10,\n        backgroundImage: \"url(http://fanaru.com/fantasy-art/image/232259-fantasy-art-a-burning-rose.gif)\",\n        backgroundSize: 'cover'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"hero-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title\",\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"Pick Proficiencies & Armor class:\"), React.createElement(\"p\", {\n      className: \"subtitle\",\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, \"You have \", this.state.proficiencyPoints, \" given by your class. Confirm how to use them and pick your armor class before you confirm.\"), React.createElement(\"button\", {\n      onClick: this.handleLogout,\n      className: \"button is-black\",\n      style: {\n        marginLeft: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"Logout\")))), React.createElement(\"div\", {\n      className: \"columns\",\n      style: {\n        paddingTop: 50,\n        backgroundImage: \"url(https://media1.giphy.com/media/3o6UB9xT8upEDGrcqs/giphy.gif)\",\n        backgroundSize: 'cover',\n        margin: 20,\n        borderStyle: 'ridge',\n        boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)',\n        borderRadius: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column is-2 content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, \"Stats:\"), React.createElement(\"p\", {\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, \"Strength - \", this.props.stats.strength), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"box\",\n      style: {\n        width: 60,\n        borderStyle: 'ridge',\n        boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)',\n        borderRadius: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, this.state.strMod), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, \"Dexterity - \", this.props.stats.dexterity), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"box\",\n      style: {\n        width: 60,\n        borderStyle: 'ridge',\n        boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)',\n        borderRadius: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, this.state.dexMod), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, \"Constitution - \", this.props.stats.constitution), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"box\",\n      style: {\n        width: 60,\n        borderStyle: 'ridge',\n        boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)',\n        borderRadius: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, this.state.conMod), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, \"Intelligence - \", this.props.stats.intelligence), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"box\",\n      style: {\n        width: 60,\n        borderStyle: 'ridge',\n        boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)',\n        borderRadius: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, this.state.intMod), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, \"Wisdom - \", this.props.stats.wisdom), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"box\",\n      style: {\n        width: 60,\n        borderStyle: 'ridge',\n        boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)',\n        borderRadius: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, this.state.wisMod), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, \"Charisma - \", this.props.stats.charisma), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"box\",\n      style: {\n        width: 60,\n        borderStyle: 'ridge',\n        boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)',\n        borderRadius: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, this.state.chrMod), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    })), \" \"), React.createElement(\"div\", {\n      className: \"column is-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, \"Proficiency Modifier:\"), React.createElement(\"li\", {\n      className: \"box\",\n      style: {\n        width: 180,\n        borderStyle: 'ridge',\n        boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)',\n        borderRadius: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, \"+ 2\"), React.createElement(\"ul\", {\n      className: \"box\",\n      style: {\n        width: 180,\n        borderStyle: 'ridge',\n        boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)',\n        borderRadius: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, \"Saving Throws:\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, \"Strength: \", this.state.strMod + this.state.savingProf.strength), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, \"Dexterity: \", this.state.dexMod + this.state.savingProf.dexterity), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, \"Constitution: \", this.state.conMod + this.state.savingProf.constitution), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, \"Intelligence: \", this.state.intMod + this.state.savingProf.intelligence), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, \"Wisdom: \", this.state.wisMod + this.state.savingProf.wisdom), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, \"Charisma: \", this.state.chrMod + this.state.savingProf.charisma)), React.createElement(\"h3\", {\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, \"Skills:\"), React.createElement(\"h4\", {\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, \"Points Left: \", this.state.proficiencyPoints), React.createElement(Skills, {\n      handleNext: this.handleNext,\n      handleChoice: this.handleChoice,\n      proficiencyPoints: this.state.proficiencyPoints,\n      handleReset: this.handleReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"column is-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"column is-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, \"Passive Perception:\"), this.props.skills ? React.createElement(\"li\", {\n      className: \"box\",\n      style: {\n        width: 180,\n        borderStyle: 'ridge',\n        boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)',\n        borderRadius: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, 10 + this.props.skills.Perception) : null, React.createElement(\"div\", {\n      className: \"box\",\n      style: {\n        borderStyle: 'ridge',\n        boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)',\n        borderRadius: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, \"Other Proficiencies:\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, \"armor: \", this.props.newCharClass.prof_armor), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, \"weapons: \", this.props.newCharClass.prof_weapons), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, \"tools: \", this.props.newCharClass.prof_tools))), React.createElement(\"div\", {\n      className: \"box\",\n      style: {\n        borderStyle: 'ridge',\n        boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)',\n        borderRadius: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, \"Languages:\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, this.props.newCharRace.languages.split('_**').pop())), React.createElement(\"div\", {\n      className: \"box\",\n      style: {\n        borderStyle: 'ridge',\n        boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)',\n        borderRadius: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, \"Equipment:\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, this.props.newCharClass.equipment)), React.createElement(\"div\", {\n      className: \"box\",\n      style: {\n        borderStyle: 'ridge',\n        boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)',\n        borderRadius: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, \"Armor Choice:\"), armorBtns)), React.createElement(\"div\", {\n      className: \"column is-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"box\",\n      style: {\n        width: 180,\n        borderStyle: 'ridge',\n        boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)',\n        borderRadius: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, \"Armor Class: \", this.state.armorClass)), React.createElement(\"div\", {\n      className: \"box\",\n      style: {\n        width: 180,\n        borderStyle: 'ridge',\n        boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)',\n        borderRadius: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, \"Initiative: \", this.props.mods.dexMod), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, \"Speed: \", this.props.newCharRace.speed.walk)), React.createElement(\"div\", {\n      className: \"box\",\n      style: {\n        width: 180,\n        borderStyle: 'ridge',\n        boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)',\n        borderRadius: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, \"Hit Dice: \", this.props.newCharClass.hit_dice), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, \"Max HP: \", maxHP)), React.createElement(\"div\", {\n      className: \"box\",\n      style: {\n        width: 180,\n        borderStyle: 'ridge',\n        boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)',\n        borderRadius: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, \"Submit Character\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, \"Chosen Race: \", this.props.newCharRace.name), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: raceImg,\n      className: \"image is-96x96\",\n      style: {\n        borderStyle: 'ridge',\n        boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)',\n        borderRadius: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, \"Chosen Class: \", this.props.newCharClass.name), React.createElement(\"img\", {\n      src: clasImg,\n      className: \"image is-96x96\",\n      style: {\n        borderStyle: 'ridge',\n        boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)',\n        borderRadius: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = store => {\n  return {\n    currentUser: store.currentUser,\n    newCharClass: store.newCharClass,\n    newCharRace: store.newCharRace,\n    stats: store.stats,\n    mods: store.mods,\n    skills: store.skills,\n    character_id: store.character_id\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    LogIn: loggedInUser => {\n      dispatch({\n        type: 'LOGIN_CURRENT_USER',\n        user: loggedInUser\n      });\n    },\n    AddRace: charRace => {\n      dispatch({\n        type: 'ADD_Race',\n        attribute: charRace\n      });\n    },\n    AddStrength: stat => {\n      dispatch({\n        type: 'ADD_strength',\n        strength: stat\n      });\n    },\n    AddDexterity: stat => {\n      dispatch({\n        type: 'ADD_dexterity',\n        dexterity: stat\n      });\n    },\n    AddConstitution: stat => {\n      dispatch({\n        type: 'ADD_constitution',\n        constitution: stat\n      });\n    },\n    AddIntelligence: stat => {\n      dispatch({\n        type: 'ADD_intelligence',\n        intelligence: stat\n      });\n    },\n    AddWisdom: stat => {\n      dispatch({\n        type: 'ADD_wisdom',\n        wisdom: stat\n      });\n    },\n    AddCharisma: stat => {\n      dispatch({\n        type: 'ADD_charisma',\n        charisma: stat\n      });\n    },\n    AddMods: mods => {\n      dispatch({\n        type: 'ADD_MODS',\n        mods\n      });\n    },\n    AddSkills: skills => {\n      dispatch({\n        type: 'ADD_SKILLS',\n        skills\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCharacter);","map":{"version":3,"sources":["/Users/dan/Desktop/SideQuest/sidequest_frontend/src/NewCharacter.js"],"names":["React","connect","Skills","NewCharacter","Component","state","strMod","dexMod","conMod","intMod","wisMod","chrMod","savingProf","strength","dexterity","constitution","intelligence","wisdom","charisma","proficiencyPoints","armor","armorClass","shield","characterName","characterAlignment","character_id","handleChoice","setState","handleReset","props","newCharClass","name","handleNext","skills","AddSkills","handleArmor","e","target","value","toLowerCase","calculateArmor","mods","handleSubmit","preventDefault","hitDieNum","hit_dice","split","maxHP","parseInt","fetch","method","headers","body","JSON","stringify","acrobatics","Acrobatics","animal_handling","AnimalHandling","arcana","Arcana","athletics","Athletics","deception","Deception","history","History","insight","Insight","intimidation","Intimidation","investigation","Investigation","medicine","Medicine","nature","Nature","perception","Perception","performance","Performance","persuasion","Persuasion","religion","Religion","sleight_of_hand","SleightofHand","stealth","Stealth","then","r","json","console","log","stats","initiative","hp","armor_class","passive_perception","proficiency_mod","handleCreate","alert","push","handleLogout","localStorage","clear","getClassImg","charClass","require","getRaceImg","charRace","componentDidMount","prof_saving_throws","render","clasImg","raceImg","newCharRace","armorChoices","prof_armor","armorBtns","map","choice","borderStyle","boxShadow","borderRadius","backgroundImage","backgroundSize","color","marginLeft","paddingTop","margin","width","prof_weapons","prof_tools","languages","pop","equipment","speed","walk","mapStateToProps","store","currentUser","mapDispatchToProps","dispatch","LogIn","loggedInUser","type","user","AddRace","attribute","AddStrength","stat","AddDexterity","AddConstitution","AddIntelligence","AddWisdom","AddCharisma","AddMods"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAIA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA0C;AAAA;AAAA;AAAA,SAEtCC,KAFsC,GAE9B;AACJC,MAAAA,MAAM,EAAE,CADJ;AAEJC,MAAAA,MAAM,EAAE,CAFJ;AAGJC,MAAAA,MAAM,EAAE,CAHJ;AAIJC,MAAAA,MAAM,EAAE,CAJJ;AAKJC,MAAAA,MAAM,EAAE,CALJ;AAMJC,MAAAA,MAAM,EAAE,CANJ;AAOJC,MAAAA,UAAU,EAAE;AACRC,QAAAA,QAAQ,EAAE,CADF;AAERC,QAAAA,SAAS,EAAE,CAFH;AAGRC,QAAAA,YAAY,EAAE,CAHN;AAIRC,QAAAA,YAAY,EAAE,CAJN;AAKRC,QAAAA,MAAM,EAAE,CALA;AAMRC,QAAAA,QAAQ,EAAE;AANF,OAPR;AAeJC,MAAAA,iBAAiB,EAAE,CAff;AAgBJC,MAAAA,KAAK,EAAE,EAhBH;AAiBJC,MAAAA,UAAU,EAAE,CAjBR;AAkBJC,MAAAA,MAAM,EAAE,KAlBJ;AAmBJC,MAAAA,aAAa,EAAE,EAnBX;AAoBJC,MAAAA,kBAAkB,EAAE,cApBhB;AAqBJC,MAAAA,YAAY,EAAE;AArBV,KAF8B;;AAAA,SA+CtCC,YA/CsC,GA+CvB,MAAM;AACjB,UAAG,KAAKrB,KAAL,CAAWc,iBAAX,GAA+B,CAAlC,EAAqC;AACjC,aAAKQ,QAAL,CAAc;AACVR,UAAAA,iBAAiB,EAAE,KAAKd,KAAL,CAAWc,iBAAX,GAA+B;AADxC,SAAd;AAGH,OAJD,MAIO,IAAI,KAAKd,KAAL,CAAWc,iBAAX,KAAiC,CAArC,EAAwC;AAC3C;AACH;AACJ,KAvDqC;;AAAA,SAyDtCS,WAzDsC,GAyDxB,MAAM;AAChB,UAAG,KAAKC,KAAL,CAAWC,YAAX,CAAwBC,IAAxB,KAAiC,WAApC,EAAgD;AAC5C,aAAKJ,QAAL,CAAc;AACVR,UAAAA,iBAAiB,EAAE;AADT,SAAd;AAGH,OAJD,MAIO,IAAI,KAAKU,KAAL,CAAWC,YAAX,CAAwBC,IAAxB,KAAiC,MAArC,EAA4C;AAC/C,aAAKJ,QAAL,CAAc;AACVR,UAAAA,iBAAiB,EAAE;AADT,SAAd;AAGH,OAJM,MAIA,IAAI,KAAKU,KAAL,CAAWC,YAAX,CAAwBC,IAAxB,KAAiC,QAArC,EAA8C;AACjD,aAAKJ,QAAL,CAAc;AACVR,UAAAA,iBAAiB,EAAE;AADT,SAAd;AAGH,OAJM,MAIA,IAAI,KAAKU,KAAL,CAAWC,YAAX,CAAwBC,IAAxB,KAAiC,OAArC,EAA6C;AAChD,aAAKJ,QAAL,CAAc;AACVR,UAAAA,iBAAiB,EAAE;AADT,SAAd;AAGH,OAJM,MAIA,IAAI,KAAKU,KAAL,CAAWC,YAAX,CAAwBC,IAAxB,KAAiC,SAArC,EAA+C;AAClD,aAAKJ,QAAL,CAAc;AACVR,UAAAA,iBAAiB,EAAE;AADT,SAAd;AAGH,OAJM,MAIA,IAAI,KAAKU,KAAL,CAAWC,YAAX,CAAwBC,IAAxB,KAAiC,MAArC,EAA4C;AAC/C,aAAKJ,QAAL,CAAc;AACVR,UAAAA,iBAAiB,EAAE;AADT,SAAd;AAGH,OAJM,MAIA,IAAI,KAAKU,KAAL,CAAWC,YAAX,CAAwBC,IAAxB,KAAiC,SAArC,EAA+C;AAClD,aAAKJ,QAAL,CAAc;AACVR,UAAAA,iBAAiB,EAAE;AADT,SAAd;AAGH,OAJM,MAIA,IAAI,KAAKU,KAAL,CAAWC,YAAX,CAAwBC,IAAxB,KAAiC,QAArC,EAA8C;AACjD,aAAKJ,QAAL,CAAc;AACVR,UAAAA,iBAAiB,EAAE;AADT,SAAd;AAGH,OAJM,MAIA,IAAI,KAAKU,KAAL,CAAWC,YAAX,CAAwBC,IAAxB,KAAiC,OAArC,EAA6C;AAChD,aAAKJ,QAAL,CAAc;AACVR,UAAAA,iBAAiB,EAAE;AADT,SAAd;AAGH,OAJM,MAIA,IAAI,KAAKU,KAAL,CAAWC,YAAX,CAAwBC,IAAxB,KAAiC,UAArC,EAAgD;AACnD,aAAKJ,QAAL,CAAc;AACVR,UAAAA,iBAAiB,EAAE;AADT,SAAd;AAGH,OAJM,MAIA,IAAI,KAAKU,KAAL,CAAWC,YAAX,CAAwBC,IAAxB,KAAiC,SAArC,EAA+C;AAClD,aAAKJ,QAAL,CAAc;AACVR,UAAAA,iBAAiB,EAAE;AADT,SAAd;AAGH,OAJM,MAIA,IAAI,KAAKU,KAAL,CAAWC,YAAX,CAAwBC,IAAxB,KAAiC,QAArC,EAA8C;AACjD,aAAKJ,QAAL,CAAc;AACVR,UAAAA,iBAAiB,EAAE;AADT,SAAd;AAGH;AACJ,KA3GqC;;AAAA,SA6GtCa,UA7GsC,GA6GxBC,MAAD,IAAY;AACrB,WAAKJ,KAAL,CAAWK,SAAX,CAAqBD,MAArB;AACH,KA/GqC;;AAAA,SAiHtCE,WAjHsC,GAiHvBC,CAAD,IAAM;AAChB,UAAGA,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmB,SAAnB,IAAgCF,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmB,mEAAtD,EAA0H;AACtH,YAAG,KAAKjC,KAAL,CAAWiB,MAAX,KAAsB,KAAzB,EAA+B;AAC3B,eAAKK,QAAL,CAAc;AACVN,YAAAA,UAAU,EAAE,KAAKhB,KAAL,CAAWgB,UAAX,GAAwB;AAD1B,WAAd;AAGH;;AACD,aAAKM,QAAL,CAAc;AACVL,UAAAA,MAAM,EAAE;AADE,SAAd;AAGH,OATD,MASO;AACH,aAAKK,QAAL,CAAc;AACVP,UAAAA,KAAK,EAAEgB,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,WAAf;AADG,SAAd,EAEE,MAAO;AAAC,eAAKC,cAAL;AAAsB,SAFhC;AAGH;AACJ,KAhIqC;;AAAA,SAkItCA,cAlIsC,GAkIrB,MAAM;AACnB,UAAG,KAAKnC,KAAL,CAAWe,KAAX,KAAqB,aAAxB,EAAsC;AAClC,cAAMC,UAAU,GAAG,KAAKQ,KAAL,CAAWY,IAAX,CAAgBlC,MAAhB,GAAyB,EAA5C;AACA,aAAKoB,QAAL,CAAc;AACVN,UAAAA,UAAU,EAAEA;AADF,SAAd;AAGH,OALD,MAKO,IAAI,KAAKhB,KAAL,CAAWe,KAAX,KAAqB,cAAzB,EAAwC;AAC3C,cAAMC,UAAU,GAAG,KAAKQ,KAAL,CAAWY,IAAX,CAAgBlC,MAAhB,GAAyB,EAA5C;AACA,aAAKoB,QAAL,CAAc;AACVN,UAAAA,UAAU,EAAEA;AADF,SAAd;AAGH,OALM,MAKA,IAAI,KAAKhB,KAAL,CAAWe,KAAX,KAAqB,aAAzB,EAAuC;AAC1C,cAAMC,UAAU,GAAG,EAAnB;AACA,aAAKM,QAAL,CAAc;AACVN,UAAAA,UAAU,EAAEA;AADF,SAAd;AAGH,OALM,MAKA,IAAI,KAAKhB,KAAL,CAAWe,KAAX,KAAqB,MAAzB,EAAgC;AACnC,cAAMC,UAAU,GAAG,KAAKQ,KAAL,CAAWY,IAAX,CAAgBlC,MAAhB,GAAyB,EAA5C;AACA,aAAKoB,QAAL,CAAc;AACVN,UAAAA,UAAU,EAAEA;AADF,SAAd;AAGH;AAEJ,KAzJqC;;AAAA,SA4JtCqB,YA5JsC,GA4JvBN,CAAD,IAAQ;AAClBA,MAAAA,CAAC,CAACO,cAAF;;AACA,UAAG,KAAKd,KAAL,CAAWI,MAAX,IAAqB,KAAK5B,KAAL,CAAWgB,UAAX,GAAwB,CAAhD,EAAkD;AAClD,cAAMuB,SAAS,GAAG,KAAKf,KAAL,CAAWC,YAAX,CAAwBe,QAAxB,CAAiCC,KAAjC,CAAuC,GAAvC,EAA4C,CAA5C,CAAlB;AACA,cAAMC,KAAK,GAAGC,QAAQ,CAACJ,SAAD,CAAR,GAAsB,KAAKf,KAAL,CAAWY,IAAX,CAAgBjC,MAApD;AACQyC,QAAAA,KAAK,CAAC,wCAAD,EAA2C;AAChDC,UAAAA,MAAM,EAAE,MADwC;AAEhDC,UAAAA,OAAO,EAAE;AACT,4BAAgB,kBADP;AAET,sBAAU;AAFD,WAFuC;AAMhDC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB7B,YAAAA,YAAY,EAAE,KAAKI,KAAL,CAAWJ,YADR;AAEjB8B,YAAAA,UAAU,EAAE,KAAK1B,KAAL,CAAWI,MAAX,CAAkBuB,UAFb;AAGjBC,YAAAA,eAAe,EAAE,KAAK5B,KAAL,CAAWI,MAAX,CAAkByB,cAHlB;AAIjBC,YAAAA,MAAM,EAAE,KAAK9B,KAAL,CAAWI,MAAX,CAAkB2B,MAJT;AAKjBC,YAAAA,SAAS,EAAE,KAAKhC,KAAL,CAAWI,MAAX,CAAkB6B,SALZ;AAMjBC,YAAAA,SAAS,EAAE,KAAKlC,KAAL,CAAWI,MAAX,CAAkB+B,SANZ;AAOjBC,YAAAA,OAAO,EAAE,KAAKpC,KAAL,CAAWI,MAAX,CAAkBiC,OAPV;AAQjBC,YAAAA,OAAO,EAAE,KAAKtC,KAAL,CAAWI,MAAX,CAAkBmC,OARV;AASjBC,YAAAA,YAAY,EAAE,KAAKxC,KAAL,CAAWI,MAAX,CAAkBqC,YATf;AAUjBC,YAAAA,aAAa,EAAE,KAAK1C,KAAL,CAAWI,MAAX,CAAkBuC,aAVhB;AAWjBC,YAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWI,MAAX,CAAkByC,QAXX;AAYjBC,YAAAA,MAAM,EAAE,KAAK9C,KAAL,CAAWI,MAAX,CAAkB2C,MAZT;AAajBC,YAAAA,UAAU,EAAE,KAAKhD,KAAL,CAAWI,MAAX,CAAkB6C,UAbb;AAcjBC,YAAAA,WAAW,EAAE,KAAKlD,KAAL,CAAWI,MAAX,CAAkB+C,WAdd;AAejBC,YAAAA,UAAU,EAAE,KAAKpD,KAAL,CAAWI,MAAX,CAAkBiD,UAfb;AAgBjBC,YAAAA,QAAQ,EAAE,KAAKtD,KAAL,CAAWI,MAAX,CAAkBmD,QAhBX;AAiBjBC,YAAAA,eAAe,EAAE,KAAKxD,KAAL,CAAWI,MAAX,CAAkBqD,aAjBlB;AAkBjBC,YAAAA,OAAO,EAAE,KAAK1D,KAAL,CAAWI,MAAX,CAAkBuD;AAlBV,WAAf;AAN0C,SAA3C,CAAL,CA0BDC,IA1BC,CA0BIC,CAAC,IAAIA,CAAC,CAACC,IAAF,EA1BT,EA0BmBF,IA1BnB,CA0BwBG,OAAO,CAACC,GA1BhC;AA2BA5C,QAAAA,KAAK,CAAC,uCAAD,EAA0C;AAC/CC,UAAAA,MAAM,EAAE,MADuC;AAE/CC,UAAAA,OAAO,EAAE;AACT,4BAAgB,kBADP;AAET,sBAAU;AAFD,WAFsC;AAM/CC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB7B,YAAAA,YAAY,EAAE,KAAKI,KAAL,CAAWJ,YADR;AAEjBZ,YAAAA,QAAQ,EAAE,KAAKgB,KAAL,CAAWiE,KAAX,CAAiBjF,QAFV;AAGjBC,YAAAA,SAAS,EAAE,KAAKe,KAAL,CAAWiE,KAAX,CAAiBhF,SAHX;AAIjBC,YAAAA,YAAY,EAAE,KAAKc,KAAL,CAAWiE,KAAX,CAAiB/E,YAJd;AAKjBC,YAAAA,YAAY,EAAE,KAAKa,KAAL,CAAWiE,KAAX,CAAiB9E,YALd;AAMjBC,YAAAA,MAAM,EAAE,KAAKY,KAAL,CAAWiE,KAAX,CAAiB7E,MANR;AAOjBC,YAAAA,QAAQ,EAAE,KAAKW,KAAL,CAAWiE,KAAX,CAAiB5E,QAPV;AAQjB6E,YAAAA,UAAU,EAAE,KAAKlE,KAAL,CAAWY,IAAX,CAAgBlC,MARX;AASjByF,YAAAA,EAAE,EAAEjD,KATa;AAUjBkD,YAAAA,WAAW,EAAE,KAAK5F,KAAL,CAAWgB,UAVP;AAWjB6E,YAAAA,kBAAkB,EAAE,KAAK,KAAKrE,KAAL,CAAWI,MAAX,CAAkB6C,UAX1B;AAYjBqB,YAAAA,eAAe,EAAE;AAZA,WAAf;AANyC,SAA1C,CAAL,CAoBDV,IApBC,CAoBIC,CAAC,IAAIA,CAAC,CAACC,IAAF,EApBT,EAoBmBF,IApBnB,CAoBwB,KAAKW,YApB7B;AAqBH,OAnDL,MAmDW;AACPC,QAAAA,KAAK,CAAC,mDAAD,CAAL;AACC;AACJ,KApNiC;;AAAA,SAwNtCD,YAxNsC,GAwNvB,MAAM;AACjB,WAAKvE,KAAL,CAAWoC,OAAX,CAAmBqC,IAAnB,CAAwB,WAAxB;AACH,KA1NqC;;AAAA,SA4NtCC,YA5NsC,GA4NvB,MAAM;AACjBC,MAAAA,YAAY,CAACC,KAAb;AACA,WAAK5E,KAAL,CAAWoC,OAAX,CAAmBqC,IAAnB,CAAwB,GAAxB;AACH,KA/NqC;;AAAA,SAiOtCI,WAjOsC,GAiOvBC,SAAD,IAAe;AACzB,UAAGA,SAAS,KAAK,OAAjB,EAAyB;AACrB,eAAOC,OAAO,CAAC,uBAAD,CAAd;AACH,OAFD,MAEO,IAAGD,SAAS,KAAK,WAAjB,EAA6B;AAChC,eAAOC,OAAO,CAAC,iBAAD,CAAd;AACH,OAFM,MAEA,IAAGD,SAAS,KAAK,SAAjB,EAA2B;AAC9B,eAAOC,OAAO,CAAC,kBAAD,CAAd;AACH,OAFM,MAEA,IAAGD,SAAS,KAAK,SAAjB,EAA2B;AAC9B,eAAOC,OAAO,CAAC,oBAAD,CAAd;AACH,OAFM,MAEA,IAAGD,SAAS,KAAK,QAAjB,EAA0B;AAC7B,eAAOC,OAAO,CAAC,cAAD,CAAd;AACH,OAFM,MAEA,IAAGD,SAAS,KAAK,MAAjB,EAAwB;AAC3B,eAAOC,OAAO,CAAC,qBAAD,CAAd;AACH,OAFM,MAEA,IAAGD,SAAS,KAAK,QAAjB,EAA0B;AAC7B,eAAOC,OAAO,CAAC,kBAAD,CAAd;AACH,OAFM,MAEA,IAAGD,SAAS,KAAK,OAAjB,EAAyB;AAC5B,eAAOC,OAAO,CAAC,iBAAD,CAAd;AACH,OAFM,MAEA,IAAGD,SAAS,KAAK,SAAjB,EAA2B;AAC9B,eAAOC,OAAO,CAAC,gBAAD,CAAd;AACH,OAFM,MAEA,IAAGD,SAAS,KAAK,MAAjB,EAAwB;AAC3B,eAAOC,OAAO,CAAC,iBAAD,CAAd;AACH,OAFM,MAEA,IAAGD,SAAS,KAAK,UAAjB,EAA4B;AAC/B,eAAOC,OAAO,CAAC,YAAD,CAAd;AACH,OAFM,MAEA,IAAGD,SAAS,KAAK,QAAjB,EAA0B;AAC7B,eAAOC,OAAO,CAAC,oBAAD,CAAd;AACH;AACJ,KA3PqC;;AAAA,SA6PtCC,UA7PsC,GA6PxBC,QAAD,IAAc;AACvB,UAAGA,QAAQ,KAAK,OAAhB,EAAwB;AACpB,eAAOF,OAAO,CAAC,kBAAD,CAAd;AACH,OAFD,MAEO,IAAGE,QAAQ,KAAK,YAAhB,EAA6B;AAChC,eAAOF,OAAO,CAAC,kBAAD,CAAd;AACH,OAFM,MAEA,IAAGE,QAAQ,KAAK,KAAhB,EAAsB;AACzB,eAAOF,OAAO,CAAC,sBAAD,CAAd;AACH,OAFM,MAED,IAAGE,QAAQ,KAAK,UAAhB,EAA2B;AAC7B,eAAOF,OAAO,CAAC,sBAAD,CAAd;AACH,OAFK,MAEC,IAAGE,QAAQ,KAAK,UAAhB,EAA2B;AAC9B,eAAOF,OAAO,CAAC,uBAAD,CAAd;AACH,OAFM,MAEA,IAAGE,QAAQ,KAAK,WAAhB,EAA4B;AAC/B,eAAOF,OAAO,CAAC,uBAAD,CAAd;AACH,OAFM,MAEA,IAAGE,QAAQ,KAAK,OAAhB,EAAwB;AAC3B,eAAOF,OAAO,CAAC,oBAAD,CAAd;AACH,OAFM,MAEA,IAAGE,QAAQ,KAAK,YAAhB,EAA6B;AAChC,eAAOF,OAAO,CAAC,0BAAD,CAAd;AACH,OAFM,MAEA,IAAGE,QAAQ,KAAK,OAAhB,EAAwB;AAC3B,eAAOF,OAAO,CAAC,iBAAD,CAAd;AACH,OAFM,MAEA,IAAGE,QAAQ,KAAK,YAAhB,EAA6B;AAChC,eAAOF,OAAO,CAAC,iBAAD,CAAd;AACH,OAFM,MAEA,IAAGE,QAAQ,KAAK,UAAhB,EAA2B;AAC9B,eAAOF,OAAO,CAAC,eAAD,CAAd;AACH,OAFM,MAEA,IAAGE,QAAQ,KAAK,UAAhB,EAA2B;AAC9B,eAAOF,OAAO,CAAC,gBAAD,CAAd;AACH,OAFM,MAEA,IAAGE,QAAQ,KAAK,UAAhB,EAA2B;AAC9B,eAAOF,OAAO,CAAC,sBAAD,CAAd;AACH;AACJ,KAzRqC;AAAA;;AA0BtCG,EAAAA,iBAAiB,GAAE;AACf,SAAKpF,QAAL,CAAc;AACVrB,MAAAA,MAAM,EAAE,KAAKuB,KAAL,CAAWY,IAAX,CAAgBnC,MADd;AAEVC,MAAAA,MAAM,EAAE,KAAKsB,KAAL,CAAWY,IAAX,CAAgBlC,MAFd;AAGVC,MAAAA,MAAM,EAAE,KAAKqB,KAAL,CAAWY,IAAX,CAAgBjC,MAHd;AAIVC,MAAAA,MAAM,EAAE,KAAKoB,KAAL,CAAWY,IAAX,CAAgBhC,MAJd;AAKVC,MAAAA,MAAM,EAAE,KAAKmB,KAAL,CAAWY,IAAX,CAAgB/B,MALd;AAMVC,MAAAA,MAAM,EAAE,KAAKkB,KAAL,CAAWY,IAAX,CAAgB9B;AANd,KAAd;AAQA,UAAMC,UAAU,GAAG,KAAKiB,KAAL,CAAWC,YAAX,CAAwBkF,kBAAxB,CAA2CzE,WAA3C,GAAyDO,KAAzD,CAA+D,IAA/D,CAAnB;AACA,SAAKnB,QAAL,CAAc;AACVf,MAAAA,UAAU,oBACH,KAAKP,KAAL,CAAWO,UADR;AAEN,SAACA,UAAU,CAAC,CAAD,CAAX,GAAiB,CAFX;AAGN,SAACA,UAAU,CAAC,CAAD,CAAX,GAAiB;AAHX;AADA,KAAd;AAOA,SAAKgB,WAAL;AAEH;;AAgPDqF,EAAAA,MAAM,GAAE;AACJ,UAAMC,OAAO,GAAG,KAAKR,WAAL,CAAiB,KAAK7E,KAAL,CAAWC,YAAX,CAAwBC,IAAzC,CAAhB;AACA,UAAMoF,OAAO,GAAG,KAAKN,UAAL,CAAgB,KAAKhF,KAAL,CAAWuF,WAAX,CAAuBrF,IAAvC,CAAhB;AACA,UAAMa,SAAS,GAAG,KAAKf,KAAL,CAAWC,YAAX,CAAwBe,QAAxB,CAAiCC,KAAjC,CAAuC,GAAvC,EAA4C,CAA5C,CAAlB;AACA,UAAMC,KAAK,GAAGC,QAAQ,CAACJ,SAAD,CAAR,GAAsB,KAAKf,KAAL,CAAWY,IAAX,CAAgBjC,MAApD;AACA,UAAM6G,YAAY,GAAG,KAAKxF,KAAL,CAAWC,YAAX,CAAwBwF,UAAxB,CAAmCxE,KAAnC,CAAyC,IAAzC,CAArB;AACA,UAAMyE,SAAS,GAAGF,YAAY,CAACG,GAAb,CAAiBC,MAAM,IAAIA,MAAM,KAAK,WAAX,GAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAQ,MAAA,OAAO,EAAE,KAAKtF,WAAtB;AAAmC,MAAA,KAAK,EAAC,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAL,EAAgF;AAAQ,MAAA,OAAO,EAAE,KAAKA,WAAtB;AAAmC,MAAA,KAAK,EAAC,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAhF,EAA6J;AAAQ,MAAA,OAAO,EAAE,KAAKA,WAAtB;AAAmC,MAAA,KAAK,EAAC,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA7J,CAAzB,GAA0Q;AAAQ,MAAA,KAAK,EAAEsF,MAAf;AAAuB,MAAA,OAAO,EAAE,KAAKtF,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmDsF,MAAnD,CAArS,CAAlB;AACA,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAS,MAAA,SAAS,EAAC,MAAnB;AAA0B,MAAA,KAAK,EAAE;AAACC,QAAAA,WAAW,EAAE,OAAd;AAAuBC,QAAAA,SAAS,EAAE,sCAAlC;AAA0EC,QAAAA,YAAY,EAAE,EAAxF;AAA4FC,QAAAA,eAAe,kFAA3G;AAA+LC,QAAAA,cAAc,EAAE;AAA/M,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAsB,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADJ,EAII;AAAG,MAAA,SAAS,EAAC,UAAb;AAAwB,MAAA,KAAK,EAAE;AAACA,QAAAA,KAAK,EAAE;AAAR,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACc,KAAK1H,KAAL,CAAWc,iBADzB,gGAJJ,EAOI;AAAQ,MAAA,OAAO,EAAE,KAAKoF,YAAtB;AAAoC,MAAA,SAAS,EAAC,iBAA9C;AAAgE,MAAA,KAAK,EAAE;AAACyB,QAAAA,UAAU,EAAE;AAAb,OAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,CADJ,CADJ,CADJ,EAcA;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,KAAK,EAAE;AAACC,QAAAA,UAAU,EAAE,EAAb;AAAiBJ,QAAAA,eAAe,oEAAhC;AAAsGC,QAAAA,cAAc,EAAE,OAAtH;AAA+HI,QAAAA,MAAM,EAAE,EAAvI;AAA2IR,QAAAA,WAAW,EAAE,OAAxJ;AAAiKC,QAAAA,SAAS,EAAE,sCAA5K;AAAoNC,QAAAA,YAAY,EAAE;AAAlO,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAI,MAAA,KAAK,EAAE;AAACG,QAAAA,KAAK,EAAE;AAAR,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAEA;AAAG,MAAA,KAAK,EAAE;AAACA,QAAAA,KAAK,EAAE;AAAR,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAwC,KAAKlG,KAAL,CAAWiE,KAAX,CAAiBjF,QAAzD,CAFA,EAEsE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFtE,EAGA;AAAG,MAAA,SAAS,EAAC,KAAb;AAAmB,MAAA,KAAK,EAAE;AAACsH,QAAAA,KAAK,EAAE,EAAR;AAAYT,QAAAA,WAAW,EAAE,OAAzB;AAAkCC,QAAAA,SAAS,EAAE,sCAA7C;AAAqFC,QAAAA,YAAY,EAAE;AAAnG,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmI,KAAKvH,KAAL,CAAWC,MAA9I,CAHA,EAGyJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHzJ,EAIA;AAAG,MAAA,KAAK,EAAE;AAACyH,QAAAA,KAAK,EAAE;AAAR,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAyC,KAAKlG,KAAL,CAAWiE,KAAX,CAAiBhF,SAA1D,CAJA,EAIwE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJxE,EAKA;AAAG,MAAA,SAAS,EAAC,KAAb;AAAmB,MAAA,KAAK,EAAE;AAACqH,QAAAA,KAAK,EAAE,EAAR;AAAYT,QAAAA,WAAW,EAAE,OAAzB;AAAkCC,QAAAA,SAAS,EAAE,sCAA7C;AAAqFC,QAAAA,YAAY,EAAE;AAAnG,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmI,KAAKvH,KAAL,CAAWE,MAA9I,CALA,EAKyJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALzJ,EAMA;AAAG,MAAA,KAAK,EAAE;AAACwH,QAAAA,KAAK,EAAE;AAAR,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA4C,KAAKlG,KAAL,CAAWiE,KAAX,CAAiB/E,YAA7D,CANA,EAM8E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAN9E,EAOA;AAAG,MAAA,SAAS,EAAC,KAAb;AAAmB,MAAA,KAAK,EAAE;AAACoH,QAAAA,KAAK,EAAE,EAAR;AAAYT,QAAAA,WAAW,EAAE,OAAzB;AAAkCC,QAAAA,SAAS,EAAE,sCAA7C;AAAqFC,QAAAA,YAAY,EAAE;AAAnG,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmI,KAAKvH,KAAL,CAAWG,MAA9I,CAPA,EAOyJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPzJ,EAQA;AAAG,MAAA,KAAK,EAAE;AAACuH,QAAAA,KAAK,EAAE;AAAR,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA4C,KAAKlG,KAAL,CAAWiE,KAAX,CAAiB9E,YAA7D,CARA,EAQ8E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAR9E,EASA;AAAG,MAAA,SAAS,EAAC,KAAb;AAAmB,MAAA,KAAK,EAAE;AAACmH,QAAAA,KAAK,EAAE,EAAR;AAAYT,QAAAA,WAAW,EAAE,OAAzB;AAAkCC,QAAAA,SAAS,EAAE,sCAA7C;AAAqFC,QAAAA,YAAY,EAAE;AAAnG,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmI,KAAKvH,KAAL,CAAWI,MAA9I,CATA,EASyJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATzJ,EAUA;AAAG,MAAA,KAAK,EAAE;AAACsH,QAAAA,KAAK,EAAE;AAAR,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAsC,KAAKlG,KAAL,CAAWiE,KAAX,CAAiB7E,MAAvD,CAVA,EAUkE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVlE,EAWA;AAAG,MAAA,SAAS,EAAC,KAAb;AAAmB,MAAA,KAAK,EAAE;AAACkH,QAAAA,KAAK,EAAE,EAAR;AAAYT,QAAAA,WAAW,EAAE,OAAzB;AAAkCC,QAAAA,SAAS,EAAE,sCAA7C;AAAqFC,QAAAA,YAAY,EAAE;AAAnG,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmI,KAAKvH,KAAL,CAAWK,MAA9I,CAXA,EAWyJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXzJ,EAYA;AAAG,MAAA,KAAK,EAAE;AAACqH,QAAAA,KAAK,EAAE;AAAR,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAwC,KAAKlG,KAAL,CAAWiE,KAAX,CAAiB5E,QAAzD,CAZA,EAYsE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZtE,EAaA;AAAG,MAAA,SAAS,EAAC,KAAb;AAAmB,MAAA,KAAK,EAAE;AAACiH,QAAAA,KAAK,EAAE,EAAR;AAAYT,QAAAA,WAAW,EAAE,OAAzB;AAAkCC,QAAAA,SAAS,EAAE,sCAA7C;AAAqFC,QAAAA,YAAY,EAAE;AAAnG,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmI,KAAKvH,KAAL,CAAWM,MAA9I,CAbA,EAayJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbzJ,CAFA,MADJ,EAkBI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAG,MAAA,KAAK,EAAE;AAACoH,QAAAA,KAAK,EAAE;AAAR,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADA,EAEA;AAAI,MAAA,SAAS,EAAC,KAAd;AAAoB,MAAA,KAAK,EAAE;AAACI,QAAAA,KAAK,EAAE,GAAR;AAAaT,QAAAA,WAAW,EAAE,OAA1B;AAAmCC,QAAAA,SAAS,EAAE,sCAA9C;AAAsFC,QAAAA,YAAY,EAAE;AAApG,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFA,EAGA;AAAI,MAAA,SAAS,EAAC,KAAd;AAAoB,MAAA,KAAK,EAAE;AAACO,QAAAA,KAAK,EAAE,GAAR;AAAaT,QAAAA,WAAW,EAAE,OAA1B;AAAmCC,QAAAA,SAAS,EAAE,sCAA9C;AAAsFC,QAAAA,YAAY,EAAE;AAApG,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAe,KAAKvH,KAAL,CAAWC,MAAX,GAAoB,KAAKD,KAAL,CAAWO,UAAX,CAAsBC,QAAzD,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgB,KAAKR,KAAL,CAAWE,MAAX,GAAoB,KAAKF,KAAL,CAAWO,UAAX,CAAsBE,SAA1D,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmB,KAAKT,KAAL,CAAWG,MAAX,GAAoB,KAAKH,KAAL,CAAWO,UAAX,CAAsBG,YAA7D,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmB,KAAKV,KAAL,CAAWI,MAAX,GAAoB,KAAKJ,KAAL,CAAWO,UAAX,CAAsBI,YAA7D,CALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAa,KAAKX,KAAL,CAAWK,MAAX,GAAoB,KAAKL,KAAL,CAAWO,UAAX,CAAsBK,MAAvD,CANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAe,KAAKZ,KAAL,CAAWM,MAAX,GAAoB,KAAKN,KAAL,CAAWO,UAAX,CAAsBM,QAAzD,CAPJ,CAHA,EAYA;AAAI,MAAA,KAAK,EAAE;AAAC6G,QAAAA,KAAK,EAAE;AAAR,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAZA,EAaA;AAAI,MAAA,KAAK,EAAE;AAACA,QAAAA,KAAK,EAAE;AAAR,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA2C,KAAK1H,KAAL,CAAWc,iBAAtD,CAbA,EAcA,oBAAC,MAAD;AAAQ,MAAA,UAAU,EAAE,KAAKa,UAAzB;AAAqC,MAAA,YAAY,EAAE,KAAKN,YAAxD;AAAsE,MAAA,iBAAiB,EAAE,KAAKrB,KAAL,CAAWc,iBAApG;AAAuH,MAAA,WAAW,EAAE,KAAKS,WAAzI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdA,CAlBJ,EAkCI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlCJ,EAmCI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAG,MAAA,KAAK,EAAE;AAACmG,QAAAA,KAAK,EAAE;AAAR,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADA,EAEC,KAAKlG,KAAL,CAAWI,MAAX,GAAoB;AAAI,MAAA,SAAS,EAAC,KAAd;AAAoB,MAAA,KAAK,EAAE;AAACkG,QAAAA,KAAK,EAAE,GAAR;AAAaT,QAAAA,WAAW,EAAE,OAA1B;AAAmCC,QAAAA,SAAS,EAAE,sCAA9C;AAAsFC,QAAAA,YAAY,EAAE;AAApG,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqI,KAAK,KAAK/F,KAAL,CAAWI,MAAX,CAAkB6C,UAA5J,CAApB,GAAmM,IAFpM,EAGA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAAC4C,QAAAA,WAAW,EAAE,OAAd;AAAuBC,QAAAA,SAAS,EAAE,sCAAlC;AAA0EC,QAAAA,YAAY,EAAE;AAAxF,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAY,KAAK/F,KAAL,CAAWC,YAAX,CAAwBwF,UAApC,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAc,KAAKzF,KAAL,CAAWC,YAAX,CAAwBsG,YAAtC,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAY,KAAKvG,KAAL,CAAWC,YAAX,CAAwBuG,UAApC,CAHJ,CAFJ,CAHA,EAWA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAACX,QAAAA,WAAW,EAAE,OAAd;AAAuBC,QAAAA,SAAS,EAAE,sCAAlC;AAA0EC,QAAAA,YAAY,EAAE;AAAxF,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAK/F,KAAL,CAAWuF,WAAX,CAAuBkB,SAAvB,CAAiCxF,KAAjC,CAAuC,KAAvC,EAA8CyF,GAA9C,EAAJ,CAFJ,CAXA,EAeA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAACb,QAAAA,WAAW,EAAE,OAAd;AAAuBC,QAAAA,SAAS,EAAE,sCAAlC;AAA0EC,QAAAA,YAAY,EAAE;AAAxF,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAK/F,KAAL,CAAWC,YAAX,CAAwB0G,SAA5B,CAFJ,CAfA,EAmBA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAACd,QAAAA,WAAW,EAAE,OAAd;AAAuBC,QAAAA,SAAS,EAAE,sCAAlC;AAA0EC,QAAAA,YAAY,EAAE;AAAxF,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEKL,SAFL,CAnBA,CAnCJ,EA2DI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAACY,QAAAA,KAAK,EAAE,GAAR;AAAaT,QAAAA,WAAW,EAAE,OAA1B;AAAmCC,QAAAA,SAAS,EAAE,sCAA9C;AAAsFC,QAAAA,YAAY,EAAE;AAApG,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAiB,KAAKvH,KAAL,CAAWgB,UAA5B,CADJ,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAAC8G,QAAAA,KAAK,EAAE,GAAR;AAAaT,QAAAA,WAAW,EAAE,OAA1B;AAAmCC,QAAAA,SAAS,EAAE,sCAA9C;AAAsFC,QAAAA,YAAY,EAAE;AAApG,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgB,KAAK/F,KAAL,CAAWY,IAAX,CAAgBlC,MAAhC,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAW,KAAKsB,KAAL,CAAWuF,WAAX,CAAuBqB,KAAvB,CAA6BC,IAAxC,CAFJ,CAJJ,EAQI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAACP,QAAAA,KAAK,EAAE,GAAR;AAAaT,QAAAA,WAAW,EAAE,OAA1B;AAAmCC,QAAAA,SAAS,EAAE,sCAA9C;AAAsFC,QAAAA,YAAY,EAAE;AAApG,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAc,KAAK/F,KAAL,CAAWC,YAAX,CAAwBe,QAAtC,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAYE,KAAZ,CAFJ,CARJ,EAYI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAACoF,QAAAA,KAAK,EAAE,GAAR;AAAaT,QAAAA,WAAW,EAAE,OAA1B;AAAmCC,QAAAA,SAAS,EAAE,sCAA9C;AAAsFC,QAAAA,YAAY,EAAE;AAApG,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,QAAQ,EAAE,KAAKlF,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EACmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADnD,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAkB,KAAKb,KAAL,CAAWuF,WAAX,CAAuBrF,IAAzC,CAFJ,EAEuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFvD,EAGI;AAAK,MAAA,GAAG,EAAEoF,OAAV;AAAmB,MAAA,SAAS,EAAC,gBAA7B;AAA8C,MAAA,KAAK,EAAE;AAACO,QAAAA,WAAW,EAAE,OAAd;AAAuBC,QAAAA,SAAS,EAAE,sCAAlC;AAA0EC,QAAAA,YAAY,EAAE;AAAxF,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAGuJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHvJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmB,KAAK/F,KAAL,CAAWC,YAAX,CAAwBC,IAA3C,CAJJ,EAKI;AAAK,MAAA,GAAG,EAAEmF,OAAV;AAAmB,MAAA,SAAS,EAAC,gBAA7B;AAA8C,MAAA,KAAK,EAAE;AAACQ,QAAAA,WAAW,EAAE,OAAd;AAAuBC,QAAAA,SAAS,EAAE,sCAAlC;AAA0EC,QAAAA,YAAY,EAAE;AAAxF,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ,CAZJ,CA3DJ,CAdA,CADJ;AAkGH;;AAtYqC;;AAyY1C,MAAMe,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACC,WADd;AAEL/G,IAAAA,YAAY,EAAE8G,KAAK,CAAC9G,YAFf;AAGLsF,IAAAA,WAAW,EAAEwB,KAAK,CAACxB,WAHd;AAILtB,IAAAA,KAAK,EAAE8C,KAAK,CAAC9C,KAJR;AAKLrD,IAAAA,IAAI,EAAEmG,KAAK,CAACnG,IALP;AAMLR,IAAAA,MAAM,EAAE2G,KAAK,CAAC3G,MANT;AAOLR,IAAAA,YAAY,EAAEmH,KAAK,CAACnH;AAPf,GAAP;AASH,CAVD;;AAYA,MAAMqH,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACLC,IAAAA,KAAK,EAAGC,YAAD,IAAkB;AACvBF,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,oBAAR;AAA8BC,QAAAA,IAAI,EAAEF;AAApC,OAAD,CAAR;AACD,KAHI;AAILG,IAAAA,OAAO,EAAGtC,QAAD,IAAc;AACnBiC,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,UAAR;AAAoBG,QAAAA,SAAS,EAAEvC;AAA/B,OAAD,CAAR;AACH,KANI;AAOLwC,IAAAA,WAAW,EAAGC,IAAD,IAAU;AACnBR,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,cAAR;AAAwBrI,QAAAA,QAAQ,EAAE0I;AAAlC,OAAD,CAAR;AACH,KATI;AAULC,IAAAA,YAAY,EAAGD,IAAD,IAAU;AACpBR,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,eAAR;AAAyBpI,QAAAA,SAAS,EAAEyI;AAApC,OAAD,CAAR;AACH,KAZI;AAaLE,IAAAA,eAAe,EAAGF,IAAD,IAAU;AACzBR,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,kBAAR;AAA4BnI,QAAAA,YAAY,EAAEwI;AAA1C,OAAD,CAAR;AACD,KAfI;AAgBLG,IAAAA,eAAe,EAAGH,IAAD,IAAU;AACzBR,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,kBAAR;AAA4BlI,QAAAA,YAAY,EAAEuI;AAA1C,OAAD,CAAR;AACD,KAlBI;AAmBLI,IAAAA,SAAS,EAAGJ,IAAD,IAAU;AACnBR,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,YAAR;AAAsBjI,QAAAA,MAAM,EAAEsI;AAA9B,OAAD,CAAR;AACD,KArBI;AAsBLK,IAAAA,WAAW,EAAGL,IAAD,IAAU;AACrBR,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,cAAR;AAAwBhI,QAAAA,QAAQ,EAAEqI;AAAlC,OAAD,CAAR;AACD,KAxBI;AAyBLM,IAAAA,OAAO,EAAGpH,IAAD,IAAU;AACfsG,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,UAAR;AAAoBzG,QAAAA;AAApB,OAAD,CAAR;AACH,KA3BI;AA4BLP,IAAAA,SAAS,EAAGD,MAAD,IAAY;AACnB8G,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,YAAR;AAAsBjH,QAAAA;AAAtB,OAAD,CAAR;AACH;AA9BI,GAAP;AAgCH,CAjCD;;AAmCA,eAAehC,OAAO,CAAC0I,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C3I,YAA7C,CAAf","sourcesContent":["import React from  'react'\nimport { connect } from 'react-redux'\nimport Skills from './Skills'\n\n\n\nclass NewCharacter extends React.Component{\n\n    state = {\n        strMod: 0,\n        dexMod: 0,\n        conMod: 0,\n        intMod: 0,\n        wisMod: 0,\n        chrMod: 0,\n        savingProf: {\n            strength: 0,\n            dexterity: 0,\n            constitution: 0,\n            intelligence: 0,\n            wisdom: 0,\n            charisma: 0\n        },\n        proficiencyPoints: 0,\n        armor: '',\n        armorClass: 0,\n        shield: false, \n        characterName: '',\n        characterAlignment: 'True Neutral',\n        character_id: 0\n    }\n\n    componentDidMount(){\n        this.setState({\n            strMod: this.props.mods.strMod,\n            dexMod: this.props.mods.dexMod,\n            conMod: this.props.mods.conMod,\n            intMod: this.props.mods.intMod,\n            wisMod: this.props.mods.wisMod,\n            chrMod: this.props.mods.chrMod\n        })\n        const savingProf = this.props.newCharClass.prof_saving_throws.toLowerCase().split(', ')\n        this.setState({\n            savingProf: {\n                ...this.state.savingProf,\n                [savingProf[0]]: 2,\n                [savingProf[1]]: 2\n            }\n        })\n        this.handleReset()\n        \n    }\n\n    handleChoice = () => {\n        if(this.state.proficiencyPoints > 0 ){\n            this.setState({\n                proficiencyPoints: this.state.proficiencyPoints - 1\n            })\n        } else if (this.state.proficiencyPoints === 0 ){\n            return\n        }\n    }\n\n    handleReset = () => {\n        if(this.props.newCharClass.name === 'Barbarian'){\n            this.setState({\n                proficiencyPoints: 2\n            })\n        } else if (this.props.newCharClass.name === 'Bard'){\n            this.setState({\n                proficiencyPoints: 3\n            })\n        } else if (this.props.newCharClass.name === 'CLeric'){\n            this.setState({\n                proficiencyPoints: 2\n            })\n        } else if (this.props.newCharClass.name === 'Druid'){\n            this.setState({\n                proficiencyPoints: 2\n            })\n        } else if (this.props.newCharClass.name === 'Fighter'){\n            this.setState({\n                proficiencyPoints: 2\n            })\n        } else if (this.props.newCharClass.name === 'Monk'){\n            this.setState({\n                proficiencyPoints: 2\n            })\n        } else if (this.props.newCharClass.name === 'Paladin'){\n            this.setState({\n                proficiencyPoints: 2\n            })\n        } else if (this.props.newCharClass.name === 'Ranger'){\n            this.setState({\n                proficiencyPoints: 3\n            })\n        } else if (this.props.newCharClass.name === 'Rogue'){\n            this.setState({\n                proficiencyPoints: 4\n            })\n        } else if (this.props.newCharClass.name === 'Sorcerer'){\n            this.setState({\n                proficiencyPoints: 2\n            })\n        } else if (this.props.newCharClass.name === 'Warlock'){\n            this.setState({\n                proficiencyPoints: 2\n            })\n        } else if (this.props.newCharClass.name === 'Wizard'){\n            this.setState({\n                proficiencyPoints: 2\n            })\n        }\n    }\n\n    handleNext = (skills) => {\n        this.props.AddSkills(skills)\n    }\n\n    handleArmor = (e) =>{\n        if(e.target.value === 'shields' || e.target.value === 'shields (druids will not wear armor or use shields made of metal)'){\n            if(this.state.shield === false){\n                this.setState({\n                    armorClass: this.state.armorClass + 2\n                })\n            }\n            this.setState({\n                shield: true\n            })\n        } else {\n            this.setState({\n                armor: e.target.value.toLowerCase()\n            },() =>  {this.calculateArmor()})\n        }\n    }\n\n    calculateArmor = () => {\n        if(this.state.armor === 'light armor'){\n            const armorClass = this.props.mods.dexMod + 11\n            this.setState({\n                armorClass: armorClass\n            })\n        } else if (this.state.armor === 'medium armor'){\n            const armorClass = this.props.mods.dexMod + 12\n            this.setState({\n                armorClass: armorClass\n            }) \n        } else if (this.state.armor === 'heavy armor'){\n            const armorClass = 14\n            this.setState({\n                armorClass: armorClass\n            }) \n        } else if (this.state.armor === 'none'){\n            const armorClass = this.props.mods.dexMod + 10\n            this.setState({\n                armorClass: armorClass\n            })\n        }\n        \n    }\n\n\n    handleSubmit =(e) =>  {\n        e.preventDefault()\n        if(this.props.skills && this.state.armorClass > 0){\n        const hitDieNum = this.props.newCharClass.hit_dice.split('d')[1]\n        const maxHP = parseInt(hitDieNum) + this.props.mods.conMod\n                fetch('http://localhost:3000/character_skills', {\n                method: 'POST',\n                headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n                },\n                body: JSON.stringify({\n                    character_id: this.props.character_id,\n                    acrobatics: this.props.skills.Acrobatics,\n                    animal_handling: this.props.skills.AnimalHandling,\n                    arcana: this.props.skills.Arcana,\n                    athletics: this.props.skills.Athletics,\n                    deception: this.props.skills.Deception,\n                    history: this.props.skills.History,\n                    insight: this.props.skills.Insight,\n                    intimidation: this.props.skills.Intimidation,\n                    investigation: this.props.skills.Investigation,\n                    medicine: this.props.skills.Medicine,\n                    nature: this.props.skills.Nature,\n                    perception: this.props.skills.Perception,\n                    performance: this.props.skills.Performance,\n                    persuasion: this.props.skills.Persuasion,\n                    religion: this.props.skills.Religion,\n                    sleight_of_hand: this.props.skills.SleightofHand,\n                    stealth: this.props.skills.Stealth\n                })\n            }).then(r => r.json()).then(console.log)\n                fetch('http://localhost:3000/character_stats', {\n                method: 'POST',\n                headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n                },\n                body: JSON.stringify({\n                    character_id: this.props.character_id,\n                    strength: this.props.stats.strength,\n                    dexterity: this.props.stats.dexterity,\n                    constitution: this.props.stats.constitution,\n                    intelligence: this.props.stats.intelligence,\n                    wisdom: this.props.stats.wisdom,\n                    charisma: this.props.stats.charisma,\n                    initiative: this.props.mods.dexMod,\n                    hp: maxHP,\n                    armor_class: this.state.armorClass,\n                    passive_perception: 10 + this.props.skills.Perception,\n                    proficiency_mod: 2\n                })\n            }).then(r => r.json()).then(this.handleCreate)\n            } else {\n            alert('You must pick skill proficiencies and armor class')\n            }\n        }\n            \n    \n\n    handleCreate = () => {\n        this.props.history.push('./profile')\n    }\n\n    handleLogout = () => {\n        localStorage.clear()\n        this.props.history.push('/')\n    }\n\n    getClassImg = (charClass) => {\n        if(charClass === 'Rogue'){\n            return require('./hooded-assassin.png')\n        } else if(charClass === 'Barbarian'){\n            return require('./barbarian.png')\n        } else if(charClass === 'Paladin'){\n            return require('./elf-helmet.png')\n        } else if(charClass === 'Warlock'){\n            return require('./warlock-hood.png')\n        } else if(charClass === 'Ranger'){\n            return require('./cowled.png')\n        } else if(charClass === 'Bard'){\n            return require('./musical-notes.png')\n        } else if(charClass === 'Cleric'){\n            return require('./pope-crown.png')\n        } else if(charClass === 'Druid'){\n            return require('./wolf-head.png')\n        } else if(charClass === 'Fighter'){\n            return require('./swordman.png')\n        } else if(charClass === 'Monk'){\n            return require('./monk-face.png')\n        } else if(charClass === 'Sorcerer'){\n            return require('./robe.png')\n        } else if(charClass === 'Wizard'){\n            return require('./wizard-staff.png')\n        }\n    }\n\n    getRaceImg = (charRace) => {\n        if(charRace === 'Dwarf'){\n            return require('./dwarf-king.png')\n        } else if(charRace === 'Hill Dwarf'){\n            return require('./dwarf-king.png')\n        } else if(charRace === 'Elf'){\n            return require('./woman-elf-face.png')\n        }else if(charRace === 'High Elf'){\n            return require('./woman-elf-face.png')\n        } else if(charRace === 'Halfling'){\n            return require('./hobbit-dwelling.png')\n        } else if(charRace === 'Lightfoot'){\n            return require('./hobbit-dwelling.png')\n        } else if(charRace === 'Human'){\n            return require('./sensuousness.png')\n        } else if(charRace === 'Dragonborn'){\n            return require('./spiked-dragon-head.png')\n        } else if(charRace === 'Gnome'){\n            return require('./bad-gnome.png')\n        } else if(charRace === 'Rock Gnome'){\n            return require('./bad-gnome.png')\n        } else if(charRace === 'Half-Elf'){\n            return require('./elf-ear.png')\n        } else if(charRace === 'Half-Orc'){\n            return require('./orc-head.png')\n        } else if(charRace === 'Tiefling'){\n            return require('./horned-reptile.png')\n        } \n    }\n\n    \n    \n    render(){\n        const clasImg = this.getClassImg(this.props.newCharClass.name)\n        const raceImg = this.getRaceImg(this.props.newCharRace.name)\n        const hitDieNum = this.props.newCharClass.hit_dice.split('d')[1]\n        const maxHP = parseInt(hitDieNum) + this.props.mods.conMod\n        const armorChoices = this.props.newCharClass.prof_armor.split(', ')\n        const armorBtns = armorChoices.map(choice => choice === 'All armor' ? <div><button onClick={this.handleArmor} value=\"light armor\">Light armor</button><button onClick={this.handleArmor} value=\"medium armor\">Medium armor</button><button onClick={this.handleArmor} value=\"heavy armor\">Heavy armor</button></div> : <button value={choice} onClick={this.handleArmor}>{choice}</button>)\n        return(\n            <div className=\"container\">\n                <section className=\"hero\" style={{borderStyle: 'ridge', boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)', borderRadius: 10, backgroundImage: `url(http://fanaru.com/fantasy-art/image/232259-fantasy-art-a-burning-rose.gif)`, backgroundSize: 'cover'}}>\n                    <div className=\"hero-body\">\n                        <div className=\"container\">\n                            <h1 className=\"title\" style={{color: 'white'}}>\n                                Pick Proficiencies & Armor class:\n                            </h1>\n                            <p className=\"subtitle\" style={{color: 'white'}}>\n                                You have {this.state.proficiencyPoints} given by your class. Confirm how to use them and pick your armor class before you confirm.\n                            </p>\n                            <button onClick={this.handleLogout} className=\"button is-black\" style={{marginLeft: 100}}>Logout</button>\n                        </div>\n                    </div>\n                </section>\n            <div className=\"columns\" style={{paddingTop: 50, backgroundImage: `url(https://media1.giphy.com/media/3o6UB9xT8upEDGrcqs/giphy.gif)`, backgroundSize: 'cover', margin: 20, borderStyle: 'ridge', boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)', borderRadius: 10}}>\n                <div className=\"column is-2 content\" >\n                \n                <ul>\n                <h2 style={{color: 'white'}}>Stats:</h2>\n                <p style={{color: 'white'}}>Strength - {this.props.stats.strength}</p><br></br>\n                <p className=\"box\" style={{width: 60, borderStyle: 'ridge', boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)', borderRadius: 10}}>{this.state.strMod}</p><br></br>\n                <p style={{color: 'white'}}>Dexterity - {this.props.stats.dexterity}</p><br></br>\n                <p className=\"box\" style={{width: 60, borderStyle: 'ridge', boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)', borderRadius: 10}}>{this.state.dexMod}</p><br></br>\n                <p style={{color: 'white'}}>Constitution - {this.props.stats.constitution}</p><br></br>\n                <p className=\"box\" style={{width: 60, borderStyle: 'ridge', boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)', borderRadius: 10}}>{this.state.conMod}</p><br></br>\n                <p style={{color: 'white'}}>Intelligence - {this.props.stats.intelligence}</p><br></br>\n                <p className=\"box\" style={{width: 60, borderStyle: 'ridge', boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)', borderRadius: 10}}>{this.state.intMod}</p><br></br>\n                <p style={{color: 'white'}}>Wisdom - {this.props.stats.wisdom}</p><br></br>\n                <p className=\"box\" style={{width: 60, borderStyle: 'ridge', boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)', borderRadius: 10}}>{this.state.wisMod}</p><br></br>\n                <p style={{color: 'white'}}>Charisma - {this.props.stats.charisma}</p><br></br>\n                <p className=\"box\" style={{width: 60, borderStyle: 'ridge', boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)', borderRadius: 10}}>{this.state.chrMod}</p><br></br>\n                </ul> </div>\n                <div className=\"column is-2\">\n                <p style={{color: 'white'}}>Proficiency Modifier:</p>\n                <li className=\"box\" style={{width: 180, borderStyle: 'ridge', boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)', borderRadius: 10}}>+ 2</li>\n                <ul className=\"box\" style={{width: 180, borderStyle: 'ridge', boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)', borderRadius: 10}}>\n                    <p>Saving Throws:</p>\n                    <li>Strength: {this.state.strMod + this.state.savingProf.strength}</li>\n                    <li>Dexterity: {this.state.dexMod + this.state.savingProf.dexterity}</li>\n                    <li>Constitution: {this.state.conMod + this.state.savingProf.constitution}</li>\n                    <li>Intelligence: {this.state.intMod + this.state.savingProf.intelligence}</li>\n                    <li>Wisdom: {this.state.wisMod + this.state.savingProf.wisdom}</li>\n                    <li>Charisma: {this.state.chrMod + this.state.savingProf.charisma}</li>\n                </ul>\n                <h3 style={{color: 'white'}}>Skills:</h3>\n                <h4 style={{color: 'white'}}>Points Left: {this.state.proficiencyPoints}</h4>\n                <Skills handleNext={this.handleNext} handleChoice={this.handleChoice} proficiencyPoints={this.state.proficiencyPoints} handleReset={this.handleReset}/>\n                </div>\n                <div className=\"column is-3\"></div>\n                <div className=\"column is-3\">\n                <p style={{color: 'white'}}>Passive Perception:</p>\n                {this.props.skills ? <li className=\"box\" style={{width: 180, borderStyle: 'ridge', boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)', borderRadius: 10}}>{10 + this.props.skills.Perception}</li> : null}\n                <div className=\"box\" style={{borderStyle: 'ridge', boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)', borderRadius: 10}}>\n                    <p>Other Proficiencies:</p>\n                    <ul>\n                        <li>armor: {this.props.newCharClass.prof_armor}</li>\n                        <li>weapons: {this.props.newCharClass.prof_weapons}</li>\n                        <li>tools: {this.props.newCharClass.prof_tools}</li>\n                    </ul>\n                </div>\n                <div className=\"box\" style={{borderStyle: 'ridge', boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)', borderRadius: 10}}>\n                    <p>Languages:</p>\n                    <p>{this.props.newCharRace.languages.split('_**').pop()}</p>\n                </div>\n                <div className=\"box\" style={{borderStyle: 'ridge', boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)', borderRadius: 10}} >\n                    <p>Equipment:</p>\n                    <p>{this.props.newCharClass.equipment}</p>\n                </div>\n                <div className=\"box\" style={{borderStyle: 'ridge', boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)', borderRadius: 10}}>\n                    <p>Armor Choice:</p>\n                    {armorBtns}\n                </div>\n                </div>\n                <div className=\"column is-2\">\n                    <div className=\"box\" style={{width: 180, borderStyle: 'ridge', boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)', borderRadius: 10}}>\n                        <p>Armor Class: {this.state.armorClass}</p>\n                    </div>\n                    <div className=\"box\" style={{width: 180, borderStyle: 'ridge', boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)', borderRadius: 10}}>\n                        <p>Initiative: {this.props.mods.dexMod}</p>\n                        <p>Speed: {this.props.newCharRace.speed.walk}</p>\n                    </div>\n                    <div className=\"box\" style={{width: 180, borderStyle: 'ridge', boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)', borderRadius: 10}}>\n                        <p>Hit Dice: {this.props.newCharClass.hit_dice}</p>\n                        <p>Max HP: {maxHP}</p>\n                    </div>\n                    <div className=\"box\" style={{width: 180, borderStyle: 'ridge', boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)', borderRadius: 10}}>\n                        <form onSubmit={this.handleSubmit}>\n                            <button type=\"submit\">Submit Character</button><br></br>\n                            <h2>Chosen Race: {this.props.newCharRace.name}</h2><br></br>\n                            <img src={raceImg} className=\"image is-96x96\" style={{borderStyle: 'ridge', boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)', borderRadius: 10}}/><br></br>\n                            <h2>Chosen Class: {this.props.newCharClass.name}</h2>\n                            <img src={clasImg} className=\"image is-96x96\" style={{borderStyle: 'ridge', boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)', borderRadius: 10}}/>\n                        </form>\n                    </div>\n                </div>\n            </div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (store) => {\n    return {\n      currentUser: store.currentUser,\n      newCharClass: store.newCharClass,\n      newCharRace: store.newCharRace,\n      stats: store.stats,\n      mods: store.mods,\n      skills: store.skills,\n      character_id: store.character_id\n    }\n}\n  \nconst mapDispatchToProps = (dispatch) => {\n    return {\n      LogIn: (loggedInUser) => {\n        dispatch({ type: 'LOGIN_CURRENT_USER', user: loggedInUser })\n      },\n      AddRace: (charRace) => {\n          dispatch({ type: 'ADD_Race', attribute: charRace })\n      },\n      AddStrength: (stat) => {\n          dispatch({ type: 'ADD_strength', strength: stat})\n      },\n      AddDexterity: (stat) => {\n          dispatch({ type: 'ADD_dexterity', dexterity: stat})\n      },\n      AddConstitution: (stat) => {\n        dispatch({ type: 'ADD_constitution', constitution: stat})\n      },\n      AddIntelligence: (stat) => {\n        dispatch({ type: 'ADD_intelligence', intelligence: stat})\n      },\n      AddWisdom: (stat) => {\n        dispatch({ type: 'ADD_wisdom', wisdom: stat})\n      },\n      AddCharisma: (stat) => {\n        dispatch({ type: 'ADD_charisma', charisma: stat})\n      },\n      AddMods: (mods) => {\n          dispatch({ type: 'ADD_MODS', mods })\n      },\n      AddSkills: (skills) => {\n          dispatch({ type: 'ADD_SKILLS', skills})\n      },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCharacter);"]},"metadata":{},"sourceType":"module"}