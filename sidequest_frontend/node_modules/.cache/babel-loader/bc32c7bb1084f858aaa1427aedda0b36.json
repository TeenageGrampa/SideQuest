{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/dan/Desktop/SideQuest/sidequest_frontend/node_modules/@babel/runtime/regenerator\");\n\nfunction asyncGeneratorStep(e, r, n, t, o, a, c) {\n  try {\n    var s = e[a](c),\n        u = s.value;\n  } catch (e) {\n    return void n(e);\n  }\n\n  s.done ? r(u) : Promise.resolve(u).then(t, o);\n}\n\nfunction _asyncToGenerator(e) {\n  return function () {\n    var r = this,\n        n = arguments;\n    return new Promise(function (t, o) {\n      var a = e.apply(r, n);\n\n      function c(e) {\n        asyncGeneratorStep(a, t, o, c, s, \"next\", e);\n      }\n\n      function s(e) {\n        asyncGeneratorStep(a, t, o, c, s, \"throw\", e);\n      }\n\n      c(void 0);\n    });\n  };\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n}), exports.default = void 0;\nvar DEBUG = !1,\n    API_KEY = null,\n    LANGUAGE = \"en\",\n    REGION = null,\n    GOOGLE_API = \"https://maps.google.com/maps/api/geocode/json\";\n\nfunction log(e) {\n  var r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n  DEBUG && (r ? console.warn(e) : console.log(e));\n}\n\nfunction handleUrl(e) {\n  return _handleUrl.apply(this, arguments);\n}\n\nfunction _handleUrl() {\n  return (_handleUrl = _asyncToGenerator(_regeneratorRuntime.mark(function e(r) {\n    var n, t;\n    return _regeneratorRuntime.wrap(function (e) {\n      for (;;) switch (e.prev = e.next) {\n        case 0:\n          return e.next = 2, fetch(r).catch(function () {\n            return Promise.reject(new Error(\"Error fetching data\"));\n          });\n\n        case 2:\n          return n = e.sent, e.next = 5, n.json().catch(function () {\n            return log(\"Error parsing server response\"), Promise.reject(new Error(\"Error parsing server response\"));\n          });\n\n        case 5:\n          if (\"OK\" !== (t = e.sent).status) {\n            e.next = 9;\n            break;\n          }\n\n          return log(t), e.abrupt(\"return\", t);\n\n        case 9:\n          return log(\"\".concat(t.error_message, \".\\nServer returned status code \").concat(t.status), !0), e.abrupt(\"return\", Promise.reject(new Error(\"\".concat(t.error_message, \".\\nServer returned status code \").concat(t.status))));\n\n        case 11:\n        case \"end\":\n          return e.stop();\n      }\n    }, e);\n  }))).apply(this, arguments);\n}\n\nvar _default = {\n  setApiKey: function (apiKey) {\n    API_KEY = apiKey;\n  },\n  setLanguage: function (language) {\n    LANGUAGE = language;\n  },\n  setRegion: function (region) {\n    REGION = region;\n  },\n  enableDebug: function () {\n    var e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];\n    DEBUG = e;\n  },\n  fromLatLng: function (lat, lng, apiKey, language, region) {\n    return _asyncToGenerator(_regeneratorRuntime.mark(function a() {\n      var c, s;\n      return _regeneratorRuntime.wrap(function (a) {\n        for (;;) switch (a.prev = a.next) {\n          case 0:\n            if (lat && lng) {\n              a.next = 3;\n              break;\n            }\n\n            return log(\"Provided coordinates are invalid\", !0), a.abrupt(\"return\", Promise.reject(new Error(\"Provided coordinates are invalid\")));\n\n          case 3:\n            return c = \"\".concat(lat, \",\").concat(lng), s = \"\".concat(GOOGLE_API, \"?latlng=\").concat(encodeURIComponent(c)), (apiKey || API_KEY) && (s += \"&key=\".concat(API_KEY = apiKey || API_KEY)), (language || LANGUAGE) && (s += \"&language=\".concat(LANGUAGE = language || LANGUAGE)), (region || REGION) && (REGION = region || REGION, s += \"&region=\".concat(encodeURIComponent(REGION))), a.abrupt(\"return\", handleUrl(s));\n\n          case 9:\n          case \"end\":\n            return a.stop();\n        }\n      }, a);\n    }))();\n  },\n  fromAddress: function (address, apiKey, language, region) {\n    return _asyncToGenerator(_regeneratorRuntime.mark(function o() {\n      var a;\n      return _regeneratorRuntime.wrap(function (o) {\n        for (;;) switch (o.prev = o.next) {\n          case 0:\n            if (address) {\n              o.next = 3;\n              break;\n            }\n\n            return log(\"Provided address is invalid\", !0), o.abrupt(\"return\", Promise.reject(new Error(\"Provided address is invalid\")));\n\n          case 3:\n            return a = \"\".concat(GOOGLE_API, \"?address=\").concat(encodeURIComponent(address)), (apiKey || API_KEY) && (a += \"&key=\".concat(API_KEY = apiKey || API_KEY)), (language || LANGUAGE) && (a += \"&language=\".concat(LANGUAGE = language || LANGUAGE)), (region || REGION) && (REGION = region || REGION, a += \"&region=\".concat(encodeURIComponent(REGION))), o.abrupt(\"return\", handleUrl(a));\n\n          case 8:\n          case \"end\":\n            return o.stop();\n        }\n      }, o);\n    }))();\n  }\n};\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}