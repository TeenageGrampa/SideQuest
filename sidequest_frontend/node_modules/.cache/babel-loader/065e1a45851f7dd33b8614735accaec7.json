{"ast":null,"code":"import _defineProperty from \"/Users/dan/Desktop/SideQuest/sidequest_frontend/sidequest/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/dan/Desktop/SideQuest/sidequest_frontend/sidequest/src/CharacterSheet.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Skills from './Skills';\n\nclass NewCharacter extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      strMod: 0,\n      dexMod: 0,\n      conMod: 0,\n      intMod: 0,\n      wisMod: 0,\n      chrMod: 0,\n      savingProf: {\n        strength: 0,\n        dexterity: 0,\n        constitution: 0,\n        intelligence: 0,\n        wisdom: 0,\n        charisma: 0\n      },\n      proficiencyPoints: 0,\n      armor: '',\n      armorClass: 0,\n      shield: false,\n      characterName: '',\n      characterAlignment: 'True Neutral'\n    };\n\n    this.handleChoice = () => {\n      if (this.state.proficiencyPoints > 0) {\n        this.setState({\n          proficiencyPoints: this.state.proficiencyPoints - 1\n        });\n      } else if (this.state.proficiencyPoints === 0) {\n        return;\n      }\n    };\n\n    this.handleReset = () => {\n      if (this.props.newCharClass.name === 'Barbarian') {\n        this.setState({\n          proficiencyPoints: 2\n        });\n      } else if (this.props.newCharClass.name === 'Bard') {\n        this.setState({\n          proficiencyPoints: 3\n        });\n      } else if (this.props.newCharClass.name === 'CLeric') {\n        this.setState({\n          proficiencyPoints: 2\n        });\n      } else if (this.props.newCharClass.name === 'Druid') {\n        this.setState({\n          proficiencyPoints: 2\n        });\n      } else if (this.props.newCharClass.name === 'Fighter') {\n        this.setState({\n          proficiencyPoints: 2\n        });\n      } else if (this.props.newCharClass.name === 'Monk') {\n        this.setState({\n          proficiencyPoints: 2\n        });\n      } else if (this.props.newCharClass.name === 'Paladin') {\n        this.setState({\n          proficiencyPoints: 2\n        });\n      } else if (this.props.newCharClass.name === 'Ranger') {\n        this.setState({\n          proficiencyPoints: 3\n        });\n      } else if (this.props.newCharClass.name === 'Rogue') {\n        this.setState({\n          proficiencyPoints: 4\n        });\n      } else if (this.props.newCharClass.name === 'Sorcerer') {\n        this.setState({\n          proficiencyPoints: 2\n        });\n      } else if (this.props.newCharClass.name === 'Warlock') {\n        this.setState({\n          proficiencyPoints: 2\n        });\n      } else if (this.props.newCharClass.name === 'Wizard') {\n        this.setState({\n          proficiencyPoints: 2\n        });\n      }\n    };\n\n    this.handleNext = skills => {\n      this.props.AddSkills(skills);\n    };\n\n    this.handleArmor = e => {\n      if (e.target.value === 'shields' || e.target.value === 'shields (druids will not wear armor or use shields made of metal)') {\n        if (this.state.shield === false) {\n          this.setState({\n            armorClass: this.state.armorClass + 2\n          });\n        }\n\n        this.setState({\n          shield: true\n        });\n      } else {\n        this.setState({\n          armor: e.target.value.toLowerCase()\n        }, () => {\n          this.calculateArmor();\n        });\n      }\n    };\n\n    this.calculateArmor = () => {\n      if (this.state.armor === 'light armor') {\n        const armorClass = this.props.mods.dexMod + 11;\n        this.setState({\n          armorClass: armorClass\n        });\n      } else if (this.state.armor === 'medium armor') {\n        const armorClass = this.props.mods.dexMod + 12;\n        this.setState({\n          armorClass: armorClass\n        });\n      } else if (this.state.armor === 'heavy armor') {\n        const armorClass = 14;\n        this.setState({\n          armorClass: armorClass\n        });\n      } else if (this.state.armor === 'none') {\n        const armorClass = this.props.mods.dexMod + 10;\n        this.setState({\n          armorClass: armorClass\n        });\n      }\n    };\n\n    this.nameChange = e => {\n      this.setState({\n        characterName: e.target.value\n      });\n    };\n\n    this.alignmentChoice = e => {\n      this.setState({\n        characterAlignment: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      console.log();\n      fetch('http://localhost:3000/characters', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          name: this.state.characterName,\n          level: 1,\n          alignment: this.state.characterAlignment,\n          user_id: this.props.currentUser.id\n        })\n      }).then(r => r.json()).then(character => {\n        return fetch('http://localhost:3000/character_classes', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          body: JSON.stringify({\n            character_id: character.id,\n            name: this.props.newCharClass.name,\n            desc: this.props.newCharClass.desc,\n            hit_dice: this.props.newCharClass.hit_dice,\n            armor_prof: this.props.newCharClass.armor_prof,\n            prof_weapons: this.props.newCharClass.prof_weapons,\n            prof_tools: this.props.newCharClass.prof_tools,\n            prof_saving_throws: this.props.newCharClass.prof_saving_throws,\n            prof_skills: this.props.newCharClass.prof_skills,\n            equipment: this.props.newCharClass.equipment,\n            spellcast_ability: this.props.newCharClass.spellcasting_ability\n          })\n        }).then(r => r.json()).then(fetch('http://localhost:3000/character_races', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          body: JSON.stringify({\n            character_id: character.id,\n            name: this.props.newCharRace.name,\n            desc: this.props.newCharRace.desc,\n            age: this.props.newCharRace.age,\n            alignment: this.props.newCharRace.alignment,\n            size: this.props.newCharRace.size,\n            speed: this.props.newCharRace.speed.walk,\n            speed_desc: this.props.newCharRace.speed_desc,\n            languages: this.props.newCharRace.languages,\n            vision: this.props.newCharRace.vision,\n            traits: this.props.newCharRace.traits\n          })\n        }).then(r => r.json()).then(fetch('http://localhost:3000/character_mods', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          body: JSON.stringify({\n            character_id: character.id,\n            strmod: this.props.mods.strMod,\n            dexmod: this.props.mods.dexMod,\n            conmod: this.props.mods.conMod,\n            intmod: this.props.mods.intMod,\n            wismod: this.props.mods.wisMod,\n            chrmod: this.props.mods.chrMod\n          })\n        }).then(r => r.json()).then(fetch('http://localhost:3000/character_skills', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          body: JSON.stringify({\n            character_id: character.id,\n            acrobatics: this.props.skills.Acrobatics,\n            animal_handling: this.props.skills.AnimalHandling,\n            arcana: this.props.skills.Arcana,\n            athletics: this.props.skills.Athletics,\n            deception: this.props.skills.Deception,\n            history: this.props.skills.History,\n            insight: this.props.skills.Insight,\n            intimidation: this.props.skills.Intimidation,\n            investigation: this.props.skills.investigation,\n            medicine: this.props.skills.Medicine,\n            nature: this.props.skills.Nature,\n            perception: this.props.skills.Perception,\n            performance: this.props.skills.Performance,\n            persuasion: this.props.skills.Persuasion,\n            religion: this.props.skills.Religeon,\n            sleight_of_hand: this.props.skills.SleightofHand,\n            stealth: this.props.skills.stealth\n          })\n        }).then(r => r.json()).then(console.log))));\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      strMod: this.props.mods.strMod,\n      dexMod: this.props.mods.dexMod,\n      conMod: this.props.mods.conMod,\n      intMod: this.props.mods.intMod,\n      wisMod: this.props.mods.wisMod,\n      chrMod: this.props.mods.chrMod\n    });\n    const savingProf = this.props.newCharClass.prof_saving_throws.toLowerCase().split(', ');\n    this.setState({\n      savingProf: _objectSpread({}, this.state.savingProf, {\n        [savingProf[0]]: 2,\n        [savingProf[1]]: 2\n      })\n    });\n    this.handleReset();\n  }\n\n  render() {\n    console.log(this.state);\n    const hitDieNum = this.props.newCharClass.hit_dice.split('d')[1];\n    const maxHP = parseInt(hitDieNum) + this.props.mods.conMod;\n    const armorChoices = this.props.newCharClass.prof_armor.split(', ');\n    const armorBtns = armorChoices.map(choice => choice === 'All armor' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleArmor,\n      value: \"light armor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"Light armor\"), React.createElement(\"button\", {\n      onClick: this.handleArmor,\n      value: \"medium armor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"Medium armor\"), React.createElement(\"button\", {\n      onClick: this.handleArmor,\n      value: \"heavy armor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"Heavy armor\")) : React.createElement(\"button\", {\n      value: choice,\n      onClick: this.handleArmor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, choice));\n    return React.createElement(\"div\", {\n      className: \"columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \"Roll Your Stats:\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, \"Chosen Race: \", this.props.newCharRace.name), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"Chosen Class: \", this.props.newCharClass.name), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, \"Stats:\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"Strength - \", this.props.stats.strength), React.createElement(\"li\", {\n      className: \"box\",\n      style: {\n        width: 60\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, this.state.strMod), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \"Dexterity - \", this.props.stats.dexterity), React.createElement(\"li\", {\n      className: \"box\",\n      style: {\n        width: 60\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, this.state.dexMod), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, \"Constitution - \", this.props.stats.constitution), React.createElement(\"li\", {\n      className: \"box\",\n      style: {\n        width: 60\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, this.state.conMod), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"Intelligence - \", this.props.stats.intelligence), React.createElement(\"li\", {\n      className: \"box\",\n      style: {\n        width: 60\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, this.state.intMod), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, \"Wisdom - \", this.props.stats.wisdom), React.createElement(\"li\", {\n      className: \"box\",\n      style: {\n        width: 60\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, this.state.wisMod), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \"Charisma - \", this.props.stats.charisma), React.createElement(\"li\", {\n      className: \"box\",\n      style: {\n        width: 60\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, this.state.chrMod)), \" \"), React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Proficiency Modifier:\"), React.createElement(\"li\", {\n      className: \"box\",\n      style: {\n        width: 180\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, \"+ 2\"), React.createElement(\"ul\", {\n      className: \"box\",\n      style: {\n        width: 180\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"Saving Throws:\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, \"Strength: \", this.state.strMod + this.state.savingProf.strength), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, \"Dexterity: \", this.state.dexMod + this.state.savingProf.dexterity), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, \"Constitution: \", this.state.conMod + this.state.savingProf.constitution), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \"Intelligence: \", this.state.intMod + this.state.savingProf.intelligence), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"Wisdom: \", this.state.wisMod + this.state.savingProf.wisdom), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"Charisma: \", this.state.chrMod + this.state.savingProf.charisma)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, \"Skills:\"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, \"Points Left: \", this.state.proficiencyPoints), React.createElement(Skills, {\n      handleNext: this.handleNext,\n      handleChoice: this.handleChoice,\n      proficiencyPoints: this.state.proficiencyPoints,\n      handleReset: this.handleReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, \"Passive Perception:\"), this.props.skills ? React.createElement(\"li\", {\n      className: \"box\",\n      style: {\n        width: 180\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, 10 + this.props.skills.Perception) : null, React.createElement(\"div\", {\n      className: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, \"Other Proficiencies:\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, \"armor: \", this.props.newCharClass.prof_armor), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, \"weapons: \", this.props.newCharClass.prof_weapons), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, \"tools: \", this.props.newCharClass.prof_tools))), React.createElement(\"div\", {\n      className: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, \"Languages:\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, this.props.newCharRace.languages.split('_**').pop())), React.createElement(\"div\", {\n      className: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, \"Equipment:\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, this.props.newCharClass.equipment)), React.createElement(\"div\", {\n      className: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, \"Armor Choice:\"), armorBtns)), React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"box\",\n      style: {\n        width: 180\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, \"Armor Class: \", this.state.armorClass)), React.createElement(\"div\", {\n      className: \"box\",\n      style: {\n        width: 180\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, \"Initiative: \", this.props.mods.dexMod), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, \"Speed: \", this.props.newCharRace.speed.walk)), React.createElement(\"div\", {\n      className: \"box\",\n      style: {\n        width: 180\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, \"Hit Dice: \", this.props.newCharClass.hit_dice), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, \"Max HP: \", maxHP)), React.createElement(\"div\", {\n      className: \"box\",\n      style: {\n        width: 180\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, \"Name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"name\",\n      value: this.state.characterName,\n      onChange: this.nameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, \"Alignment:\"), React.createElement(\"select\", {\n      onChange: this.alignmentChoice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"True Neutral\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, \"True Neutral\"), React.createElement(\"option\", {\n      value: \"Chaotic Neutral\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, \"Chaotic Neutral\"), React.createElement(\"option\", {\n      value: \"Lawful Neutral\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, \"Lawful Neutral\"), React.createElement(\"option\", {\n      value: \"True Evil\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, \"True Evil\"), React.createElement(\"option\", {\n      value: \"True Good\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, \"True Good\"), React.createElement(\"option\", {\n      value: \"Lawful Good\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, \"Lawful Good\"), React.createElement(\"option\", {\n      value: \"Lawful Evil\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, \"Lawful Evil\"), React.createElement(\"option\", {\n      value: \"Chaotic Good\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, \"Chaotic Good\"), React.createElement(\"option\", {\n      value: \"Chaotic Evil\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, \"Chaotic Evil\")), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, \"Submit Character\")))));\n  }\n\n}\n\nconst mapStateToProps = store => {\n  return {\n    currentUser: store.currentUser,\n    newCharClass: store.newCharClass,\n    newCharRace: store.newCharRace,\n    stats: store.stats,\n    mods: store.mods,\n    skills: store.skills\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    LogIn: loggedInUser => {\n      dispatch({\n        type: 'LOGIN_CURRENT_USER',\n        user: loggedInUser\n      });\n    },\n    AddRace: charRace => {\n      dispatch({\n        type: 'ADD_Race',\n        attribute: charRace\n      });\n    },\n    AddStrength: stat => {\n      dispatch({\n        type: 'ADD_strength',\n        strength: stat\n      });\n    },\n    AddDexterity: stat => {\n      dispatch({\n        type: 'ADD_dexterity',\n        dexterity: stat\n      });\n    },\n    AddConstitution: stat => {\n      dispatch({\n        type: 'ADD_constitution',\n        constitution: stat\n      });\n    },\n    AddIntelligence: stat => {\n      dispatch({\n        type: 'ADD_intelligence',\n        intelligence: stat\n      });\n    },\n    AddWisdom: stat => {\n      dispatch({\n        type: 'ADD_wisdom',\n        wisdom: stat\n      });\n    },\n    AddCharisma: stat => {\n      dispatch({\n        type: 'ADD_charisma',\n        charisma: stat\n      });\n    },\n    AddMods: mods => {\n      dispatch({\n        type: 'ADD_MODS',\n        mods\n      });\n    },\n    AddSkills: skills => {\n      dispatch({\n        type: 'ADD_SKILLS',\n        skills\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCharacter);","map":{"version":3,"sources":["/Users/dan/Desktop/SideQuest/sidequest_frontend/sidequest/src/CharacterSheet.js"],"names":["React","connect","Skills","NewCharacter","Component","state","strMod","dexMod","conMod","intMod","wisMod","chrMod","savingProf","strength","dexterity","constitution","intelligence","wisdom","charisma","proficiencyPoints","armor","armorClass","shield","characterName","characterAlignment","handleChoice","setState","handleReset","props","newCharClass","name","handleNext","skills","AddSkills","handleArmor","e","target","value","toLowerCase","calculateArmor","mods","nameChange","alignmentChoice","handleSubmit","preventDefault","console","log","fetch","method","headers","body","JSON","stringify","level","alignment","user_id","currentUser","id","then","r","json","character","character_id","desc","hit_dice","armor_prof","prof_weapons","prof_tools","prof_saving_throws","prof_skills","equipment","spellcast_ability","spellcasting_ability","newCharRace","age","size","speed","walk","speed_desc","languages","vision","traits","strmod","dexmod","conmod","intmod","wismod","chrmod","acrobatics","Acrobatics","animal_handling","AnimalHandling","arcana","Arcana","athletics","Athletics","deception","Deception","history","History","insight","Insight","intimidation","Intimidation","investigation","medicine","Medicine","nature","Nature","perception","Perception","performance","Performance","persuasion","Persuasion","religion","Religeon","sleight_of_hand","SleightofHand","stealth","componentDidMount","split","render","hitDieNum","maxHP","parseInt","armorChoices","prof_armor","armorBtns","map","choice","stats","width","pop","mapStateToProps","store","mapDispatchToProps","dispatch","LogIn","loggedInUser","type","user","AddRace","charRace","attribute","AddStrength","stat","AddDexterity","AddConstitution","AddIntelligence","AddWisdom","AddCharisma","AddMods"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAIA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA0C;AAAA;AAAA;AAAA,SAEtCC,KAFsC,GAE9B;AACJC,MAAAA,MAAM,EAAE,CADJ;AAEJC,MAAAA,MAAM,EAAE,CAFJ;AAGJC,MAAAA,MAAM,EAAE,CAHJ;AAIJC,MAAAA,MAAM,EAAE,CAJJ;AAKJC,MAAAA,MAAM,EAAE,CALJ;AAMJC,MAAAA,MAAM,EAAE,CANJ;AAOJC,MAAAA,UAAU,EAAE;AACRC,QAAAA,QAAQ,EAAE,CADF;AAERC,QAAAA,SAAS,EAAE,CAFH;AAGRC,QAAAA,YAAY,EAAE,CAHN;AAIRC,QAAAA,YAAY,EAAE,CAJN;AAKRC,QAAAA,MAAM,EAAE,CALA;AAMRC,QAAAA,QAAQ,EAAE;AANF,OAPR;AAeJC,MAAAA,iBAAiB,EAAE,CAff;AAgBJC,MAAAA,KAAK,EAAE,EAhBH;AAiBJC,MAAAA,UAAU,EAAE,CAjBR;AAkBJC,MAAAA,MAAM,EAAE,KAlBJ;AAmBJC,MAAAA,aAAa,EAAE,EAnBX;AAoBJC,MAAAA,kBAAkB,EAAE;AApBhB,KAF8B;;AAAA,SA8CtCC,YA9CsC,GA8CvB,MAAM;AACjB,UAAG,KAAKpB,KAAL,CAAWc,iBAAX,GAA+B,CAAlC,EAAqC;AACjC,aAAKO,QAAL,CAAc;AACVP,UAAAA,iBAAiB,EAAE,KAAKd,KAAL,CAAWc,iBAAX,GAA+B;AADxC,SAAd;AAGH,OAJD,MAIO,IAAI,KAAKd,KAAL,CAAWc,iBAAX,KAAiC,CAArC,EAAwC;AAC3C;AACH;AACJ,KAtDqC;;AAAA,SAuDtCQ,WAvDsC,GAuDxB,MAAM;AAChB,UAAG,KAAKC,KAAL,CAAWC,YAAX,CAAwBC,IAAxB,KAAiC,WAApC,EAAgD;AAC5C,aAAKJ,QAAL,CAAc;AACVP,UAAAA,iBAAiB,EAAE;AADT,SAAd;AAGH,OAJD,MAIO,IAAI,KAAKS,KAAL,CAAWC,YAAX,CAAwBC,IAAxB,KAAiC,MAArC,EAA4C;AAC/C,aAAKJ,QAAL,CAAc;AACVP,UAAAA,iBAAiB,EAAE;AADT,SAAd;AAGH,OAJM,MAIA,IAAI,KAAKS,KAAL,CAAWC,YAAX,CAAwBC,IAAxB,KAAiC,QAArC,EAA8C;AACjD,aAAKJ,QAAL,CAAc;AACVP,UAAAA,iBAAiB,EAAE;AADT,SAAd;AAGH,OAJM,MAIA,IAAI,KAAKS,KAAL,CAAWC,YAAX,CAAwBC,IAAxB,KAAiC,OAArC,EAA6C;AAChD,aAAKJ,QAAL,CAAc;AACVP,UAAAA,iBAAiB,EAAE;AADT,SAAd;AAGH,OAJM,MAIA,IAAI,KAAKS,KAAL,CAAWC,YAAX,CAAwBC,IAAxB,KAAiC,SAArC,EAA+C;AAClD,aAAKJ,QAAL,CAAc;AACVP,UAAAA,iBAAiB,EAAE;AADT,SAAd;AAGH,OAJM,MAIA,IAAI,KAAKS,KAAL,CAAWC,YAAX,CAAwBC,IAAxB,KAAiC,MAArC,EAA4C;AAC/C,aAAKJ,QAAL,CAAc;AACVP,UAAAA,iBAAiB,EAAE;AADT,SAAd;AAGH,OAJM,MAIA,IAAI,KAAKS,KAAL,CAAWC,YAAX,CAAwBC,IAAxB,KAAiC,SAArC,EAA+C;AAClD,aAAKJ,QAAL,CAAc;AACVP,UAAAA,iBAAiB,EAAE;AADT,SAAd;AAGH,OAJM,MAIA,IAAI,KAAKS,KAAL,CAAWC,YAAX,CAAwBC,IAAxB,KAAiC,QAArC,EAA8C;AACjD,aAAKJ,QAAL,CAAc;AACVP,UAAAA,iBAAiB,EAAE;AADT,SAAd;AAGH,OAJM,MAIA,IAAI,KAAKS,KAAL,CAAWC,YAAX,CAAwBC,IAAxB,KAAiC,OAArC,EAA6C;AAChD,aAAKJ,QAAL,CAAc;AACVP,UAAAA,iBAAiB,EAAE;AADT,SAAd;AAGH,OAJM,MAIA,IAAI,KAAKS,KAAL,CAAWC,YAAX,CAAwBC,IAAxB,KAAiC,UAArC,EAAgD;AACnD,aAAKJ,QAAL,CAAc;AACVP,UAAAA,iBAAiB,EAAE;AADT,SAAd;AAGH,OAJM,MAIA,IAAI,KAAKS,KAAL,CAAWC,YAAX,CAAwBC,IAAxB,KAAiC,SAArC,EAA+C;AAClD,aAAKJ,QAAL,CAAc;AACVP,UAAAA,iBAAiB,EAAE;AADT,SAAd;AAGH,OAJM,MAIA,IAAI,KAAKS,KAAL,CAAWC,YAAX,CAAwBC,IAAxB,KAAiC,QAArC,EAA8C;AACjD,aAAKJ,QAAL,CAAc;AACVP,UAAAA,iBAAiB,EAAE;AADT,SAAd;AAGH;AACJ,KAzGqC;;AAAA,SA2GtCY,UA3GsC,GA2GxBC,MAAD,IAAY;AACrB,WAAKJ,KAAL,CAAWK,SAAX,CAAqBD,MAArB;AACH,KA7GqC;;AAAA,SA+GtCE,WA/GsC,GA+GvBC,CAAD,IAAM;AAChB,UAAGA,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmB,SAAnB,IAAgCF,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmB,mEAAtD,EAA0H;AACtH,YAAG,KAAKhC,KAAL,CAAWiB,MAAX,KAAsB,KAAzB,EAA+B;AAC3B,eAAKI,QAAL,CAAc;AACVL,YAAAA,UAAU,EAAE,KAAKhB,KAAL,CAAWgB,UAAX,GAAwB;AAD1B,WAAd;AAGH;;AACD,aAAKK,QAAL,CAAc;AACVJ,UAAAA,MAAM,EAAE;AADE,SAAd;AAGH,OATD,MASO;AACH,aAAKI,QAAL,CAAc;AACVN,UAAAA,KAAK,EAAEe,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,WAAf;AADG,SAAd,EAEE,MAAO;AAAC,eAAKC,cAAL;AAAsB,SAFhC;AAGH;AACJ,KA9HqC;;AAAA,SAgItCA,cAhIsC,GAgIrB,MAAM;AACnB,UAAG,KAAKlC,KAAL,CAAWe,KAAX,KAAqB,aAAxB,EAAsC;AAClC,cAAMC,UAAU,GAAG,KAAKO,KAAL,CAAWY,IAAX,CAAgBjC,MAAhB,GAAyB,EAA5C;AACA,aAAKmB,QAAL,CAAc;AACVL,UAAAA,UAAU,EAAEA;AADF,SAAd;AAGH,OALD,MAKO,IAAI,KAAKhB,KAAL,CAAWe,KAAX,KAAqB,cAAzB,EAAwC;AAC3C,cAAMC,UAAU,GAAG,KAAKO,KAAL,CAAWY,IAAX,CAAgBjC,MAAhB,GAAyB,EAA5C;AACA,aAAKmB,QAAL,CAAc;AACVL,UAAAA,UAAU,EAAEA;AADF,SAAd;AAGH,OALM,MAKA,IAAI,KAAKhB,KAAL,CAAWe,KAAX,KAAqB,aAAzB,EAAuC;AAC1C,cAAMC,UAAU,GAAG,EAAnB;AACA,aAAKK,QAAL,CAAc;AACVL,UAAAA,UAAU,EAAEA;AADF,SAAd;AAGH,OALM,MAKA,IAAI,KAAKhB,KAAL,CAAWe,KAAX,KAAqB,MAAzB,EAAgC;AACnC,cAAMC,UAAU,GAAG,KAAKO,KAAL,CAAWY,IAAX,CAAgBjC,MAAhB,GAAyB,EAA5C;AACA,aAAKmB,QAAL,CAAc;AACVL,UAAAA,UAAU,EAAEA;AADF,SAAd;AAGH;AAEJ,KAvJqC;;AAAA,SAyJtCoB,UAzJsC,GAyJxBN,CAAD,IAAM;AACf,WAAKT,QAAL,CAAc;AACVH,QAAAA,aAAa,EAAEY,CAAC,CAACC,MAAF,CAASC;AADd,OAAd;AAGH,KA7JqC;;AAAA,SA+JtCK,eA/JsC,GA+JnBP,CAAD,IAAO;AACrB,WAAKT,QAAL,CAAc;AACVF,QAAAA,kBAAkB,EAAEW,CAAC,CAACC,MAAF,CAASC;AADnB,OAAd;AAGH,KAnKqC;;AAAA,SAqKtCM,YArKsC,GAqKvBR,CAAD,IAAQ;AAClBA,MAAAA,CAAC,CAACS,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR;AAEAC,MAAAA,KAAK,CAAC,kCAAD,EAAqC;AACtCC,QAAAA,MAAM,EAAE,MAD8B;AAEtCC,QAAAA,OAAO,EAAE;AACT,0BAAgB,kBADP;AAET,oBAAU;AAFD,SAF6B;AAMtCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBtB,UAAAA,IAAI,EAAE,KAAKzB,KAAL,CAAWkB,aADA;AAEjB8B,UAAAA,KAAK,EAAE,CAFU;AAGjBC,UAAAA,SAAS,EAAE,KAAKjD,KAAL,CAAWmB,kBAHL;AAIjB+B,UAAAA,OAAO,EAAE,KAAK3B,KAAL,CAAW4B,WAAX,CAAuBC;AAJf,SAAf;AANgC,OAArC,CAAL,CAYGC,IAZH,CAYQC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAZb,EAYuBF,IAZvB,CAY4BG,SAAS,IACjC;AACA,eAAOd,KAAK,CAAC,yCAAD,EAA4C;AACpDC,UAAAA,MAAM,EAAE,MAD4C;AAEpDC,UAAAA,OAAO,EAAE;AACT,4BAAgB,kBADP;AAET,sBAAU;AAFD,WAF2C;AAMpDC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBU,YAAAA,YAAY,EAAED,SAAS,CAACJ,EADP;AAEjB3B,YAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWC,YAAX,CAAwBC,IAFb;AAGjBiC,YAAAA,IAAI,EAAE,KAAKnC,KAAL,CAAWC,YAAX,CAAwBkC,IAHb;AAIjBC,YAAAA,QAAQ,EAAE,KAAKpC,KAAL,CAAWC,YAAX,CAAwBmC,QAJjB;AAKjBC,YAAAA,UAAU,EAAE,KAAKrC,KAAL,CAAWC,YAAX,CAAwBoC,UALnB;AAMjBC,YAAAA,YAAY,EAAE,KAAKtC,KAAL,CAAWC,YAAX,CAAwBqC,YANrB;AAOjBC,YAAAA,UAAU,EAAE,KAAKvC,KAAL,CAAWC,YAAX,CAAwBsC,UAPnB;AAQjBC,YAAAA,kBAAkB,EAAE,KAAKxC,KAAL,CAAWC,YAAX,CAAwBuC,kBAR3B;AASjBC,YAAAA,WAAW,EAAE,KAAKzC,KAAL,CAAWC,YAAX,CAAwBwC,WATpB;AAUjBC,YAAAA,SAAS,EAAE,KAAK1C,KAAL,CAAWC,YAAX,CAAwByC,SAVlB;AAWjBC,YAAAA,iBAAiB,EAAE,KAAK3C,KAAL,CAAWC,YAAX,CAAwB2C;AAX1B,WAAf;AAN8C,SAA5C,CAAL,CAmBJd,IAnBI,CAmBCC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAnBN,EAmBgBF,IAnBhB,CAmBqBX,KAAK,CAAC,uCAAD,EAA0C;AACvEC,UAAAA,MAAM,EAAE,MAD+D;AAEvEC,UAAAA,OAAO,EAAE;AACT,4BAAgB,kBADP;AAET,sBAAU;AAFD,WAF8D;AAMvEC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBU,YAAAA,YAAY,EAAED,SAAS,CAACJ,EADP;AAEjB3B,YAAAA,IAAI,EAAE,KAAKF,KAAL,CAAW6C,WAAX,CAAuB3C,IAFZ;AAGjBiC,YAAAA,IAAI,EAAE,KAAKnC,KAAL,CAAW6C,WAAX,CAAuBV,IAHZ;AAIjBW,YAAAA,GAAG,EAAE,KAAK9C,KAAL,CAAW6C,WAAX,CAAuBC,GAJX;AAKjBpB,YAAAA,SAAS,EAAE,KAAK1B,KAAL,CAAW6C,WAAX,CAAuBnB,SALjB;AAMjBqB,YAAAA,IAAI,EAAE,KAAK/C,KAAL,CAAW6C,WAAX,CAAuBE,IANZ;AAOjBC,YAAAA,KAAK,EAAE,KAAKhD,KAAL,CAAW6C,WAAX,CAAuBG,KAAvB,CAA6BC,IAPnB;AAQjBC,YAAAA,UAAU,EAAE,KAAKlD,KAAL,CAAW6C,WAAX,CAAuBK,UARlB;AASjBC,YAAAA,SAAS,EAAE,KAAKnD,KAAL,CAAW6C,WAAX,CAAuBM,SATjB;AAUjBC,YAAAA,MAAM,EAAE,KAAKpD,KAAL,CAAW6C,WAAX,CAAuBO,MAVd;AAWjBC,YAAAA,MAAM,EAAE,KAAKrD,KAAL,CAAW6C,WAAX,CAAuBQ;AAXd,WAAf;AANiE,SAA1C,CAAL,CAmBzBvB,IAnByB,CAmBpBC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAnBe,EAmBLF,IAnBK,CAmBAX,KAAK,CAAC,sCAAD,EAAyC;AACtEC,UAAAA,MAAM,EAAE,MAD8D;AAEtEC,UAAAA,OAAO,EAAE;AACT,4BAAgB,kBADP;AAET,sBAAU;AAFD,WAF6D;AAMtEC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBU,YAAAA,YAAY,EAAED,SAAS,CAACJ,EADP;AAEjByB,YAAAA,MAAM,EAAE,KAAKtD,KAAL,CAAWY,IAAX,CAAgBlC,MAFP;AAGjB6E,YAAAA,MAAM,EAAE,KAAKvD,KAAL,CAAWY,IAAX,CAAgBjC,MAHP;AAIjB6E,YAAAA,MAAM,EAAE,KAAKxD,KAAL,CAAWY,IAAX,CAAgBhC,MAJP;AAKjB6E,YAAAA,MAAM,EAAE,KAAKzD,KAAL,CAAWY,IAAX,CAAgB/B,MALP;AAMjB6E,YAAAA,MAAM,EAAE,KAAK1D,KAAL,CAAWY,IAAX,CAAgB9B,MANP;AAOjB6E,YAAAA,MAAM,EAAE,KAAK3D,KAAL,CAAWY,IAAX,CAAgB7B;AAPP,WAAf;AANgE,SAAzC,CAAL,CAezB+C,IAfyB,CAepBC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAfe,EAeLF,IAfK,CAeAX,KAAK,CAAC,wCAAD,EAA2C;AACxEC,UAAAA,MAAM,EAAE,MADgE;AAExEC,UAAAA,OAAO,EAAE;AACT,4BAAgB,kBADP;AAET,sBAAU;AAFD,WAF+D;AAMxEC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBU,YAAAA,YAAY,EAAED,SAAS,CAACJ,EADP;AAEjB+B,YAAAA,UAAU,EAAE,KAAK5D,KAAL,CAAWI,MAAX,CAAkByD,UAFb;AAGjBC,YAAAA,eAAe,EAAE,KAAK9D,KAAL,CAAWI,MAAX,CAAkB2D,cAHlB;AAIjBC,YAAAA,MAAM,EAAE,KAAKhE,KAAL,CAAWI,MAAX,CAAkB6D,MAJT;AAKjBC,YAAAA,SAAS,EAAE,KAAKlE,KAAL,CAAWI,MAAX,CAAkB+D,SALZ;AAMjBC,YAAAA,SAAS,EAAE,KAAKpE,KAAL,CAAWI,MAAX,CAAkBiE,SANZ;AAOjBC,YAAAA,OAAO,EAAE,KAAKtE,KAAL,CAAWI,MAAX,CAAkBmE,OAPV;AAQjBC,YAAAA,OAAO,EAAE,KAAKxE,KAAL,CAAWI,MAAX,CAAkBqE,OARV;AASjBC,YAAAA,YAAY,EAAE,KAAK1E,KAAL,CAAWI,MAAX,CAAkBuE,YATf;AAUjBC,YAAAA,aAAa,EAAE,KAAK5E,KAAL,CAAWI,MAAX,CAAkBwE,aAVhB;AAWjBC,YAAAA,QAAQ,EAAE,KAAK7E,KAAL,CAAWI,MAAX,CAAkB0E,QAXX;AAYjBC,YAAAA,MAAM,EAAE,KAAK/E,KAAL,CAAWI,MAAX,CAAkB4E,MAZT;AAajBC,YAAAA,UAAU,EAAE,KAAKjF,KAAL,CAAWI,MAAX,CAAkB8E,UAbb;AAcjBC,YAAAA,WAAW,EAAE,KAAKnF,KAAL,CAAWI,MAAX,CAAkBgF,WAdd;AAejBC,YAAAA,UAAU,EAAE,KAAKrF,KAAL,CAAWI,MAAX,CAAkBkF,UAfb;AAgBjBC,YAAAA,QAAQ,EAAE,KAAKvF,KAAL,CAAWI,MAAX,CAAkBoF,QAhBX;AAiBjBC,YAAAA,eAAe,EAAE,KAAKzF,KAAL,CAAWI,MAAX,CAAkBsF,aAjBlB;AAkBjBC,YAAAA,OAAO,EAAE,KAAK3F,KAAL,CAAWI,MAAX,CAAkBuF;AAlBV,WAAf;AANkE,SAA3C,CAAL,CA0BzB7D,IA1ByB,CA0BpBC,CAAC,IAAIA,CAAC,CAACC,IAAF,EA1Be,EA0BLF,IA1BK,CA0BAb,OAAO,CAACC,GA1BR,CAfA,CAnBA,CAnBrB,CAAP;AAgFC,OA9FL;AA+FH,KAxQqC;AAAA;;AAyBtC0E,EAAAA,iBAAiB,GAAE;AACf,SAAK9F,QAAL,CAAc;AACVpB,MAAAA,MAAM,EAAE,KAAKsB,KAAL,CAAWY,IAAX,CAAgBlC,MADd;AAEVC,MAAAA,MAAM,EAAE,KAAKqB,KAAL,CAAWY,IAAX,CAAgBjC,MAFd;AAGVC,MAAAA,MAAM,EAAE,KAAKoB,KAAL,CAAWY,IAAX,CAAgBhC,MAHd;AAIVC,MAAAA,MAAM,EAAE,KAAKmB,KAAL,CAAWY,IAAX,CAAgB/B,MAJd;AAKVC,MAAAA,MAAM,EAAE,KAAKkB,KAAL,CAAWY,IAAX,CAAgB9B,MALd;AAMVC,MAAAA,MAAM,EAAE,KAAKiB,KAAL,CAAWY,IAAX,CAAgB7B;AANd,KAAd;AAQA,UAAMC,UAAU,GAAG,KAAKgB,KAAL,CAAWC,YAAX,CAAwBuC,kBAAxB,CAA2C9B,WAA3C,GAAyDmF,KAAzD,CAA+D,IAA/D,CAAnB;AACA,SAAK/F,QAAL,CAAc;AACVd,MAAAA,UAAU,oBACH,KAAKP,KAAL,CAAWO,UADR;AAEN,SAACA,UAAU,CAAC,CAAD,CAAX,GAAiB,CAFX;AAGN,SAACA,UAAU,CAAC,CAAD,CAAX,GAAiB;AAHX;AADA,KAAd;AAOA,SAAKe,WAAL;AAEH;;AA8ND+F,EAAAA,MAAM,GAAE;AACJ7E,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKzC,KAAjB;AACA,UAAMsH,SAAS,GAAG,KAAK/F,KAAL,CAAWC,YAAX,CAAwBmC,QAAxB,CAAiCyD,KAAjC,CAAuC,GAAvC,EAA4C,CAA5C,CAAlB;AACA,UAAMG,KAAK,GAAGC,QAAQ,CAACF,SAAD,CAAR,GAAsB,KAAK/F,KAAL,CAAWY,IAAX,CAAgBhC,MAApD;AACA,UAAMsH,YAAY,GAAG,KAAKlG,KAAL,CAAWC,YAAX,CAAwBkG,UAAxB,CAAmCN,KAAnC,CAAyC,IAAzC,CAArB;AACA,UAAMO,SAAS,GAAGF,YAAY,CAACG,GAAb,CAAiBC,MAAM,IAAIA,MAAM,KAAK,WAAX,GAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAQ,MAAA,OAAO,EAAE,KAAKhG,WAAtB;AAAmC,MAAA,KAAK,EAAC,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAL,EAAgF;AAAQ,MAAA,OAAO,EAAE,KAAKA,WAAtB;AAAmC,MAAA,KAAK,EAAC,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAhF,EAA6J;AAAQ,MAAA,OAAO,EAAE,KAAKA,WAAtB;AAAmC,MAAA,KAAK,EAAC,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA7J,CAAzB,GAA0Q;AAAQ,MAAA,KAAK,EAAEgG,MAAf;AAAuB,MAAA,OAAO,EAAE,KAAKhG,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmDgG,MAAnD,CAArS,CAAlB;AACA,WACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAkB,KAAKtG,KAAL,CAAW6C,WAAX,CAAuB3C,IAAzC,CAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmB,KAAKF,KAAL,CAAWC,YAAX,CAAwBC,IAA3C,CAHA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgB,KAAKF,KAAL,CAAWuG,KAAX,CAAiBtH,QAAjC,CAFA,EAGA;AAAI,MAAA,SAAS,EAAC,KAAd;AAAoB,MAAA,KAAK,EAAE;AAACuH,QAAAA,KAAK,EAAE;AAAR,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyC,KAAK/H,KAAL,CAAWC,MAApD,CAHA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAiB,KAAKsB,KAAL,CAAWuG,KAAX,CAAiBrH,SAAlC,CAJA,EAKA;AAAI,MAAA,SAAS,EAAC,KAAd;AAAoB,MAAA,KAAK,EAAE;AAACsH,QAAAA,KAAK,EAAE;AAAR,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyC,KAAK/H,KAAL,CAAWE,MAApD,CALA,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAoB,KAAKqB,KAAL,CAAWuG,KAAX,CAAiBpH,YAArC,CANA,EAOA;AAAI,MAAA,SAAS,EAAC,KAAd;AAAoB,MAAA,KAAK,EAAE;AAACqH,QAAAA,KAAK,EAAE;AAAR,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyC,KAAK/H,KAAL,CAAWG,MAApD,CAPA,EAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAoB,KAAKoB,KAAL,CAAWuG,KAAX,CAAiBnH,YAArC,CARA,EASA;AAAI,MAAA,SAAS,EAAC,KAAd;AAAoB,MAAA,KAAK,EAAE;AAACoH,QAAAA,KAAK,EAAE;AAAR,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyC,KAAK/H,KAAL,CAAWI,MAApD,CATA,EAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAc,KAAKmB,KAAL,CAAWuG,KAAX,CAAiBlH,MAA/B,CAVA,EAWA;AAAI,MAAA,SAAS,EAAC,KAAd;AAAoB,MAAA,KAAK,EAAE;AAACmH,QAAAA,KAAK,EAAE;AAAR,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyC,KAAK/H,KAAL,CAAWK,MAApD,CAXA,EAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgB,KAAKkB,KAAL,CAAWuG,KAAX,CAAiBjH,QAAjC,CAZA,EAaA;AAAI,MAAA,SAAS,EAAC,KAAd;AAAoB,MAAA,KAAK,EAAE;AAACkH,QAAAA,KAAK,EAAE;AAAR,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyC,KAAK/H,KAAL,CAAWM,MAApD,CAbA,CAJA,MADJ,EAoBI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADA,EAEA;AAAI,MAAA,SAAS,EAAC,KAAd;AAAoB,MAAA,KAAK,EAAE;AAACyH,QAAAA,KAAK,EAAE;AAAR,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFA,EAGA;AAAI,MAAA,SAAS,EAAC,KAAd;AAAoB,MAAA,KAAK,EAAE;AAACA,QAAAA,KAAK,EAAE;AAAR,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAe,KAAK/H,KAAL,CAAWC,MAAX,GAAoB,KAAKD,KAAL,CAAWO,UAAX,CAAsBC,QAAzD,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgB,KAAKR,KAAL,CAAWE,MAAX,GAAoB,KAAKF,KAAL,CAAWO,UAAX,CAAsBE,SAA1D,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmB,KAAKT,KAAL,CAAWG,MAAX,GAAoB,KAAKH,KAAL,CAAWO,UAAX,CAAsBG,YAA7D,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmB,KAAKV,KAAL,CAAWI,MAAX,GAAoB,KAAKJ,KAAL,CAAWO,UAAX,CAAsBI,YAA7D,CALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAa,KAAKX,KAAL,CAAWK,MAAX,GAAoB,KAAKL,KAAL,CAAWO,UAAX,CAAsBK,MAAvD,CANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAe,KAAKZ,KAAL,CAAWM,MAAX,GAAoB,KAAKN,KAAL,CAAWO,UAAX,CAAsBM,QAAzD,CAPJ,CAHA,EAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAZA,EAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAkB,KAAKb,KAAL,CAAWc,iBAA7B,CAbA,EAcA,oBAAC,MAAD;AAAQ,MAAA,UAAU,EAAE,KAAKY,UAAzB;AAAqC,MAAA,YAAY,EAAE,KAAKN,YAAxD;AAAsE,MAAA,iBAAiB,EAAE,KAAKpB,KAAL,CAAWc,iBAApG;AAAuH,MAAA,WAAW,EAAE,KAAKQ,WAAzI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdA,CApBJ,EAoCI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADA,EAEC,KAAKC,KAAL,CAAWI,MAAX,GAAoB;AAAI,MAAA,SAAS,EAAC,KAAd;AAAoB,MAAA,KAAK,EAAE;AAACoG,QAAAA,KAAK,EAAE;AAAR,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAK,KAAKxG,KAAL,CAAWI,MAAX,CAAkB8E,UAAjE,CAApB,GAAwG,IAFzG,EAGA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAY,KAAKlF,KAAL,CAAWC,YAAX,CAAwBkG,UAApC,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAc,KAAKnG,KAAL,CAAWC,YAAX,CAAwBqC,YAAtC,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAY,KAAKtC,KAAL,CAAWC,YAAX,CAAwBsC,UAApC,CAHJ,CAFJ,CAHA,EAWA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKvC,KAAL,CAAW6C,WAAX,CAAuBM,SAAvB,CAAiC0C,KAAjC,CAAuC,KAAvC,EAA8CY,GAA9C,EAAJ,CAFJ,CAXA,EAeA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKzG,KAAL,CAAWC,YAAX,CAAwByC,SAA5B,CAFJ,CAfA,EAmBA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEK0D,SAFL,CAnBA,CApCJ,EA4DI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAACI,QAAAA,KAAK,EAAE;AAAR,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAiB,KAAK/H,KAAL,CAAWgB,UAA5B,CADJ,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAAC+G,QAAAA,KAAK,EAAE;AAAR,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgB,KAAKxG,KAAL,CAAWY,IAAX,CAAgBjC,MAAhC,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAW,KAAKqB,KAAL,CAAW6C,WAAX,CAAuBG,KAAvB,CAA6BC,IAAxC,CAFJ,CAJJ,EAQI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAACuD,QAAAA,KAAK,EAAE;AAAR,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAc,KAAKxG,KAAL,CAAWC,YAAX,CAAwBmC,QAAtC,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAY4D,KAAZ,CAFJ,CARJ,EAYI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAACQ,QAAAA,KAAK,EAAE;AAAR,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,QAAQ,EAAE,KAAKzF,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,MAA/B;AAAsC,MAAA,KAAK,EAAE,KAAKtC,KAAL,CAAWkB,aAAxD;AAAuE,MAAA,QAAQ,EAAE,KAAKkB,UAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,EAII;AAAQ,MAAA,QAAQ,EAAE,KAAKC,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,KAAK,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAQ,MAAA,KAAK,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFJ,EAGI;AAAQ,MAAA,KAAK,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ,EAII;AAAQ,MAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,EAKI;AAAQ,MAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALJ,EAMI;AAAQ,MAAA,KAAK,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANJ,EAOI;AAAQ,MAAA,KAAK,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPJ,EAQI;AAAQ,MAAA,KAAK,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARJ,EASI;AAAQ,MAAA,KAAK,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATJ,CAJJ,EAeI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAfJ,CADJ,CAZJ,CA5DJ,CADJ;AA+FH;;AA/WqC;;AAkX1C,MAAM4F,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACL/E,IAAAA,WAAW,EAAE+E,KAAK,CAAC/E,WADd;AAEL3B,IAAAA,YAAY,EAAE0G,KAAK,CAAC1G,YAFf;AAGL4C,IAAAA,WAAW,EAAE8D,KAAK,CAAC9D,WAHd;AAIL0D,IAAAA,KAAK,EAAEI,KAAK,CAACJ,KAJR;AAKL3F,IAAAA,IAAI,EAAE+F,KAAK,CAAC/F,IALP;AAMLR,IAAAA,MAAM,EAAEuG,KAAK,CAACvG;AANT,GAAP;AAQH,CATD;;AAWA,MAAMwG,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACLC,IAAAA,KAAK,EAAGC,YAAD,IAAkB;AACvBF,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,oBAAR;AAA8BC,QAAAA,IAAI,EAAEF;AAApC,OAAD,CAAR;AACD,KAHI;AAILG,IAAAA,OAAO,EAAGC,QAAD,IAAc;AACnBN,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,UAAR;AAAoBI,QAAAA,SAAS,EAAED;AAA/B,OAAD,CAAR;AACH,KANI;AAOLE,IAAAA,WAAW,EAAGC,IAAD,IAAU;AACnBT,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,cAAR;AAAwB/H,QAAAA,QAAQ,EAAEqI;AAAlC,OAAD,CAAR;AACH,KATI;AAULC,IAAAA,YAAY,EAAGD,IAAD,IAAU;AACpBT,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,eAAR;AAAyB9H,QAAAA,SAAS,EAAEoI;AAApC,OAAD,CAAR;AACH,KAZI;AAaLE,IAAAA,eAAe,EAAGF,IAAD,IAAU;AACzBT,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,kBAAR;AAA4B7H,QAAAA,YAAY,EAAEmI;AAA1C,OAAD,CAAR;AACD,KAfI;AAgBLG,IAAAA,eAAe,EAAGH,IAAD,IAAU;AACzBT,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,kBAAR;AAA4B5H,QAAAA,YAAY,EAAEkI;AAA1C,OAAD,CAAR;AACD,KAlBI;AAmBLI,IAAAA,SAAS,EAAGJ,IAAD,IAAU;AACnBT,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,YAAR;AAAsB3H,QAAAA,MAAM,EAAEiI;AAA9B,OAAD,CAAR;AACD,KArBI;AAsBLK,IAAAA,WAAW,EAAGL,IAAD,IAAU;AACrBT,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,cAAR;AAAwB1H,QAAAA,QAAQ,EAAEgI;AAAlC,OAAD,CAAR;AACD,KAxBI;AAyBLM,IAAAA,OAAO,EAAGhH,IAAD,IAAU;AACfiG,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,UAAR;AAAoBpG,QAAAA;AAApB,OAAD,CAAR;AACH,KA3BI;AA4BLP,IAAAA,SAAS,EAAGD,MAAD,IAAY;AACnByG,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,YAAR;AAAsB5G,QAAAA;AAAtB,OAAD,CAAR;AACH;AA9BI,GAAP;AAgCH,CAjCD;;AAmCA,eAAe/B,OAAO,CAACqI,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CrI,YAA7C,CAAf","sourcesContent":["import React from  'react'\nimport { connect } from 'react-redux'\nimport Skills from './Skills'\n\n\n\nclass NewCharacter extends React.Component{\n\n    state = {\n        strMod: 0,\n        dexMod: 0,\n        conMod: 0,\n        intMod: 0,\n        wisMod: 0,\n        chrMod: 0,\n        savingProf: {\n            strength: 0,\n            dexterity: 0,\n            constitution: 0,\n            intelligence: 0,\n            wisdom: 0,\n            charisma: 0\n        },\n        proficiencyPoints: 0,\n        armor: '',\n        armorClass: 0,\n        shield: false, \n        characterName: '',\n        characterAlignment: 'True Neutral'\n    }\n\n    componentDidMount(){\n        this.setState({\n            strMod: this.props.mods.strMod,\n            dexMod: this.props.mods.dexMod,\n            conMod: this.props.mods.conMod,\n            intMod: this.props.mods.intMod,\n            wisMod: this.props.mods.wisMod,\n            chrMod: this.props.mods.chrMod\n        })\n        const savingProf = this.props.newCharClass.prof_saving_throws.toLowerCase().split(', ')\n        this.setState({\n            savingProf: {\n                ...this.state.savingProf,\n                [savingProf[0]]: 2,\n                [savingProf[1]]: 2\n            }\n        })\n        this.handleReset()\n        \n    }\n\n    handleChoice = () => {\n        if(this.state.proficiencyPoints > 0 ){\n            this.setState({\n                proficiencyPoints: this.state.proficiencyPoints - 1\n            })\n        } else if (this.state.proficiencyPoints === 0 ){\n            return\n        }\n    }\n    handleReset = () => {\n        if(this.props.newCharClass.name === 'Barbarian'){\n            this.setState({\n                proficiencyPoints: 2\n            })\n        } else if (this.props.newCharClass.name === 'Bard'){\n            this.setState({\n                proficiencyPoints: 3\n            })\n        } else if (this.props.newCharClass.name === 'CLeric'){\n            this.setState({\n                proficiencyPoints: 2\n            })\n        } else if (this.props.newCharClass.name === 'Druid'){\n            this.setState({\n                proficiencyPoints: 2\n            })\n        } else if (this.props.newCharClass.name === 'Fighter'){\n            this.setState({\n                proficiencyPoints: 2\n            })\n        } else if (this.props.newCharClass.name === 'Monk'){\n            this.setState({\n                proficiencyPoints: 2\n            })\n        } else if (this.props.newCharClass.name === 'Paladin'){\n            this.setState({\n                proficiencyPoints: 2\n            })\n        } else if (this.props.newCharClass.name === 'Ranger'){\n            this.setState({\n                proficiencyPoints: 3\n            })\n        } else if (this.props.newCharClass.name === 'Rogue'){\n            this.setState({\n                proficiencyPoints: 4\n            })\n        } else if (this.props.newCharClass.name === 'Sorcerer'){\n            this.setState({\n                proficiencyPoints: 2\n            })\n        } else if (this.props.newCharClass.name === 'Warlock'){\n            this.setState({\n                proficiencyPoints: 2\n            })\n        } else if (this.props.newCharClass.name === 'Wizard'){\n            this.setState({\n                proficiencyPoints: 2\n            })\n        }\n    }\n\n    handleNext = (skills) => {\n        this.props.AddSkills(skills)\n    }\n\n    handleArmor = (e) =>{\n        if(e.target.value === 'shields' || e.target.value === 'shields (druids will not wear armor or use shields made of metal)'){\n            if(this.state.shield === false){\n                this.setState({\n                    armorClass: this.state.armorClass + 2\n                })\n            }\n            this.setState({\n                shield: true\n            })\n        } else {\n            this.setState({\n                armor: e.target.value.toLowerCase()\n            },() =>  {this.calculateArmor()})\n        }\n    }\n\n    calculateArmor = () => {\n        if(this.state.armor === 'light armor'){\n            const armorClass = this.props.mods.dexMod + 11\n            this.setState({\n                armorClass: armorClass\n            })\n        } else if (this.state.armor === 'medium armor'){\n            const armorClass = this.props.mods.dexMod + 12\n            this.setState({\n                armorClass: armorClass\n            }) \n        } else if (this.state.armor === 'heavy armor'){\n            const armorClass = 14\n            this.setState({\n                armorClass: armorClass\n            }) \n        } else if (this.state.armor === 'none'){\n            const armorClass = this.props.mods.dexMod + 10\n            this.setState({\n                armorClass: armorClass\n            })\n        }\n        \n    }\n\n    nameChange = (e) =>{\n        this.setState({\n            characterName: e.target.value\n        })\n    }\n\n    alignmentChoice = (e) => {\n        this.setState({\n            characterAlignment: e.target.value\n        })\n    }\n\n    handleSubmit =(e) =>  {\n        e.preventDefault()\n        console.log();\n        \n        fetch('http://localhost:3000/characters', {\n            method: 'POST',\n            headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n            },\n            body: JSON.stringify({\n                name: this.state.characterName,\n                level: 1,\n                alignment: this.state.characterAlignment,\n                user_id: this.props.currentUser.id\n            })\n        }).then(r => r.json()).then(character => \n            {\n            return fetch('http://localhost:3000/character_classes', {\n                method: 'POST',\n                headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n                },\n                body: JSON.stringify({\n                    character_id: character.id,\n                    name: this.props.newCharClass.name,\n                    desc: this.props.newCharClass.desc,\n                    hit_dice: this.props.newCharClass.hit_dice, \n                    armor_prof: this.props.newCharClass.armor_prof,\n                    prof_weapons: this.props.newCharClass.prof_weapons,\n                    prof_tools: this.props.newCharClass.prof_tools,\n                    prof_saving_throws: this.props.newCharClass.prof_saving_throws,\n                    prof_skills: this.props.newCharClass.prof_skills,\n                    equipment: this.props.newCharClass.equipment,\n                    spellcast_ability: this.props.newCharClass.spellcasting_ability\n                })\n            }).then(r => r.json()).then(fetch('http://localhost:3000/character_races', {\n                method: 'POST',\n                headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n                },\n                body: JSON.stringify({\n                    character_id: character.id,\n                    name: this.props.newCharRace.name,\n                    desc: this.props.newCharRace.desc,\n                    age: this.props.newCharRace.age,\n                    alignment: this.props.newCharRace.alignment,\n                    size: this.props.newCharRace.size,\n                    speed: this.props.newCharRace.speed.walk,\n                    speed_desc: this.props.newCharRace.speed_desc,\n                    languages: this.props.newCharRace.languages,\n                    vision: this.props.newCharRace.vision,\n                    traits: this.props.newCharRace.traits\n                })\n            }).then(r => r.json()).then(fetch('http://localhost:3000/character_mods', {\n                method: 'POST',\n                headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n                },\n                body: JSON.stringify({\n                    character_id: character.id,\n                    strmod: this.props.mods.strMod,\n                    dexmod: this.props.mods.dexMod,\n                    conmod: this.props.mods.conMod,\n                    intmod: this.props.mods.intMod,\n                    wismod: this.props.mods.wisMod,\n                    chrmod: this.props.mods.chrMod\n                })\n            }).then(r => r.json()).then(fetch('http://localhost:3000/character_skills', {\n                method: 'POST',\n                headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n                },\n                body: JSON.stringify({\n                    character_id: character.id,\n                    acrobatics: this.props.skills.Acrobatics,\n                    animal_handling: this.props.skills.AnimalHandling,\n                    arcana: this.props.skills.Arcana,\n                    athletics: this.props.skills.Athletics,\n                    deception: this.props.skills.Deception,\n                    history: this.props.skills.History,\n                    insight: this.props.skills.Insight,\n                    intimidation: this.props.skills.Intimidation,\n                    investigation: this.props.skills.investigation,\n                    medicine: this.props.skills.Medicine,\n                    nature: this.props.skills.Nature,\n                    perception: this.props.skills.Perception,\n                    performance: this.props.skills.Performance,\n                    persuasion: this.props.skills.Persuasion,\n                    religion: this.props.skills.Religeon,\n                    sleight_of_hand: this.props.skills.SleightofHand,\n                    stealth: this.props.skills.stealth\n                })\n            }).then(r => r.json()).then(console.log))))\n            })\n    }\n    \n    render(){\n        console.log(this.state)\n        const hitDieNum = this.props.newCharClass.hit_dice.split('d')[1]\n        const maxHP = parseInt(hitDieNum) + this.props.mods.conMod\n        const armorChoices = this.props.newCharClass.prof_armor.split(', ')\n        const armorBtns = armorChoices.map(choice => choice === 'All armor' ? <div><button onClick={this.handleArmor} value=\"light armor\">Light armor</button><button onClick={this.handleArmor} value=\"medium armor\">Medium armor</button><button onClick={this.handleArmor} value=\"heavy armor\">Heavy armor</button></div> : <button value={choice} onClick={this.handleArmor}>{choice}</button>)\n        return(\n            <div className=\"columns\">\n                <div className=\"column\">\n                <h1>Roll Your Stats:</h1>\n                <h2>Chosen Race: {this.props.newCharRace.name}</h2>\n                <h2>Chosen Class: {this.props.newCharClass.name}</h2>\n                <ul>\n                <h2>Stats:</h2>\n                <li>Strength - {this.props.stats.strength}</li>\n                <li className=\"box\" style={{width: 60}}>{this.state.strMod}</li>\n                <li>Dexterity - {this.props.stats.dexterity}</li>\n                <li className=\"box\" style={{width: 60}}>{this.state.dexMod}</li>\n                <li>Constitution - {this.props.stats.constitution}</li>\n                <li className=\"box\" style={{width: 60}}>{this.state.conMod}</li>\n                <li>Intelligence - {this.props.stats.intelligence}</li>\n                <li className=\"box\" style={{width: 60}}>{this.state.intMod}</li>\n                <li>Wisdom - {this.props.stats.wisdom}</li>\n                <li className=\"box\" style={{width: 60}}>{this.state.wisMod}</li>\n                <li>Charisma - {this.props.stats.charisma}</li>\n                <li className=\"box\" style={{width: 60}}>{this.state.chrMod}</li>\n                </ul> </div>\n                <div className=\"column\">\n                <p>Proficiency Modifier:</p>\n                <li className=\"box\" style={{width: 180}}>+ 2</li>\n                <ul className=\"box\" style={{width: 180}}>\n                    <p>Saving Throws:</p>\n                    <li>Strength: {this.state.strMod + this.state.savingProf.strength}</li>\n                    <li>Dexterity: {this.state.dexMod + this.state.savingProf.dexterity}</li>\n                    <li>Constitution: {this.state.conMod + this.state.savingProf.constitution}</li>\n                    <li>Intelligence: {this.state.intMod + this.state.savingProf.intelligence}</li>\n                    <li>Wisdom: {this.state.wisMod + this.state.savingProf.wisdom}</li>\n                    <li>Charisma: {this.state.chrMod + this.state.savingProf.charisma}</li>\n                </ul>\n                <h3>Skills:</h3>\n                <h4>Points Left: {this.state.proficiencyPoints}</h4>\n                <Skills handleNext={this.handleNext} handleChoice={this.handleChoice} proficiencyPoints={this.state.proficiencyPoints} handleReset={this.handleReset}/>\n                </div>\n                <div className=\"column\">\n                <p>Passive Perception:</p>\n                {this.props.skills ? <li className=\"box\" style={{width: 180}}>{10 + this.props.skills.Perception}</li> : null}\n                <div className=\"box\">\n                    <p>Other Proficiencies:</p>\n                    <ul>\n                        <li>armor: {this.props.newCharClass.prof_armor}</li>\n                        <li>weapons: {this.props.newCharClass.prof_weapons}</li>\n                        <li>tools: {this.props.newCharClass.prof_tools}</li>\n                    </ul>\n                </div>\n                <div className=\"box\">\n                    <p>Languages:</p>\n                    <p>{this.props.newCharRace.languages.split('_**').pop()}</p>\n                </div>\n                <div className=\"box\">\n                    <p>Equipment:</p>\n                    <p>{this.props.newCharClass.equipment}</p>\n                </div>\n                <div className=\"box\">\n                    <p>Armor Choice:</p>\n                    {armorBtns}\n                </div>\n                </div>\n                <div className=\"column\">\n                    <div className=\"box\" style={{width: 180}}>\n                        <p>Armor Class: {this.state.armorClass}</p>\n                    </div>\n                    <div className=\"box\" style={{width: 180}}>\n                        <p>Initiative: {this.props.mods.dexMod}</p>\n                        <p>Speed: {this.props.newCharRace.speed.walk}</p>\n                    </div>\n                    <div className=\"box\" style={{width: 180}}>\n                        <p>Hit Dice: {this.props.newCharClass.hit_dice}</p>\n                        <p>Max HP: {maxHP}</p>\n                    </div>\n                    <div className=\"box\" style={{width: 180}}>\n                        <form onSubmit={this.handleSubmit}>\n                            <label>Name:</label>\n                            <input type='text' placeholder=\"name\" value={this.state.characterName} onChange={this.nameChange}/>\n                            <label>Alignment:</label>\n                            <select onChange={this.alignmentChoice}>\n                                <option value=\"True Neutral\">True Neutral</option>\n                                <option value=\"Chaotic Neutral\">Chaotic Neutral</option>\n                                <option value=\"Lawful Neutral\">Lawful Neutral</option>\n                                <option value=\"True Evil\">True Evil</option>\n                                <option value=\"True Good\">True Good</option>\n                                <option value=\"Lawful Good\">Lawful Good</option>\n                                <option value=\"Lawful Evil\">Lawful Evil</option>\n                                <option value=\"Chaotic Good\">Chaotic Good</option>\n                                <option value=\"Chaotic Evil\">Chaotic Evil</option>\n                            </select>\n                            <button type=\"submit\">Submit Character</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (store) => {\n    return {\n      currentUser: store.currentUser,\n      newCharClass: store.newCharClass,\n      newCharRace: store.newCharRace,\n      stats: store.stats,\n      mods: store.mods,\n      skills: store.skills\n    }\n}\n  \nconst mapDispatchToProps = (dispatch) => {\n    return {\n      LogIn: (loggedInUser) => {\n        dispatch({ type: 'LOGIN_CURRENT_USER', user: loggedInUser })\n      },\n      AddRace: (charRace) => {\n          dispatch({ type: 'ADD_Race', attribute: charRace })\n      },\n      AddStrength: (stat) => {\n          dispatch({ type: 'ADD_strength', strength: stat})\n      },\n      AddDexterity: (stat) => {\n          dispatch({ type: 'ADD_dexterity', dexterity: stat})\n      },\n      AddConstitution: (stat) => {\n        dispatch({ type: 'ADD_constitution', constitution: stat})\n      },\n      AddIntelligence: (stat) => {\n        dispatch({ type: 'ADD_intelligence', intelligence: stat})\n      },\n      AddWisdom: (stat) => {\n        dispatch({ type: 'ADD_wisdom', wisdom: stat})\n      },\n      AddCharisma: (stat) => {\n        dispatch({ type: 'ADD_charisma', charisma: stat})\n      },\n      AddMods: (mods) => {\n          dispatch({ type: 'ADD_MODS', mods })\n      },\n      AddSkills: (skills) => {\n          dispatch({ type: 'ADD_SKILLS', skills})\n      }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCharacter);"]},"metadata":{},"sourceType":"module"}