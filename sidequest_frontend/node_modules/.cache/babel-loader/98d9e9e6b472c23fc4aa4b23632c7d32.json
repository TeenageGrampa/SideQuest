{"ast":null,"code":"var _jsxFileName = \"/Users/dan/Desktop/SideQuest/sidequest_frontend/src/AllGames.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport NavBar from './NavBar';\n\nclass AllGames extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      AllGames: []\n    };\n\n    this.handleLogout = () => {\n      localStorage.clear();\n      this.props.history.push('/login');\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/games\").then(r => r.json()).then(games => this.setState({\n      AllGames: games\n    }));\n  }\n\n  render() {\n    console.log(this.state);\n    const AllGames = this.state.AllGames.map(game => React.createElement(\"div\", {\n      key: game.id,\n      className: \"box\",\n      className: \"columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Campaign Name:\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, game.name), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"EXP Level:\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, game.explevel), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Role Playing Intensity:\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, game.rplevel), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Created by:\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, game.dungeon_master.username)), React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Free Spots: \", 6 - game.party.length), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Party Members:\"))));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Logout\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"All Games:\"), AllGames);\n  }\n\n}\n\nconst mapStateToProps = store => {\n  return {\n    currentUser: store.currentUser\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    LogIn: loggedInUser => {\n      dispatch({\n        type: 'LOGIN_CURRENT_USER',\n        user: loggedInUser\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AllGames);","map":{"version":3,"sources":["/Users/dan/Desktop/SideQuest/sidequest_frontend/src/AllGames.js"],"names":["React","connect","NavBar","AllGames","Component","state","handleLogout","localStorage","clear","props","history","push","componentDidMount","fetch","then","r","json","games","setState","render","console","log","map","game","id","name","explevel","rplevel","dungeon_master","username","party","length","mapStateToProps","store","currentUser","mapDispatchToProps","dispatch","LogIn","loggedInUser","type","user"],"mappings":"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","sourcesContent":["import React from  'react'\nimport { connect } from 'react-redux'\nimport NavBar from './NavBar'\n\n\n\nclass AllGames extends React.Component{\n\n    state = {\n        AllGames: []\n    }\n    \n    componentDidMount(){\n        fetch(`http://localhost:3000/games`)\n        .then(r => r.json()).then(games => this.setState({\n            AllGames: games\n        }))\n    }\n\n    handleLogout = () => {\n        localStorage.clear()\n        this.props.history.push('/login')\n    }\n\n    \n\n\n\n    render(){\n        console.log(this.state)\n        const AllGames = this.state.AllGames.map(game => \n            <div key={game.id} className=\"box\" className=\"columns\">\n                <div className=\"column\">\n                    <h1>Campaign Name:</h1>\n                    <p>{game.name}</p>\n                    <h2>EXP Level:</h2>\n                    <p>{game.explevel}</p>\n                    <h2>Role Playing Intensity:</h2>\n                    <p>{game.rplevel}</p>\n                    <h3>Created by:</h3>\n                    <p>{game.dungeon_master.username}</p>\n                </div>\n                <div className=\"column\">\n                    <h2>Free Spots: {6 - game.party.length}</h2>\n                    <h2>Party Members:</h2>\n                    \n                </div>\n            </div>\n        )\n        return(\n            <div>\n                <NavBar />\n                <button onClick={this.handleLogout}>Logout</button>\n                <h1>All Games:</h1>\n                {AllGames}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (store) => {\n    return {\n        currentUser: store.currentUser,\n    }\n}\n  \nconst mapDispatchToProps = (dispatch) => {\n    return {\n      LogIn: (loggedInUser) => {\n        dispatch({ type: 'LOGIN_CURRENT_USER', user: loggedInUser })\n      }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AllGames);"]},"metadata":{},"sourceType":"module"}