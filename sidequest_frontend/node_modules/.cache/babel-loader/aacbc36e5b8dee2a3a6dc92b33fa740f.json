{"ast":null,"code":"var _jsxFileName = \"/Users/dan/Desktop/SideQuest/sidequest_frontend/sidequest/src/StatRoll.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport RaceInfo from './RaceInfo';\n\nclass NewCharacter extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Wisodm: 0\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Roll Your Stats:\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Chosen Race: \", this.props.newCharRace.name), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Chosen Class: \", this.props.newCharClass.name), React.createElement(\"ul\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Stats:\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Wisodm\"), React.createElement(\"li\", {\n      className: \"box\",\n      style: {\n        width: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.state.Wisodm)));\n  }\n\n}\n\nconst mapStateToProps = store => {\n  return {\n    currentUser: store.currentUser,\n    newCharClass: store.newCharClass,\n    newCharRace: store.newCharRace\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    LogIn: loggedInUser => {\n      dispatch({\n        type: 'LOGIN_CURRENT_USER',\n        user: loggedInUser\n      });\n    },\n    AddRace: charRace => {\n      dispatch({\n        type: 'ADD_Race',\n        attribute: charRace\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCharacter);","map":{"version":3,"sources":["/Users/dan/Desktop/SideQuest/sidequest_frontend/sidequest/src/StatRoll.js"],"names":["React","connect","RaceInfo","NewCharacter","Component","state","Wisodm","render","props","newCharRace","name","newCharClass","width","mapStateToProps","store","currentUser","mapDispatchToProps","dispatch","LogIn","loggedInUser","type","user","AddRace","charRace","attribute"],"mappings":";AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAGA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA0C;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACJC,MAAAA,MAAM,EAAE;AADJ,KAD8B;AAAA;;AAuCtCC,EAAAA,MAAM,GAAE;AAEJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAkB,KAAKC,KAAL,CAAWC,WAAX,CAAuBC,IAAzC,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmB,KAAKF,KAAL,CAAWG,YAAX,CAAwBD,IAA3C,CAHJ,EAII;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,EAGA;AAAI,MAAA,SAAS,EAAC,KAAd;AAAoB,MAAA,KAAK,EAAE;AAACE,QAAAA,KAAK,EAAE;AAAR,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyC,KAAKP,KAAL,CAAWC,MAApD,CAHA,CAJJ,CADJ;AAaH;;AAtDqC;;AAyD1C,MAAMO,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACC,WADd;AAELJ,IAAAA,YAAY,EAAEG,KAAK,CAACH,YAFf;AAGLF,IAAAA,WAAW,EAAEK,KAAK,CAACL;AAHd,GAAP;AAKH,CAND;;AAQA,MAAMO,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACLC,IAAAA,KAAK,EAAGC,YAAD,IAAkB;AACvBF,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,oBAAR;AAA8BC,QAAAA,IAAI,EAAEF;AAApC,OAAD,CAAR;AACD,KAHI;AAILG,IAAAA,OAAO,EAAGC,QAAD,IAAc;AACnBN,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,UAAR;AAAoBI,QAAAA,SAAS,EAAED;AAA/B,OAAD,CAAR;AACH;AANI,GAAP;AAQH,CATD;;AAWA,eAAetB,OAAO,CAACY,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cb,YAA7C,CAAf","sourcesContent":["import React from  'react'\nimport { connect } from 'react-redux'\nimport RaceInfo from './RaceInfo'\n\n\nclass NewCharacter extends React.Component{\n    state = {\n        Wisodm: 0\n    }\n\n    // componentDidMount(){\n    //     fetch('http://localhost:3000/profile',{\n    //     headers: {\n    //       'Authorization': `Bearer ${localStorage.token}`\n    //     }\n    //     })\n    //     .then(res => res.json())\n    //     .then(user => this.props.LogIn(user)\n    //     )\n    //     fetch('https://api-beta.open5e.com/races/')\n    //     .then(r => r.json())\n    //     .then(data => this.setState({\n    //         allRaces: data.results\n    //     }))\n    // }\n\n    // handleChange = (e) =>{\n    //     const newRace = e.target.value\n    //     this.setState({\n    //         currentRace: newRace\n    //     })\n    // }\n\n    // saveRace = (charRace) => {\n    //     this.props.AddRace(charRace)\n    //     console.log(this.props)\n    // }\n\n    // handleNext = () => {\n    //     this.props.history.push('/StatRoll')\n    // }\n\n\n\n    render(){\n        \n        return(\n            <div>\n                <h1>Roll Your Stats:</h1>\n                <h2>Chosen Race: {this.props.newCharRace.name}</h2>\n                <h2>Chosen Class: {this.props.newCharClass.name}</h2>\n                <ul className=\"column\">\n                <h2>Stats:</h2>\n                <li>Wisodm</li>\n                <li className=\"box\" style={{width: 10}}>{this.state.Wisodm}</li>\n                </ul>\n                \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (store) => {\n    return {\n      currentUser: store.currentUser,\n      newCharClass: store.newCharClass,\n      newCharRace: store.newCharRace\n    }\n}\n  \nconst mapDispatchToProps = (dispatch) => {\n    return {\n      LogIn: (loggedInUser) => {\n        dispatch({ type: 'LOGIN_CURRENT_USER', user: loggedInUser })\n      },\n      AddRace: (charRace) => {\n          dispatch({ type: 'ADD_Race', attribute: charRace })\n      }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCharacter);"]},"metadata":{},"sourceType":"module"}