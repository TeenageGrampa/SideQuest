{"ast":null,"code":"var _jsxFileName = \"/Users/dan/Desktop/SideQuest/sidequest_frontend/src/NavBar.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nclass NavBar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      AllCharacters: []\n    };\n\n    this.checkCharacters = () => {\n      fetch(\"http://localhost:3000/users/\".concat(this.props.currentUser.id)).then(r => r.json()).then(user => this.setState({\n        AllCharacters: user.characters\n      }, () => {\n        for (let i = 0; i < this.state.AllCharacters.length; i++) {\n          if (this.state.AllCharacters[i].race.length > 0 && this.state.AllCharacters[i].class.length > 0) {\n            console.log('checked');\n          } else {\n            fetch(\"http://localhost:3000/characters/\".concat(this.state.AllCharacters[i].id), {\n              method: 'DELETE'\n            }).then(r => r.json()).then(console.log('deleted'));\n          }\n        }\n      }));\n    };\n\n    this.handleLogout = () => {\n      localStorage.clear();\n      this.props.history.push('/');\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"columns container box field is-grouped\",\n      style: {\n        backgroundImage: \"url(http://fanaru.com/fantasy-art/image/232259-fantasy-art-a-burning-rose.gif)\",\n        backgroundSize: 'cover',\n        borderStyle: 'ridge',\n        boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)',\n        borderRadius: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"column control is-white is-small navHead\",\n      style: {\n        margin: 50\n      },\n      to: {\n        pathname: './profile'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Profile Page\"), React.createElement(Link, {\n      className: \"column control is-white is-small navHead\",\n      style: {\n        margin: 50\n      },\n      to: {\n        pathname: './NewGame'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"New Game\"), React.createElement(Link, {\n      className: \"column control is-white is-small navHead\",\n      style: {\n        margin: 50\n      },\n      to: {\n        pathname: './AllCharacters'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"All Characters\"), React.createElement(Link, {\n      className: \"column control is-white is-small navHead\",\n      style: {\n        margin: 50\n      },\n      to: {\n        pathname: './AllGames'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"All Games\"), React.createElement(Link, {\n      className: \"column control is-white is-small navHead\",\n      style: {\n        margin: 50\n      },\n      to: {\n        pathname: './NewClass'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Create New Character\"));\n  }\n\n}\n\nconst mapStateToProps = store => {\n  return {\n    currentUser: store.currentUser\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    LogIn: loggedInUser => {\n      dispatch({\n        type: 'LOGIN_CURRENT_USER',\n        user: loggedInUser\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);","map":{"version":3,"sources":["/Users/dan/Desktop/SideQuest/sidequest_frontend/src/NavBar.js"],"names":["React","connect","Link","NavBar","Component","state","AllCharacters","checkCharacters","fetch","props","currentUser","id","then","r","json","user","setState","characters","i","length","race","class","console","log","method","handleLogout","localStorage","clear","history","push","render","backgroundImage","backgroundSize","borderStyle","boxShadow","borderRadius","margin","pathname","mapStateToProps","store","mapDispatchToProps","dispatch","LogIn","loggedInUser","type"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\n\nclass NavBar extends React.Component{\n\n    state = {\n        AllCharacters: []\n    }\n\n\n    checkCharacters = () => {\n        fetch(`http://localhost:3000/users/${this.props.currentUser.id}`)\n        .then(r => r.json())\n        .then(user => this.setState({\n            AllCharacters: user.characters\n        }, () => {\n            for(let i = 0; i < this.state.AllCharacters.length; i++){\n                if(this.state.AllCharacters[i].race.length > 0 && this.state.AllCharacters[i].class.length > 0){\n                    console.log('checked')\n                } else {\n                    fetch(`http://localhost:3000/characters/${this.state.AllCharacters[i].id}`, {\n                        method: 'DELETE'\n                    }).then(r => r.json()).then(console.log('deleted'))\n                }\n            }\n        }))\n    }\n\n    handleLogout = () => {\n        localStorage.clear()\n        this.props.history.push('/')\n    }\n    \n\n\n    render(){\n        return(\n            <div className=\"columns container box field is-grouped\" style={{ backgroundImage: `url(http://fanaru.com/fantasy-art/image/232259-fantasy-art-a-burning-rose.gif)`, backgroundSize: 'cover', borderStyle: 'ridge', boxShadow: '10px 10px 18px -5px rgba(0,0,0,0.75)', borderRadius: 10}}>\n                    <Link className=\"column control is-white is-small navHead\" style={{margin: 50}}to={{pathname:'./profile'}} >Profile Page</Link>\n                    <Link className=\"column control is-white is-small navHead\" style={{margin: 50}} to={{pathname:'./NewGame'}} >New Game</Link>\n                    <Link className=\"column control is-white is-small navHead\" style={{margin: 50}} to={{pathname:'./AllCharacters'}} >All Characters</Link>\n                    <Link className=\"column control is-white is-small navHead\" style={{margin: 50}} to={{pathname:'./AllGames'}} >All Games</Link>\n                    <Link className=\"column control is-white is-small navHead\" style={{margin: 50}} to={{pathname:'./NewClass'}} >Create New Character</Link>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (store) => {\n    return {\n        currentUser: store.currentUser,\n    }\n}\n  \nconst mapDispatchToProps = (dispatch) => {\n    return {\n      LogIn: (loggedInUser) => {\n        dispatch({ type: 'LOGIN_CURRENT_USER', user: loggedInUser })\n      }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);"]},"metadata":{},"sourceType":"module"}