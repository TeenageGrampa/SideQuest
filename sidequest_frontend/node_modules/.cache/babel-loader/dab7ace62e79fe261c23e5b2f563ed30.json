{"ast":null,"code":"import _defineProperty from \"/Users/dan/Desktop/SideQuest/sidequest_frontend/sidequest/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from 'redux'; // const rootReducer = combineReducers({\n//     currentUser,\n//     newChar\n// })\n\nexport default rootReducer; // function currentUser( state = {}, action){\n//     switch(action.type) {\n//         case \"LOGIN_CURRENT_USER\":\n//             return {...state, currentUser: action.user}\n//         default:\n//             return state\n//     }\n// }\n\nfunction rootReducer(state = {}, action) {\n  switch (action.type) {\n    case \"LOGIN_CURRENT_USER\":\n      return _objectSpread({}, state, {\n        currentUser: action.user\n      });\n\n    case \"ADD_CLASS\":\n      return _objectSpread({}, state, {\n        newChar: {\n          newCharClass: action.attribute\n        }\n      });\n\n    case \"ADD_Race\":\n      return _objectSpread({}, state, {\n        newCharRace: action.attribute\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/dan/Desktop/SideQuest/sidequest_frontend/sidequest/src/reducers/rootReducer.js"],"names":["combineReducers","rootReducer","state","action","type","currentUser","user","newChar","newCharClass","attribute","newCharRace"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,OAAhC,C,CAEA;AACA;AACA;AACA;;AAEA,eAAeC,WAAf,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,SAASA,WAAT,CAAsBC,KAAK,GAAG,EAA9B,EAAkCC,MAAlC,EAAyC;AACrC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,oBAAL;AACI,+BAAWF,KAAX;AAAkBG,QAAAA,WAAW,EAAEF,MAAM,CAACG;AAAtC;;AACJ,SAAK,WAAL;AACI,+BAAWJ,KAAX;AAAkBK,QAAAA,OAAO,EAAC;AAAEC,UAAAA,YAAY,EAAEL,MAAM,CAACM;AAAvB;AAA1B;;AACJ,SAAK,UAAL;AACI,+BAAWP,KAAX;AAAkBQ,QAAAA,WAAW,EAAEP,MAAM,CAACM;AAAtC;;AAEJ;AACA,aAAOP,KAAP;AATJ;AAWH","sourcesContent":["import { combineReducers } from 'redux';\n\n// const rootReducer = combineReducers({\n//     currentUser,\n//     newChar\n// })\n\nexport default rootReducer;\n\n// function currentUser( state = {}, action){\n//     switch(action.type) {\n//         case \"LOGIN_CURRENT_USER\":\n//             return {...state, currentUser: action.user}\n\n//         default:\n//             return state\n//     }\n// }\n\nfunction rootReducer( state = {}, action){\n    switch(action.type){\n        case \"LOGIN_CURRENT_USER\":\n            return {...state, currentUser: action.user}\n        case \"ADD_CLASS\":\n            return {...state, newChar:{ newCharClass: action.attribute }}\n        case \"ADD_Race\":\n            return {...state, newCharRace: action.attribute }\n\n        default: \n        return state\n    }\n}\n\n  "]},"metadata":{},"sourceType":"module"}