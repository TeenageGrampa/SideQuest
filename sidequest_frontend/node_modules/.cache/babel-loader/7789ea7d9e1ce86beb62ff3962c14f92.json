{"ast":null,"code":"var _jsxFileName = \"/Users/dan/Desktop/SideQuest/sidequest_frontend/src/Inbox.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport NavBar from './NavBar';\n\nclass Inbox extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      requests: []\n    };\n\n    this.handleLogout = () => {\n      localStorage.clear();\n      this.props.history.push('/');\n    };\n  }\n\n  componentDidMount() {\n    for (let i = 0; i < this.props.location.state.requests.length; i++) {\n      fetch(\"http://localhost:3000/requests/\".concat(this.props.location.state.requests[i].id)).then(r => r.json()).then(request => this.setState({\n        requests: [...this.state.requests, request]\n      }));\n    }\n  }\n\n  render() {\n    console.log(this.props.location.state.requests);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = store => {\n  return {\n    currentUser: store.currentUser\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    LogIn: loggedInUser => {\n      dispatch({\n        type: 'LOGIN_CURRENT_USER',\n        user: loggedInUser\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Inbox);","map":{"version":3,"sources":["/Users/dan/Desktop/SideQuest/sidequest_frontend/src/Inbox.js"],"names":["React","connect","NavBar","Inbox","Component","state","requests","handleLogout","localStorage","clear","props","history","push","componentDidMount","i","location","length","fetch","id","then","r","json","request","setState","render","console","log","mapStateToProps","store","currentUser","mapDispatchToProps","dispatch","LogIn","loggedInUser","type","user"],"mappings":";AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAIA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAmC;AAAA;AAAA;AAAA,SAC/BC,KAD+B,GACvB;AACJC,MAAAA,QAAQ,EAAE;AADN,KADuB;;AAAA,SAgB/BC,YAhB+B,GAgBhB,MAAM;AACjBC,MAAAA,YAAY,CAACC,KAAb;AACA,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACH,KAnB8B;AAAA;;AAK/BC,EAAAA,iBAAiB,GAAE;AACf,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAG,KAAKJ,KAAL,CAAWK,QAAX,CAAoBV,KAApB,CAA0BC,QAA1B,CAAmCU,MAApD,EAA4DF,CAAC,EAA7D,EAAgE;AAC5DG,MAAAA,KAAK,0CAAmC,KAAKP,KAAL,CAAWK,QAAX,CAAoBV,KAApB,CAA0BC,QAA1B,CAAmCQ,CAAnC,EAAsCI,EAAzE,EAAL,CACCC,IADD,CACMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADX,EAECF,IAFD,CAEMG,OAAO,IAAI,KAAKC,QAAL,CAAc;AAC3BjB,QAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,QAAf,EAAyBgB,OAAzB;AADiB,OAAd,CAFjB;AAKH;AACJ;;AAUDE,EAAAA,MAAM,GAAE;AACJC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWK,QAAX,CAAoBV,KAApB,CAA0BC,QAAtC;AACA,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AA9B8B;;AAiCnC,MAAMqB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACC;AADd,GAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACLC,IAAAA,KAAK,EAAGC,YAAD,IAAkB;AACvBF,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,oBAAR;AAA8BC,QAAAA,IAAI,EAAEF;AAApC,OAAD,CAAR;AACD;AAHI,GAAP;AAKH,CAND;;AAQA,eAAehC,OAAO,CAAC0B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C3B,KAA7C,CAAf","sourcesContent":["import React from  'react'\nimport { connect } from 'react-redux'\nimport NavBar from './NavBar'\n\n\n\nclass Inbox extends React.Component{\n    state = {\n        requests: []\n    }\n\n    componentDidMount(){\n        for(let i=0; i < this.props.location.state.requests.length; i++){\n            fetch(`http://localhost:3000/requests/${this.props.location.state.requests[i].id}`)\n            .then(r => r.json())\n            .then(request => this.setState({\n                requests: [...this.state.requests, request]\n            }))\n        }\n    }\n\n    \n    handleLogout = () => {\n        localStorage.clear()\n        this.props.history.push('/')\n    }\n\n\n\n    render(){\n        console.log(this.props.location.state.requests)\n        return(\n            <div className=\"container\">\n                <NavBar />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (store) => {\n    return {\n      currentUser: store.currentUser,\n    }\n}\n  \nconst mapDispatchToProps = (dispatch) => {\n    return {\n      LogIn: (loggedInUser) => {\n        dispatch({ type: 'LOGIN_CURRENT_USER', user: loggedInUser })\n      }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Inbox);"]},"metadata":{},"sourceType":"module"}