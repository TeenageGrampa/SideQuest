{"ast":null,"code":"var _jsxFileName = \"/Users/dan/Desktop/SideQuest/sidequest_frontend/sidequest/src/Skills.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nclass Skills extends React.Component {\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      className: \"box\",\n      style: {\n        width: 200\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, this.props.newCharClass.name === 'Bard' ? React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"hi\") : null, this.props.mods.dexMod, \" - Acrobatics (Dex)\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, this.props.mods.wisMod, \" - Animal Handling (Wis)\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, this.props.mods.intMod, \" - Arcana (Int)\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, this.props.mods.strMod, \" - Athletics (Str)\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, this.props.mods.chrMod, \" - Deception (Cha)\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, this.props.mods.intMod, \" - History (Int)\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, this.props.mods.wisMod, \" - Insight (Wis)\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, this.props.mods.chrMod, \" - Intimidation (Cha\"), \")\", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, this.props.mods.intMod, \" - Investigation (Int)\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, this.props.mods.wisMod, \" - Medicine (Wis)\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, this.props.mods.intMod, \" - Nature (Int)\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, this.props.mods.wisMod, \" - Perception (Wis)\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, this.props.mods.chrMod, \" - Performance (Cha)\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, this.props.mods.chaMod, \" - Persuasion (Cha)\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.props.mods.intMod, \" - Religion (Int)\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, this.props.mods.dexMod, \" - Sleight of Hand (Dex)\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, this.props.mods.dexMod, \" - Stealth (Dex)\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, this.props.mods.wisMod, \" - Survival (Wis)\"));\n  }\n\n}\n\nconst mapStateToProps = store => {\n  return {\n    currentUser: store.currentUser,\n    newCharClass: store.newCharClass,\n    newCharRace: store.newCharRace,\n    stats: store.stats,\n    mods: store.mods\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    LogIn: loggedInUser => {\n      dispatch({\n        type: 'LOGIN_CURRENT_USER',\n        user: loggedInUser\n      });\n    },\n    AddRace: charRace => {\n      dispatch({\n        type: 'ADD_Race',\n        attribute: charRace\n      });\n    },\n    AddStrength: stat => {\n      dispatch({\n        type: 'ADD_strength',\n        strength: stat\n      });\n    },\n    AddDexterity: stat => {\n      dispatch({\n        type: 'ADD_dexterity',\n        dexterity: stat\n      });\n    },\n    AddConstitution: stat => {\n      dispatch({\n        type: 'ADD_constitution',\n        constitution: stat\n      });\n    },\n    AddIntelligence: stat => {\n      dispatch({\n        type: 'ADD_intelligence',\n        intelligence: stat\n      });\n    },\n    AddWisdom: stat => {\n      dispatch({\n        type: 'ADD_wisdom',\n        wisdom: stat\n      });\n    },\n    AddCharisma: stat => {\n      dispatch({\n        type: 'ADD_charisma',\n        charisma: stat\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Skills);","map":{"version":3,"sources":["/Users/dan/Desktop/SideQuest/sidequest_frontend/sidequest/src/Skills.js"],"names":["React","connect","Skills","Component","render","console","log","props","width","newCharClass","name","mods","dexMod","wisMod","intMod","strMod","chrMod","chaMod","mapStateToProps","store","currentUser","newCharRace","stats","mapDispatchToProps","dispatch","LogIn","loggedInUser","type","user","AddRace","charRace","attribute","AddStrength","stat","strength","AddDexterity","dexterity","AddConstitution","constitution","AddIntelligence","intelligence","AddWisdom","wisdom","AddCharisma","charisma"],"mappings":"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","sourcesContent":["import React from  'react'\nimport { connect } from 'react-redux'\n\nclass Skills extends React.Component{\n\n\n    render(){\n        console.log(this.props)\n        return(\n            <div className=\"box\" style={{width: 200}}>\n                <li>{this.props.newCharClass.name === 'Bard'  ? <button>hi</button> : null }{this.props.mods.dexMod} - Acrobatics (Dex)</li>\n                <p>{this.props.mods.wisMod} - Animal Handling (Wis)</p>\n                <p>{this.props.mods.intMod} - Arcana (Int)</p>\n                <p>{this.props.mods.strMod} - Athletics (Str)</p>\n                <p>{this.props.mods.chrMod} - Deception (Cha)</p>\n                <p>{this.props.mods.intMod} - History (Int)</p>\n                <p>{this.props.mods.wisMod} - Insight (Wis)</p>\n                <p>{this.props.mods.chrMod} - Intimidation (Cha</p>)\n                <p>{this.props.mods.intMod} - Investigation (Int)</p>\n                <p>{this.props.mods.wisMod} - Medicine (Wis)</p>\n                <p>{this.props.mods.intMod} - Nature (Int)</p>\n                <p>{this.props.mods.wisMod} - Perception (Wis)</p>\n                <p>{this.props.mods.chrMod} - Performance (Cha)</p>\n                <p>{this.props.mods.chaMod} - Persuasion (Cha)</p>\n                <p>{this.props.mods.intMod} - Religion (Int)</p>\n                <p>{this.props.mods.dexMod} - Sleight of Hand (Dex)</p>\n                <p>{this.props.mods.dexMod} - Stealth (Dex)</p>\n                <p>{this.props.mods.wisMod} - Survival (Wis)</p>\n            </div>\n        )\n    }\n\n}\n\n\nconst mapStateToProps = (store) => {\n    return {\n      currentUser: store.currentUser,\n      newCharClass: store.newCharClass,\n      newCharRace: store.newCharRace,\n      stats: store.stats,\n      mods: store.mods\n    }\n}\n  \nconst mapDispatchToProps = (dispatch) => {\n    return {\n      LogIn: (loggedInUser) => {\n        dispatch({ type: 'LOGIN_CURRENT_USER', user: loggedInUser })\n      },\n      AddRace: (charRace) => {\n          dispatch({ type: 'ADD_Race', attribute: charRace })\n      },\n      AddStrength: (stat) => {\n          dispatch({ type: 'ADD_strength', strength: stat})\n      },\n      AddDexterity: (stat) => {\n          dispatch({ type: 'ADD_dexterity', dexterity: stat})\n      },\n      AddConstitution: (stat) => {\n        dispatch({ type: 'ADD_constitution', constitution: stat})\n      },\n      AddIntelligence: (stat) => {\n        dispatch({ type: 'ADD_intelligence', intelligence: stat})\n      },\n      AddWisdom: (stat) => {\n        dispatch({ type: 'ADD_wisdom', wisdom: stat})\n      },\n      AddCharisma: (stat) => {\n        dispatch({ type: 'ADD_charisma', charisma: stat})\n      }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Skills);"]},"metadata":{},"sourceType":"module"}